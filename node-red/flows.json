[
    {
        "id": "aeb102358fecaa7c",
        "type": "tab",
        "label": "Step 1 (MQTT Standardization)",
        "disabled": true,
        "info": "To take raw MQTT messages and republish them to a standardized factory/{machine_id}/{metric_name} topic, with configuration done via a Change node",
        "env": []
    },
    {
        "id": "389b26273279e5c8",
        "type": "tab",
        "label": "Step 2",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "c0a7987ca656e902",
        "type": "tab",
        "label": "SmartPlug",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "e24bcad243f972df",
        "type": "tab",
        "label": "Test - Python Regression",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "412ea24796634f13",
        "type": "tab",
        "label": "Multiple Regression Flow",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "92aed38eddd445e6",
        "type": "tab",
        "label": "Job Energy Calculator",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "9d123742b98b63a7",
        "type": "tab",
        "label": "Ingest Prusa APIs",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "dd55f774d9b5b325",
        "type": "tab",
        "label": "Ingest Shelly MQTT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ac9683af7e82fb53",
        "type": "tab",
        "label": "Analysis API",
        "disabled": false,
        "info": "**Purpose:** This flow provides the backend API endpoint (`/api/analyze`) for the \"Energy Analysis Dashboard\" frontend page. It is responsible for fetching a detailed time-series dataset based on user selections, running a complex Python script to perform statistical and machine learning analysis, and returning the results to the user for visualization.",
        "env": []
    },
    {
        "id": "3248d6a231f4e9d0",
        "type": "tab",
        "label": "Live Predictor",
        "disabled": false,
        "info": "**Purpose:** This flow runs on a schedule to generate real-time power consumption predictions for all active Prusa printers. It uses a pre-trained machine learning model to make these predictions. The results are stored in the `ml_predictions` table, which allows Grafana to display a \"Predicted vs. Actual\" power graph.",
        "env": []
    },
    {
        "id": "fa2590c7f7889790",
        "type": "tab",
        "label": "Fetch Environmental Data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "249c21de5a8d56e0",
        "type": "tab",
        "label": "DPP API",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "44c225e855f817f8",
        "type": "tab",
        "label": "ESP Sensors",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "28ad1cc5547cbab4",
        "type": "tab",
        "label": "SimplyPrint Ingestion",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "c4582a5c3c4d6d09",
        "type": "tab",
        "label": "Master Ingestion Flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "088fab733419c707",
        "type": "tab",
        "label": "Historical Enrichment",
        "disabled": false,
        "info": "**Purpose:** This flow acts as a dedicated sub-routine for printers managed by the SimplyPrint cloud service. Its primary goal is to enrich the print job data with detailed information that is not available in the initial, high-level status poll.\r\n\r\n**Triggered By:** The \"Call Job Detail Subflow\" `link out` node in the `Master Ingestion Flow`.\r\n\r\n**Process:**\r\n1.  Receives live printer data and triggers a detailed API call to SimplyPrint for the currently active job.\r\n2.  Merges this detailed job data (which includes `customFields`, filament usage, etc.) with the live status.\r\n3.  Detects job start/end transitions to trigger energy calculations.\r\n4.  Triggers the G-code download and analysis process to get thumbnails and per-part data.\r\n5.  Outputs standardized messages to the main flow's `Data Output` section to update the `print_jobs` and `printer_status` tables.",
        "env": []
    },
    {
        "id": "efc63501e85537ea",
        "type": "tab",
        "label": "Job Energy Subflow",
        "disabled": false,
        "info": "**Purpose:** This sub-flow is responsible for a single, critical task: recording the cumulative energy meter reading (`energy_total_wh`) at the precise moment a new print job begins.\r\n\r\n**Triggered By:** The `Master Ingestion Flow` or the `Historical Enrichment Flow` when they detect a printer has transitioned from a non-printing to a printing state.\r\n\r\n**Process:**\r\n1.  Receives a trigger with the `device_id` and `filename`.\r\n2.  Waits a few seconds to ensure the `energy_data` table has been updated.\r\n3.  Checks if the `start_energy_wh` for this job has already been recorded.\r\n4.  If not, it fetches the latest `energy_total_wh` for the device.\r\n5.  It then updates the `print_jobs` table, setting the `start_energy_wh` to this value. This value is essential for calculating the final `session_energy_wh` when the job is complete.",
        "env": []
    },
    {
        "id": "f7f46f6cd7efe35e",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "**Purpose:** This sub-flow is responsible for the final energy calculation once a print job is complete.\r\n\r\n**Triggered By:** The `Master Ingestion Flow` or the `Historical Enrichment Flow` when they detect a printer has transitioned from a printing to a non-printing state.\r\n\r\n**Process:**\r\n1.  Receives a trigger with the `device_id` and `filename`.\r\n2.  Constructs and executes a single atomic SQL query.\r\n3.  This query fetches the latest cumulative energy reading, calculates the difference from the stored `start_energy_wh`, and saves the result in the `session_energy_wh` column of the `print_jobs` table.",
        "env": []
    },
    {
        "id": "38745ad5e3fcf018",
        "type": "tab",
        "label": "(tmp) uid",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ed507ef4772f051f",
        "type": "tab",
        "label": "Backfill Utility",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "51fdc2c5228199f5",
        "type": "group",
        "z": "c0a7987ca656e902",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "04afc50afe4e7567",
            "4d8634944c80fd5a",
            "890a40f8cc4f5870",
            "f52cb9f815c1ec3c",
            "abdc162f301a22bd",
            "06b71666ccb8c0d6"
        ],
        "x": 34,
        "y": 659,
        "w": 552,
        "h": 142
    },
    {
        "id": "fa9028e60e616fca",
        "type": "group",
        "z": "c0a7987ca656e902",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "07ffa8fe4b4bc480",
            "82d948411ee82457",
            "b3e5d4c6e270d5e2",
            "8b3a2d2051354225",
            "13ccce47f10fecd0",
            "ee5ed177de5c07f2"
        ],
        "x": 694,
        "y": 659,
        "w": 552,
        "h": 142
    },
    {
        "id": "f0f3249a92f3348a",
        "type": "group",
        "z": "c0a7987ca656e902",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "05a72e9daacb57d4",
            "a9049259d9ec799d",
            "d35d1066759ea635",
            "6d3c08ce5fc6c4a6",
            "a7f6bb1f126ccadc",
            "24a8a6c65da2626e"
        ],
        "x": 34,
        "y": 899,
        "w": 552,
        "h": 142
    },
    {
        "id": "1d2bd7ab961bbc92",
        "type": "group",
        "z": "412ea24796634f13",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a2d434818f6b64c7",
            "682e485f3a352113",
            "d501f7d7c64bd2b4",
            "5c548c4fb5d4d96b"
        ],
        "x": 74,
        "y": 679,
        "w": 862,
        "h": 242
    },
    {
        "id": "112713e3049f7ce2",
        "type": "group",
        "z": "aeb102358fecaa7c",
        "name": "Drivers Section",
        "style": {
            "label": true
        },
        "nodes": [
            "ce9f6098686337f7",
            "b50fb6a4ef34b95f",
            "a7b225aa5bd0b412",
            "d049b2d5d3dfbb19",
            "29a40f42b43f68c5",
            "a62a515b8ed8f24b",
            "652914c6c1a4023a",
            "c0af92f6dc9d95af",
            "1b53a63b57d653ce",
            "c141afbe0a19bf29",
            "d87d19069b853c42",
            "1240934c071c6d71",
            "50b10557684c5cb1",
            "c139db59324f25f7",
            "3a54aa7e26db42b5"
        ],
        "x": 14,
        "y": 293,
        "w": 698,
        "h": 454
    },
    {
        "id": "22e91b0fbb0eb8cd",
        "type": "group",
        "z": "aeb102358fecaa7c",
        "name": "Target Machine/Device",
        "style": {
            "label": true
        },
        "nodes": [
            "f0f6d80d274442c1",
            "0098b7e44cd1771b",
            "1a525568bc85bcd6",
            "9df6794104c8440b"
        ],
        "x": 14,
        "y": 53,
        "w": 698,
        "h": 148
    },
    {
        "id": "70285d6452ccfa1a",
        "type": "group",
        "z": "389b26273279e5c8",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2394fadc2a5e1ffd",
            "99dc0395eea3127a"
        ],
        "x": 494,
        "y": 759,
        "w": 312,
        "h": 142
    },
    {
        "id": "b9e7ac0c5e9bd9f9",
        "type": "group",
        "z": "389b26273279e5c8",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8f3e7bc8aa8c628b",
            "797078317007a183",
            "7205aeb72ebcf067",
            "bdb21c81e84f1fd8",
            "4acaf77f97d3bbd1",
            "2b1b644df2744f13"
        ],
        "x": 148,
        "y": 13,
        "w": 834,
        "h": 394
    },
    {
        "id": "7d314f8087d9043c",
        "type": "group",
        "z": "389b26273279e5c8",
        "name": "Analysis Section",
        "style": {
            "label": true
        },
        "nodes": [
            "85bd41e72d01aa1d",
            "cc3d0153a28f1229"
        ],
        "x": 154,
        "y": 433,
        "w": 618,
        "h": 134
    },
    {
        "id": "076c47cf58d53355",
        "type": "group",
        "z": "e24bcad243f972df",
        "name": "Analysis",
        "style": {
            "label": true
        },
        "nodes": [
            "fb12aa971871ac40",
            "a0ca650fd74f6314"
        ],
        "x": 214,
        "y": 553,
        "w": 1138,
        "h": 134
    },
    {
        "id": "faf9345af33162c6",
        "type": "group",
        "z": "e24bcad243f972df",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f3ffed341ba7d121",
            "736e73ef7d144b40",
            "711064a7b7dcab0f",
            "8ad3d089057afb69",
            "e0cc7a5564aaecec",
            "ca4a34e1cc5eac2e"
        ],
        "x": 208,
        "y": 53,
        "w": 1184,
        "h": 454
    },
    {
        "id": "e0b137ff47432f2e",
        "type": "group",
        "z": "44c225e855f817f8",
        "name": "MPU6050 ",
        "style": {
            "label": true
        },
        "nodes": [
            "5e9c772230c2d4b1",
            "fc75ba5343df4163",
            "93d1043233d62247"
        ],
        "x": 48,
        "y": 273,
        "w": 1474,
        "h": 834
    },
    {
        "id": "ce458d19dac54c24",
        "type": "group",
        "z": "44c225e855f817f8",
        "name": "MAX6675 K-Type Thermocouple Temperature:",
        "style": {
            "label": true
        },
        "nodes": [
            "024bf21a6248a91b",
            "8cc82821c9778c40",
            "1be94df15edd18b0",
            "3a967bc486f43c82",
            "cdf20cc9119bd677",
            "798789cfc80de203"
        ],
        "x": 74,
        "y": 1159,
        "w": 1032,
        "h": 142
    },
    {
        "id": "3227026642a6ed7d",
        "type": "group",
        "z": "44c225e855f817f8",
        "name": "DHT22 Temp & Humidity ",
        "style": {
            "label": true
        },
        "nodes": [
            "77f68480bd37ebd6",
            "4fb96e9054bdf405",
            "3e01886783462c76",
            "777b7e75e17f5c70",
            "b04fbf43fa8829ce",
            "7ef660eb1fcdad18",
            "2d1a2e9c46e83e5e",
            "883aea39948696ea",
            "ada47b8b28f15571",
            "eb13bac943346fd7"
        ],
        "x": 274,
        "y": 19,
        "w": 1072,
        "h": 222
    },
    {
        "id": "75074842157a7df5",
        "type": "group",
        "z": "44c225e855f817f8",
        "name": "Smart Plug",
        "style": {
            "label": true
        },
        "nodes": [
            "7a4b6bd3f341238a",
            "d3de12f14d0f6a67",
            "3549f4574b9800c8",
            "2e2665c651268a2b",
            "567460cf38ab8b90",
            "b8b9fa1094ca6c9c"
        ],
        "x": 54,
        "y": 1319,
        "w": 692,
        "h": 222
    },
    {
        "id": "b1bed7a2a4a4d39a",
        "type": "group",
        "z": "c4582a5c3c4d6d09",
        "name": "Data Input & Routing",
        "style": {
            "label": true
        },
        "nodes": [
            "02ea663491d7ef4b",
            "d6bbc141d674690b",
            "3bf69c618d3771ca",
            "b27da203e5c23ee9",
            "f4ec324598c62401",
            "ea15470d20a551d0",
            "2ad6a970bba49d5f",
            "f297e1970a6e9404",
            "5dda7fb58e2cb2a2",
            "9745ef2b3e3aa7e2",
            "e4a60772850676ff",
            "574260bbc0dc2b2f",
            "f3858a8857ffde13",
            "d43ff076a1a9a7bf",
            "b9a4c25e40aeeef0",
            "d72cfa8a09b4ac1a",
            "8df1e9e0aa3c3d82",
            "153a9432435bf76b",
            "23ca3a3983ca05ef",
            "7633245e76a0f219",
            "18c9e99643ee6bcd",
            "7e24e1bcd17d804e",
            "fa5fe3526a66b815",
            "ad0abf33e2e61735",
            "08941a4001c4ec9a"
        ],
        "x": 14,
        "y": 59,
        "w": 1652,
        "h": 702
    },
    {
        "id": "39cad17b39cec1d1",
        "type": "group",
        "z": "c4582a5c3c4d6d09",
        "name": "Data Processing & Enrichment",
        "style": {
            "stroke": "#0070c0",
            "label": true
        },
        "nodes": [
            "3bc77aad3c1f970d",
            "5a0b6ccc23334296",
            "6d7486e2afc97f13",
            "9fb13978446f7b8a",
            "8b6805e59ca0e048",
            "e5f04ef6f5bc94fc",
            "060a8b27d87f8bf9",
            "81d3cb6157d204a7",
            "38850782ee90eabb",
            "bfb231c8765823a8",
            "76e36f5c70691ad5",
            "76faa27c3f22fa95",
            "6f5a6bdde6455ef0",
            "abc0bca12f6f89e4",
            "721f5a33a2061419",
            "f81e90cc3d42a0f9",
            "52a6268367a8d644",
            "af3255605d249b0d",
            "c59b3ae72ac4073a",
            "075caf0daf376cc6",
            "de12c14d1a3c57d5",
            "f56cc50a4481ddce",
            "31b1ea47700de376",
            "4958a8c7f64eaabd",
            "af950d41f1c8252e",
            "b8edd70e91510d03",
            "19af9013e2ec06d3",
            "cb5a40c591c23af4",
            "c4637953a58714ae",
            "95202ab5fa233a47",
            "cda295997d384d1b",
            "3893c4f9f6dfef59",
            "1a68329a7809840d",
            "853372a55c401c65"
        ],
        "x": 1714,
        "y": 419,
        "w": 2112,
        "h": 762,
        "info": "This group takes the raw API data, parses it, standardizes it, detects job state changes, and triggers further enrichment processes."
    },
    {
        "id": "5f3f1baac114fb7c",
        "type": "group",
        "z": "c4582a5c3c4d6d09",
        "name": "Data Output",
        "style": {
            "stroke": "#92d04f",
            "label": true
        },
        "nodes": [
            "434602b76f18b34a",
            "bf152e33e1198b2b",
            "2686e15ef3e6984e",
            "af2f0b8c71e0ef6c",
            "711e7c68cc8edf38",
            "f571406301ee9470",
            "526fc8f040df3cba"
        ],
        "x": 2774,
        "y": 59,
        "w": 552,
        "h": 322
    },
    {
        "id": "97c76169fe166c15",
        "type": "group",
        "z": "3248d6a231f4e9d0",
        "name": "Data Input",
        "style": {
            "label": true
        },
        "nodes": [
            "766af32f4fe6ef26",
            "fb200dd03d87ca0a",
            "727ae746539a786d"
        ],
        "x": 54,
        "y": 119,
        "w": 312,
        "h": 202
    },
    {
        "id": "9c69214ff198d9d8",
        "type": "group",
        "z": "3248d6a231f4e9d0",
        "name": "Data Processing",
        "style": {
            "label": true
        },
        "nodes": [
            "5e276bfbbd3f9bb6",
            "f3cf04893924fa13",
            "ebffcd036e7af362",
            "3be8ddb37a93844d"
        ],
        "x": 454,
        "y": 239,
        "w": 312,
        "h": 262
    },
    {
        "id": "ac90879e0d7b329f",
        "type": "group",
        "z": "3248d6a231f4e9d0",
        "name": "Data Output",
        "style": {
            "label": true
        },
        "nodes": [
            "fb9f1203b23b0fbc",
            "c67612e2cda72292"
        ],
        "x": 834,
        "y": 419,
        "w": 272,
        "h": 142
    },
    {
        "id": "9e77943c233db3eb",
        "type": "group",
        "z": "ac9683af7e82fb53",
        "name": "Data Input",
        "style": {
            "label": true
        },
        "nodes": [
            "4918b67096adabfe",
            "e0f4357542e2412b"
        ],
        "x": 14,
        "y": 459,
        "w": 532,
        "h": 82
    },
    {
        "id": "6382c2e9dcb135c5",
        "type": "group",
        "z": "ac9683af7e82fb53",
        "name": "Data Processing",
        "style": {
            "label": true
        },
        "nodes": [
            "9f67b80add894bed",
            "fd667af16fc7af70",
            "970bdc8e3cb051e8"
        ],
        "x": 594,
        "y": 59,
        "w": 392,
        "h": 202
    },
    {
        "id": "4080a0de8969fa04",
        "type": "group",
        "z": "ac9683af7e82fb53",
        "name": "Data Output",
        "style": {
            "label": true,
            "stroke": "#0070c0"
        },
        "nodes": [
            "fc3e800f7322b583",
            "d69fce717cce3024",
            "c998f79c73ca0cda",
            "3dad15f0c8d11ced",
            "3592a09331fdbdbd",
            "2dc8f0c00c0dd79f"
        ],
        "x": 1034,
        "y": 239,
        "w": 992,
        "h": 302
    },
    {
        "id": "d46e71e1a4ec093a",
        "type": "group",
        "z": "088fab733419c707",
        "name": "Data Input & API Call",
        "style": {
            "label": true
        },
        "nodes": [
            "31749266865874cf",
            "9253f90316936f73",
            "4582f5ee6c82a831",
            "856d2b19e2a0d021",
            "bc7506c79a70c5d8"
        ],
        "x": 234,
        "y": 239,
        "w": 752,
        "h": 362
    },
    {
        "id": "2406f1dc5d32b76a",
        "type": "group",
        "z": "088fab733419c707",
        "name": "Data Processing & Output Triggering",
        "style": {
            "label": true
        },
        "nodes": [
            "4abf6ef935ae28bb",
            "566c89287199eab1",
            "d980d78960bfd999",
            "235f4c81c8825e75",
            "11be79141838bc02"
        ],
        "x": 1074,
        "y": 319,
        "w": 652,
        "h": 242
    },
    {
        "id": "ec87e2210a0fba2e",
        "type": "group",
        "z": "088fab733419c707",
        "name": "G-code Analysis Pipeline",
        "style": {
            "label": true
        },
        "nodes": [
            "548b0a238325e0b8",
            "70cdf05dcd27462d",
            "7ac7a420743ace0c",
            "a6a79f6ee9526497",
            "1895161b40f4b2c6",
            "a849c171e8e54fe4",
            "fa016904d46e14e2",
            "637017bc129598ca"
        ],
        "x": 1434,
        "y": 619,
        "w": 752,
        "h": 402
    },
    {
        "id": "29a40f42b43f68c5",
        "type": "group",
        "z": "aeb102358fecaa7c",
        "g": "112713e3049f7ce2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a43be5335feb6c7c",
            "6cfc11bd35195297",
            "1d888262654ea2ae",
            "2b45cc2e64e855bf",
            "27a0150072dd5af6",
            "1a274299be6880e7",
            "2e4f3f25bdd0a813",
            "75fc4a99a9b68066",
            "fa00a137dbad343a",
            "9b087745a94309f6"
        ],
        "x": 524,
        "y": 319,
        "w": 162,
        "h": 402
    },
    {
        "id": "1a525568bc85bcd6",
        "type": "group",
        "z": "aeb102358fecaa7c",
        "g": "22e91b0fbb0eb8cd",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e5d77d073c2d69a8",
            "4dbd8ce76a01575d"
        ],
        "x": 524,
        "y": 79,
        "w": 162,
        "h": 82
    },
    {
        "id": "8f3e7bc8aa8c628b",
        "type": "group",
        "z": "389b26273279e5c8",
        "g": "b9e7ac0c5e9bd9f9",
        "name": "Drivers List",
        "style": {
            "label": true
        },
        "nodes": [
            "6f2a9a10e1b1821c",
            "14ebebb4ac83589f"
        ],
        "x": 174,
        "y": 179,
        "w": 192,
        "h": 142
    },
    {
        "id": "797078317007a183",
        "type": "group",
        "z": "389b26273279e5c8",
        "g": "b9e7ac0c5e9bd9f9",
        "name": "Target Energy Consumption",
        "style": {
            "label": true
        },
        "nodes": [
            "7e5c441ed2907a1f"
        ],
        "x": 174,
        "y": 39,
        "w": 272,
        "h": 82
    },
    {
        "id": "7205aeb72ebcf067",
        "type": "group",
        "z": "389b26273279e5c8",
        "g": "b9e7ac0c5e9bd9f9",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "af52069ee40fca1f",
            "c94937fb6bad07d3",
            "cb8b116c262625d0"
        ],
        "x": 674,
        "y": 159,
        "w": 282,
        "h": 82
    },
    {
        "id": "bdb21c81e84f1fd8",
        "type": "group",
        "z": "389b26273279e5c8",
        "g": "b9e7ac0c5e9bd9f9",
        "name": "Register a Driver",
        "style": {
            "label": true
        },
        "nodes": [
            "1e3e471c120e45a7"
        ],
        "x": 684,
        "y": 299,
        "w": 113,
        "h": 82
    },
    {
        "id": "cc3d0153a28f1229",
        "type": "group",
        "z": "389b26273279e5c8",
        "g": "7d314f8087d9043c",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "50ea5d3ce66dc19f",
            "7ab18258201e57f8",
            "960630c6f8f09215",
            "950a5eaafa1958c8"
        ],
        "x": 454,
        "y": 459,
        "w": 292,
        "h": 82
    },
    {
        "id": "fb12aa971871ac40",
        "type": "group",
        "z": "e24bcad243f972df",
        "g": "076c47cf58d53355",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ed57310db93ecab4",
            "41d722ef8ffbf29f",
            "dd8c2b050250b089",
            "9a7b4504d6f61f34"
        ],
        "x": 434,
        "y": 579,
        "w": 892,
        "h": 82
    },
    {
        "id": "f3ffed341ba7d121",
        "type": "group",
        "z": "e24bcad243f972df",
        "g": "faf9345af33162c6",
        "name": "Register a Driver",
        "style": {
            "label": true
        },
        "nodes": [
            "1748054ed00b6f14"
        ],
        "x": 894,
        "y": 399,
        "w": 272,
        "h": 82
    },
    {
        "id": "736e73ef7d144b40",
        "type": "group",
        "z": "e24bcad243f972df",
        "g": "faf9345af33162c6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e25f653a6bbb9a1e",
            "cd4013258184c96b",
            "6fa745969a9225ee"
        ],
        "x": 714,
        "y": 99,
        "w": 652,
        "h": 202
    },
    {
        "id": "711064a7b7dcab0f",
        "type": "group",
        "z": "e24bcad243f972df",
        "g": "faf9345af33162c6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "14b7afde013be3bb"
        ],
        "x": 234,
        "y": 79,
        "w": 252,
        "h": 82
    },
    {
        "id": "8ad3d089057afb69",
        "type": "group",
        "z": "e24bcad243f972df",
        "g": "faf9345af33162c6",
        "name": "Drivers List",
        "style": {
            "label": true
        },
        "nodes": [
            "61e008e4db88521e",
            "c6cf032d21da53e2",
            "b8bd2e5afd8d7efe",
            "8b04ad044352baf3"
        ],
        "x": 234,
        "y": 179,
        "w": 312,
        "h": 262
    },
    {
        "id": "5e9c772230c2d4b1",
        "type": "group",
        "z": "44c225e855f817f8",
        "g": "e0b137ff47432f2e",
        "name": "MPU6050 Accelerometer",
        "style": {
            "label": true
        },
        "nodes": [
            "f77d140fdd22352b",
            "2d183ac8c2d9dfd3",
            "3fecf642c398afec",
            "0c59e6a6c648cb94",
            "2fd609f72fb77e4b",
            "2b0a996e7caaa58d",
            "01929e1883714b74",
            "aa107ae95410814c",
            "341fbee8495b1bd8",
            "0abcfd1a02f4a19a",
            "642a28ac55077c32",
            "03ba2dc03bc7ac47",
            "d6ac7d1660c10d16",
            "4d42faa80d69d4e3",
            "c76f96030d02bb57"
        ],
        "x": 74,
        "y": 299,
        "w": 1422,
        "h": 282
    },
    {
        "id": "fc75ba5343df4163",
        "type": "group",
        "z": "44c225e855f817f8",
        "g": "e0b137ff47432f2e",
        "name": "MPU6050 Gyroscope",
        "style": {
            "label": true
        },
        "nodes": [
            "8950e05ca866624d",
            "7dc2945d2e4ddd8b",
            "52fdc90785b7a1d7",
            "f72a1cf8c3a8820c",
            "60e80e7a6e1a6906",
            "5396a4653d7c0e57",
            "30ea1788a5f64e85",
            "8e0e73e8a1d28b6f",
            "c7e3549eb6f42dda",
            "34f84b9d88038512"
        ],
        "x": 74,
        "y": 679,
        "w": 1092,
        "h": 202
    },
    {
        "id": "93d1043233d62247",
        "type": "group",
        "z": "44c225e855f817f8",
        "g": "e0b137ff47432f2e",
        "name": "MPU6050 Temperature",
        "style": {
            "label": true
        },
        "nodes": [
            "1fa08ed00a895506",
            "4816faa0ed4ee79e",
            "d23eed6a980f1398",
            "857d777ce2057c48",
            "a397a019ff154ae9",
            "ca5aa4b3df152834"
        ],
        "x": 94,
        "y": 959,
        "w": 992,
        "h": 122
    },
    {
        "id": "4acaf77f97d3bbd1",
        "type": "junction",
        "z": "389b26273279e5c8",
        "g": "b9e7ac0c5e9bd9f9",
        "x": 620,
        "y": 200,
        "wires": [
            [
                "af52069ee40fca1f"
            ]
        ]
    },
    {
        "id": "2b1b644df2744f13",
        "type": "junction",
        "z": "389b26273279e5c8",
        "g": "b9e7ac0c5e9bd9f9",
        "x": 620,
        "y": 340,
        "wires": [
            [
                "1e3e471c120e45a7"
            ]
        ]
    },
    {
        "id": "1240934c071c6d71",
        "type": "junction",
        "z": "aeb102358fecaa7c",
        "g": "112713e3049f7ce2",
        "x": 460,
        "y": 360,
        "wires": [
            [
                "a43be5335feb6c7c"
            ]
        ]
    },
    {
        "id": "f54e18ec592e44d6",
        "type": "junction",
        "z": "aeb102358fecaa7c",
        "x": 460,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "50b10557684c5cb1",
        "type": "junction",
        "z": "aeb102358fecaa7c",
        "g": "112713e3049f7ce2",
        "x": 460,
        "y": 520,
        "wires": [
            [
                "27a0150072dd5af6"
            ]
        ]
    },
    {
        "id": "c139db59324f25f7",
        "type": "junction",
        "z": "aeb102358fecaa7c",
        "g": "112713e3049f7ce2",
        "x": 460,
        "y": 600,
        "wires": [
            [
                "fa00a137dbad343a"
            ]
        ]
    },
    {
        "id": "3a54aa7e26db42b5",
        "type": "junction",
        "z": "aeb102358fecaa7c",
        "g": "112713e3049f7ce2",
        "x": 460,
        "y": 680,
        "wires": [
            [
                "75fc4a99a9b68066"
            ]
        ]
    },
    {
        "id": "e0cc7a5564aaecec",
        "type": "junction",
        "z": "e24bcad243f972df",
        "g": "faf9345af33162c6",
        "x": 700,
        "y": 260,
        "wires": [
            [
                "e25f653a6bbb9a1e"
            ]
        ]
    },
    {
        "id": "ca4a34e1cc5eac2e",
        "type": "junction",
        "z": "e24bcad243f972df",
        "g": "faf9345af33162c6",
        "x": 700,
        "y": 420,
        "wires": [
            [
                "1748054ed00b6f14"
            ]
        ]
    },
    {
        "id": "becc22b8f4461a4d",
        "type": "mqtt-broker",
        "name": "",
        "broker": "89.252.166.188",
        "port": "2010",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "07bb42ebce915296",
        "type": "websocket-listener",
        "path": "/ws/plant",
        "wholemsg": "true"
    },
    {
        "id": "349f15e91de8b866",
        "type": "websocket-listener",
        "path": "ws/panel",
        "wholemsg": "true"
    },
    {
        "id": "54b96f2e51565f4f",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "192.168.1.102",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "iot_project",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "raptorblingx",
        "passwordFieldType": "str"
    },
    {
        "id": "4259e91acb63e17b",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "localhost",
        "hostFieldType": "str",
        "port": 5432,
        "portFieldType": "num",
        "database": "reg_ml",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": 10,
        "maxFieldType": "num",
        "idle": 1000,
        "idleFieldType": "num",
        "connectionTimeout": 10000,
        "connectionTimeoutFieldType": "num",
        "user": "reg_ml",
        "userFieldType": "str",
        "password": "raptorblingx",
        "passwordFieldType": "str"
    },
    {
        "id": "aba5185255ddcebc",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ef780fb3df2addd5",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "cc368f00d628f650",
        "type": "ui_group",
        "name": "Printer Status",
        "tab": "aba5185255ddcebc",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "0a4d318485c9397e",
        "type": "mqtt-broker",
        "name": "Factory MQTT Broker",
        "broker": "192.168.188.117",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "ade67355fcb97ddd",
        "type": "ui_tab",
        "name": "Energy Monitor",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cf221fa6ee204f3b",
        "type": "ui_group",
        "name": "Device & Time Selection",
        "tab": "ade67355fcb97ddd",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d801508db4a27b0e",
        "type": "ui_group",
        "name": "Analysis Results",
        "tab": "ade67355fcb97ddd",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d067a7043abd1aac",
        "type": "ui_tab",
        "name": "Driver Selection",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7a33b08f7dea1389",
        "type": "ui_group",
        "name": "Driver Selection",
        "tab": "ade67355fcb97ddd",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f412573e54535aac",
        "type": "ui_tab",
        "name": "Printer Tuning",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2b76591607efec25",
        "type": "ui_group",
        "name": "Printer Tuning",
        "tab": "f412573e54535aac",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "88830791c1951941",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "ce9f6098686337f7",
        "type": "mqtt in",
        "z": "aeb102358fecaa7c",
        "g": "112713e3049f7ce2",
        "name": "Humidity (Driver)",
        "topic": "sensor/humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 440,
        "wires": [
            [
                "d049b2d5d3dfbb19"
            ]
        ]
    },
    {
        "id": "b50fb6a4ef34b95f",
        "type": "mqtt in",
        "z": "aeb102358fecaa7c",
        "g": "112713e3049f7ce2",
        "name": "Temperatur (Driver)",
        "topic": "sensor/temperatur",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 360,
        "wires": [
            [
                "a7b225aa5bd0b412"
            ]
        ]
    },
    {
        "id": "a7b225aa5bd0b412",
        "type": "change",
        "z": "aeb102358fecaa7c",
        "g": "112713e3049f7ce2",
        "name": "Mapping",
        "rules": [
            {
                "t": "set",
                "p": "map_config",
                "pt": "msg",
                "to": "{\"machine_id\":\"energy\",\"metric_name\":\"temperature_c\",\"parser\":\"float\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 360,
        "wires": [
            [
                "1240934c071c6d71"
            ]
        ]
    },
    {
        "id": "a43be5335feb6c7c",
        "type": "function",
        "z": "aeb102358fecaa7c",
        "g": "29a40f42b43f68c5",
        "name": "Apply Mapping Logic",
        "func": "// Reads configuration from msg.map_config set by the preceding Change node.\n// Applies the mapping to generate the standardized topic and extract the value.\n\nconst config = msg.map_config;\n\n// Validate configuration passed from Change node\nif (!config || typeof config !== 'object' || !config.machine_id || !config.metric_name || !config.parser) {\n    node.error(\"Missing or invalid configuration in msg.map_config. Ensure the preceding Change node sets machine_id, metric_name, and parser.\", msg);\n    return null; // Stop processing\n}\n\nlet metric_value;\n\n// Parse the original payload based on the parser configuration\ntry {\n    if (config.parser === \"float\" || config.parser === \"number\" || config.parser === \"plain\") {\n        metric_value = parseFloat(msg.payload);\n    } else if (config.parser.startsWith(\"json.\")) {\n        const path = config.parser.substring(5).split('.'); // Remove \"json.\" and split path\n        let current;\n        // Try parsing payload as JSON, handle if it's already an object\n        if (typeof msg.payload === 'string') {\n            current = JSON.parse(msg.payload);\n        } else if (typeof msg.payload === 'object' && msg.payload !== null) {\n            current = msg.payload;\n        } else {\n            throw new Error(\"Payload is not a parseable JSON string or object.\");\n        }\n\n        for (const key of path) {\n            if (current === null || typeof current !== 'object' || !current.hasOwnProperty(key)) {\n                throw new Error(`Path ${config.parser} not found in JSON payload.`);\n            }\n            current = current[key];\n        }\n        metric_value = parseFloat(current);\n    } else {\n        node.warn(`Invalid parser type specified in config: '${config.parser}'. Use 'float' or 'json.path.to.value'.`);\n        return null;\n    }\n\n    // Validate the final numeric value\n    if (isNaN(metric_value)) {\n        node.warn(`Could not parse numeric value using parser '${config.parser}'. Original Payload: ${JSON.stringify(msg.payload)}`);\n        return null;\n    }\n\n} catch (e) {\n    node.error(`Error parsing payload or applying parser '${config.parser}': ${e}. Payload: ${JSON.stringify(msg.payload)}`, msg);\n    return null;\n}\n\n// Construct the new standardized topic\nconst newTopic = `factory/${config.machine_id}/${config.metric_name}`; \n\nmsg.topic = newTopic; \nmsg.payload = metric_value\n\n// Clean up config property if desired (optional)\n// delete msg.map_config;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 565,
        "y": 360,
        "wires": [
            [
                "6cfc11bd35195297"
            ]
        ],
        "l": false
    },
    {
        "id": "6cfc11bd35195297",
        "type": "mqtt out",
        "z": "aeb102358fecaa7c",
        "g": "29a40f42b43f68c5",
        "name": "Publish Standardized",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "becc22b8f4461a4d",
        "x": 645,
        "y": 360,
        "wires": [],
        "l": false
    },
    {
        "id": "f0f6d80d274442c1",
        "type": "mqtt in",
        "z": "aeb102358fecaa7c",
        "g": "22e91b0fbb0eb8cd",
        "name": "MK4-1 Printer Smart Plug",
        "topic": "tele/smartplug_1/SENSOR",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 120,
        "wires": [
            [
                "0098b7e44cd1771b",
                "9df6794104c8440b"
            ]
        ]
    },
    {
        "id": "0098b7e44cd1771b",
        "type": "change",
        "z": "aeb102358fecaa7c",
        "g": "22e91b0fbb0eb8cd",
        "name": "Mapping",
        "rules": [
            {
                "t": "set",
                "p": "map_config",
                "pt": "msg",
                "to": "{\"machine_id\":\"energy\",\"metric_name\":\"plug_01\",\"parser\":\"json.ENERGY.Power\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 120,
        "wires": [
            [
                "e5d77d073c2d69a8"
            ]
        ]
    },
    {
        "id": "e5d77d073c2d69a8",
        "type": "function",
        "z": "aeb102358fecaa7c",
        "g": "1a525568bc85bcd6",
        "name": "Apply Mapping Logic",
        "func": "// Reads configuration from msg.map_config set by the preceding Change node.\n// Applies the mapping to generate the standardized topic and extract the value.\n\nconst config = msg.map_config;\n\n// Validate configuration passed from Change node\nif (!config || typeof config !== 'object' || !config.machine_id || !config.metric_name || !config.parser) {\n    node.error(\"Missing or invalid configuration in msg.map_config. Ensure the preceding Change node sets machine_id, metric_name, and parser.\", msg);\n    return null; // Stop processing\n}\n\nlet metric_value;\n\n// Parse the original payload based on the parser configuration\ntry {\n    if (config.parser === \"float\" || config.parser === \"number\" || config.parser === \"plain\") {\n        metric_value = parseFloat(msg.payload);\n    } else if (config.parser.startsWith(\"json.\")) {\n        const path = config.parser.substring(5).split('.'); // Remove \"json.\" and split path\n        let current;\n        // Try parsing payload as JSON, handle if it's already an object\n        if (typeof msg.payload === 'string') {\n            current = JSON.parse(msg.payload);\n        } else if (typeof msg.payload === 'object' && msg.payload !== null) {\n            current = msg.payload;\n        } else {\n            throw new Error(\"Payload is not a parseable JSON string or object.\");\n        }\n\n        for (const key of path) {\n            if (current === null || typeof current !== 'object' || !current.hasOwnProperty(key)) {\n                throw new Error(`Path ${config.parser} not found in JSON payload.`);\n            }\n            current = current[key];\n        }\n        metric_value = parseFloat(current);\n    } else {\n        node.warn(`Invalid parser type specified in config: '${config.parser}'. Use 'float' or 'json.path.to.value'.`);\n        return null;\n    }\n\n    // Validate the final numeric value\n    if (isNaN(metric_value)) {\n        node.warn(`Could not parse numeric value using parser '${config.parser}'. Original Payload: ${JSON.stringify(msg.payload)}`);\n        return null;\n    }\n\n} catch (e) {\n    node.error(`Error parsing payload or applying parser '${config.parser}': ${e}. Payload: ${JSON.stringify(msg.payload)}`, msg);\n    return null;\n}\n\n// Construct the new standardized topic\nconst newTopic = `factory/${config.machine_id}/${config.metric_name}`;\n\nmsg.topic = newTopic;\nmsg.payload = metric_value\n\n// Clean up config property if desired (optional)\n// delete msg.map_config;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 565,
        "y": 120,
        "wires": [
            [
                "4dbd8ce76a01575d"
            ]
        ],
        "l": false
    },
    {
        "id": "4dbd8ce76a01575d",
        "type": "mqtt out",
        "z": "aeb102358fecaa7c",
        "g": "1a525568bc85bcd6",
        "name": "Publish Standardized",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "becc22b8f4461a4d",
        "x": 645,
        "y": 120,
        "wires": [],
        "l": false
    },
    {
        "id": "1d888262654ea2ae",
        "type": "function",
        "z": "aeb102358fecaa7c",
        "g": "29a40f42b43f68c5",
        "name": "Apply Mapping Logic",
        "func": "// Reads configuration from msg.map_config set by the preceding Change node.\n// Applies the mapping to generate the standardized topic and extract the value.\n\nconst config = msg.map_config;\n\n// Validate configuration passed from Change node\nif (!config || typeof config !== 'object' || !config.machine_id || !config.metric_name || !config.parser) {\n    node.error(\"Missing or invalid configuration in msg.map_config. Ensure the preceding Change node sets machine_id, metric_name, and parser.\", msg);\n    return null; // Stop processing\n}\n\nlet metric_value;\n\n// Parse the original payload based on the parser configuration\ntry {\n    if (config.parser === \"float\" || config.parser === \"number\" || config.parser === \"plain\") {\n        metric_value = parseFloat(msg.payload);\n    } else if (config.parser.startsWith(\"json.\")) {\n        const path = config.parser.substring(5).split('.'); // Remove \"json.\" and split path\n        let current;\n        // Try parsing payload as JSON, handle if it's already an object\n        if (typeof msg.payload === 'string') {\n            current = JSON.parse(msg.payload);\n        } else if (typeof msg.payload === 'object' && msg.payload !== null) {\n            current = msg.payload;\n        } else {\n            throw new Error(\"Payload is not a parseable JSON string or object.\");\n        }\n\n        for (const key of path) {\n            if (current === null || typeof current !== 'object' || !current.hasOwnProperty(key)) {\n                throw new Error(`Path ${config.parser} not found in JSON payload.`);\n            }\n            current = current[key];\n        }\n        metric_value = parseFloat(current);\n    } else {\n        node.warn(`Invalid parser type specified in config: '${config.parser}'. Use 'float' or 'json.path.to.value'.`);\n        return null;\n    }\n\n    // Validate the final numeric value\n    if (isNaN(metric_value)) {\n        node.warn(`Could not parse numeric value using parser '${config.parser}'. Original Payload: ${JSON.stringify(msg.payload)}`);\n        return null;\n    }\n\n} catch (e) {\n    node.error(`Error parsing payload or applying parser '${config.parser}': ${e}. Payload: ${JSON.stringify(msg.payload)}`, msg);\n    return null;\n}\n\n// Construct the new standardized topic\nconst newTopic = `factory/${config.machine_id}/${config.metric_name}`; \n\nmsg.topic = newTopic; \nmsg.payload = metric_value\n\n// Clean up config property if desired (optional)\n// delete msg.map_config;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 565,
        "y": 440,
        "wires": [
            [
                "2b45cc2e64e855bf"
            ]
        ],
        "l": false
    },
    {
        "id": "2b45cc2e64e855bf",
        "type": "mqtt out",
        "z": "aeb102358fecaa7c",
        "g": "29a40f42b43f68c5",
        "name": "Publish Standardized",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "becc22b8f4461a4d",
        "x": 645,
        "y": 440,
        "wires": [],
        "l": false
    },
    {
        "id": "d049b2d5d3dfbb19",
        "type": "change",
        "z": "aeb102358fecaa7c",
        "g": "112713e3049f7ce2",
        "name": "Mapping",
        "rules": [
            {
                "t": "set",
                "p": "map_config",
                "pt": "msg",
                "to": "{\"machine_id\":\"energy\",\"metric_name\":\"humidity\",\"parser\":\"float\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 440,
        "wires": [
            [
                "1d888262654ea2ae"
            ]
        ]
    },
    {
        "id": "a62a515b8ed8f24b",
        "type": "change",
        "z": "aeb102358fecaa7c",
        "g": "112713e3049f7ce2",
        "name": "Mapping",
        "rules": [
            {
                "t": "set",
                "p": "map_config",
                "pt": "msg",
                "to": "{\"machine_id\":\"energy\",\"metric_name\":\"humidity\",\"parser\":\"float\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "652914c6c1a4023a",
        "type": "mqtt in",
        "z": "aeb102358fecaa7c",
        "d": true,
        "g": "112713e3049f7ce2",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 520,
        "wires": [
            [
                "a62a515b8ed8f24b"
            ]
        ]
    },
    {
        "id": "27a0150072dd5af6",
        "type": "function",
        "z": "aeb102358fecaa7c",
        "g": "29a40f42b43f68c5",
        "name": "Apply Mapping Logic",
        "func": "// Reads configuration from msg.map_config set by the preceding Change node.\n// Applies the mapping to generate the standardized topic and extract the value.\n\nconst config = msg.map_config;\n\n// Validate configuration passed from Change node\nif (!config || typeof config !== 'object' || !config.machine_id || !config.metric_name || !config.parser) {\n    node.error(\"Missing or invalid configuration in msg.map_config. Ensure the preceding Change node sets machine_id, metric_name, and parser.\", msg);\n    return null; // Stop processing\n}\n\nlet metric_value;\n\n// Parse the original payload based on the parser configuration\ntry {\n    if (config.parser === \"float\" || config.parser === \"number\" || config.parser === \"plain\") {\n        metric_value = parseFloat(msg.payload);\n    } else if (config.parser.startsWith(\"json.\")) {\n        const path = config.parser.substring(5).split('.'); // Remove \"json.\" and split path\n        let current;\n        // Try parsing payload as JSON, handle if it's already an object\n        if (typeof msg.payload === 'string') {\n            current = JSON.parse(msg.payload);\n        } else if (typeof msg.payload === 'object' && msg.payload !== null) {\n            current = msg.payload;\n        } else {\n            throw new Error(\"Payload is not a parseable JSON string or object.\");\n        }\n\n        for (const key of path) {\n            if (current === null || typeof current !== 'object' || !current.hasOwnProperty(key)) {\n                throw new Error(`Path ${config.parser} not found in JSON payload.`);\n            }\n            current = current[key];\n        }\n        metric_value = parseFloat(current);\n    } else {\n        node.warn(`Invalid parser type specified in config: '${config.parser}'. Use 'float' or 'json.path.to.value'.`);\n        return null;\n    }\n\n    // Validate the final numeric value\n    if (isNaN(metric_value)) {\n        node.warn(`Could not parse numeric value using parser '${config.parser}'. Original Payload: ${JSON.stringify(msg.payload)}`);\n        return null;\n    }\n\n} catch (e) {\n    node.error(`Error parsing payload or applying parser '${config.parser}': ${e}. Payload: ${JSON.stringify(msg.payload)}`, msg);\n    return null;\n}\n\n// Construct the new standardized topic\nconst newTopic = `factory/${config.machine_id}/${config.metric_name}`; \n\nmsg.topic = newTopic; \nmsg.payload = metric_value\n\n// Clean up config property if desired (optional)\n// delete msg.map_config;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 565,
        "y": 520,
        "wires": [
            [
                "1a274299be6880e7"
            ]
        ],
        "l": false
    },
    {
        "id": "1a274299be6880e7",
        "type": "mqtt out",
        "z": "aeb102358fecaa7c",
        "g": "29a40f42b43f68c5",
        "name": "Publish Standardized",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "becc22b8f4461a4d",
        "x": 645,
        "y": 520,
        "wires": [],
        "l": false
    },
    {
        "id": "c0af92f6dc9d95af",
        "type": "mqtt in",
        "z": "aeb102358fecaa7c",
        "d": true,
        "g": "112713e3049f7ce2",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 680,
        "wires": [
            [
                "1b53a63b57d653ce"
            ]
        ]
    },
    {
        "id": "1b53a63b57d653ce",
        "type": "change",
        "z": "aeb102358fecaa7c",
        "g": "112713e3049f7ce2",
        "name": "Mapping",
        "rules": [
            {
                "t": "set",
                "p": "map_config",
                "pt": "msg",
                "to": "{\"machine_id\":\"energy\",\"metric_name\":\"humidity\",\"parser\":\"float\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "c141afbe0a19bf29",
        "type": "mqtt in",
        "z": "aeb102358fecaa7c",
        "d": true,
        "g": "112713e3049f7ce2",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 600,
        "wires": [
            [
                "d87d19069b853c42"
            ]
        ]
    },
    {
        "id": "d87d19069b853c42",
        "type": "change",
        "z": "aeb102358fecaa7c",
        "g": "112713e3049f7ce2",
        "name": "Mapping",
        "rules": [
            {
                "t": "set",
                "p": "map_config",
                "pt": "msg",
                "to": "{\"machine_id\":\"energy\",\"metric_name\":\"humidity\",\"parser\":\"float\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "75fc4a99a9b68066",
        "type": "function",
        "z": "aeb102358fecaa7c",
        "g": "29a40f42b43f68c5",
        "name": "Apply Mapping Logic",
        "func": "// Reads configuration from msg.map_config set by the preceding Change node.\n// Applies the mapping to generate the standardized topic and extract the value.\n\nconst config = msg.map_config;\n\n// Validate configuration passed from Change node\nif (!config || typeof config !== 'object' || !config.machine_id || !config.metric_name || !config.parser) {\n    node.error(\"Missing or invalid configuration in msg.map_config. Ensure the preceding Change node sets machine_id, metric_name, and parser.\", msg);\n    return null; // Stop processing\n}\n\nlet metric_value;\n\n// Parse the original payload based on the parser configuration\ntry {\n    if (config.parser === \"float\" || config.parser === \"number\" || config.parser === \"plain\") {\n        metric_value = parseFloat(msg.payload);\n    } else if (config.parser.startsWith(\"json.\")) {\n        const path = config.parser.substring(5).split('.'); // Remove \"json.\" and split path\n        let current;\n        // Try parsing payload as JSON, handle if it's already an object\n        if (typeof msg.payload === 'string') {\n            current = JSON.parse(msg.payload);\n        } else if (typeof msg.payload === 'object' && msg.payload !== null) {\n            current = msg.payload;\n        } else {\n            throw new Error(\"Payload is not a parseable JSON string or object.\");\n        }\n\n        for (const key of path) {\n            if (current === null || typeof current !== 'object' || !current.hasOwnProperty(key)) {\n                throw new Error(`Path ${config.parser} not found in JSON payload.`);\n            }\n            current = current[key];\n        }\n        metric_value = parseFloat(current);\n    } else {\n        node.warn(`Invalid parser type specified in config: '${config.parser}'. Use 'float' or 'json.path.to.value'.`);\n        return null;\n    }\n\n    // Validate the final numeric value\n    if (isNaN(metric_value)) {\n        node.warn(`Could not parse numeric value using parser '${config.parser}'. Original Payload: ${JSON.stringify(msg.payload)}`);\n        return null;\n    }\n\n} catch (e) {\n    node.error(`Error parsing payload or applying parser '${config.parser}': ${e}. Payload: ${JSON.stringify(msg.payload)}`, msg);\n    return null;\n}\n\n// Construct the new standardized topic\nconst newTopic = `factory/${config.machine_id}/${config.metric_name}`; \n\nmsg.topic = newTopic; \nmsg.payload = metric_value\n\n// Clean up config property if desired (optional)\n// delete msg.map_config;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 565,
        "y": 680,
        "wires": [
            [
                "2e4f3f25bdd0a813"
            ]
        ],
        "l": false
    },
    {
        "id": "2e4f3f25bdd0a813",
        "type": "mqtt out",
        "z": "aeb102358fecaa7c",
        "g": "29a40f42b43f68c5",
        "name": "Publish Standardized",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "becc22b8f4461a4d",
        "x": 645,
        "y": 680,
        "wires": [],
        "l": false
    },
    {
        "id": "fa00a137dbad343a",
        "type": "function",
        "z": "aeb102358fecaa7c",
        "g": "29a40f42b43f68c5",
        "name": "Apply Mapping Logic",
        "func": "// Reads configuration from msg.map_config set by the preceding Change node.\n// Applies the mapping to generate the standardized topic and extract the value.\n\nconst config = msg.map_config;\n\n// Validate configuration passed from Change node\nif (!config || typeof config !== 'object' || !config.machine_id || !config.metric_name || !config.parser) {\n    node.error(\"Missing or invalid configuration in msg.map_config. Ensure the preceding Change node sets machine_id, metric_name, and parser.\", msg);\n    return null; // Stop processing\n}\n\nlet metric_value;\n\n// Parse the original payload based on the parser configuration\ntry {\n    if (config.parser === \"float\" || config.parser === \"number\" || config.parser === \"plain\") {\n        metric_value = parseFloat(msg.payload);\n    } else if (config.parser.startsWith(\"json.\")) {\n        const path = config.parser.substring(5).split('.'); // Remove \"json.\" and split path\n        let current;\n        // Try parsing payload as JSON, handle if it's already an object\n        if (typeof msg.payload === 'string') {\n            current = JSON.parse(msg.payload);\n        } else if (typeof msg.payload === 'object' && msg.payload !== null) {\n            current = msg.payload;\n        } else {\n            throw new Error(\"Payload is not a parseable JSON string or object.\");\n        }\n\n        for (const key of path) {\n            if (current === null || typeof current !== 'object' || !current.hasOwnProperty(key)) {\n                throw new Error(`Path ${config.parser} not found in JSON payload.`);\n            }\n            current = current[key];\n        }\n        metric_value = parseFloat(current);\n    } else {\n        node.warn(`Invalid parser type specified in config: '${config.parser}'. Use 'float' or 'json.path.to.value'.`);\n        return null;\n    }\n\n    // Validate the final numeric value\n    if (isNaN(metric_value)) {\n        node.warn(`Could not parse numeric value using parser '${config.parser}'. Original Payload: ${JSON.stringify(msg.payload)}`);\n        return null;\n    }\n\n} catch (e) {\n    node.error(`Error parsing payload or applying parser '${config.parser}': ${e}. Payload: ${JSON.stringify(msg.payload)}`, msg);\n    return null;\n}\n\n// Construct the new standardized topic\nconst newTopic = `factory/${config.machine_id}/${config.metric_name}`; \n\nmsg.topic = newTopic; \nmsg.payload = metric_value\n\n// Clean up config property if desired (optional)\n// delete msg.map_config;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 565,
        "y": 600,
        "wires": [
            [
                "9b087745a94309f6"
            ]
        ],
        "l": false
    },
    {
        "id": "9b087745a94309f6",
        "type": "mqtt out",
        "z": "aeb102358fecaa7c",
        "g": "29a40f42b43f68c5",
        "name": "Publish Standardized",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "becc22b8f4461a4d",
        "x": 645,
        "y": 600,
        "wires": [],
        "l": false
    },
    {
        "id": "9df6794104c8440b",
        "type": "debug",
        "z": "aeb102358fecaa7c",
        "g": "22e91b0fbb0eb8cd",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 160,
        "wires": []
    },
    {
        "id": "8aebe160e747a222",
        "type": "mqtt in",
        "z": "389b26273279e5c8",
        "name": "",
        "topic": "sensor/humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "f76a7b824c77a4d1",
        "type": "mqtt in",
        "z": "389b26273279e5c8",
        "name": "",
        "topic": "tele/smartplug_1/SENSOR",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "2bce24c1985ae24f",
        "type": "mqtt in",
        "z": "389b26273279e5c8",
        "name": "",
        "topic": "sensor/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "af52069ee40fca1f",
        "type": "function",
        "z": "389b26273279e5c8",
        "g": "7205aeb72ebcf067",
        "name": "Format for DB",
        "func": "// Expected MQTT Topic: factory/{machine_id}/{metric_name}\n// Expected Payload: Raw value or JSON like {\"value\": 123}\n\nconst topicParts = msg.topic.split('/');\nif (topicParts.length < 3) {\n    node.warn(`Invalid topic format: ${msg.topic}. Expected factory/{machine_id}/{metric_name}`);\n    return null; // Stop processing this message\n}\n\nconst machine_id = topicParts[1];\nconst metric_name = topicParts[2];\nlet metric_value;\n\n// Try to parse the payload\nif (typeof msg.payload === 'object' && msg.payload !== null && msg.payload.hasOwnProperty('value')) {\n    metric_value = parseFloat(msg.payload.value);\n} else {\n    metric_value = parseFloat(msg.payload);\n}\n\n// Validate the parsed value\nif (isNaN(metric_value)) {\n    node.warn(`Could not parse metric value from payload: ${msg.payload} for topic: ${msg.topic}`);\n    return null; // Stop processing\n}\n\n// Create the object for the next step\nmsg.payload = {\n    timestamp: new Date().toISOString(), // Use current time as timestamp\n    machine_id: machine_id,\n    metric_name: metric_name,\n    metric_value: metric_value\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 715,
        "y": 200,
        "wires": [
            [
                "c94937fb6bad07d3"
            ]
        ],
        "l": false
    },
    {
        "id": "c94937fb6bad07d3",
        "type": "function",
        "z": "389b26273279e5c8",
        "g": "7205aeb72ebcf067",
        "name": "Build SQL Insert",
        "func": "// --- Corrected `Build SQL Insert` using Parameterization ---\n\n// Expects msg.payload with { timestamp, machine_id, metric_name, metric_value }\nconst data = msg.payload;\n\n// Basic validation\nif (!data || !data.timestamp || !data.machine_id || !data.metric_name || data.metric_value === undefined || data.metric_value === null) {\n    node.warn(`Invalid data format received for SQL Insert: ${JSON.stringify(data)}`);\n    return null;\n}\n\n// Ensure value is a number\nconst metric_value = parseFloat(data.metric_value);\nif (isNaN(metric_value)) {\n    node.warn(`Invalid metric value: ${data.metric_value}`);\n    return null;\n}\n\n\n\n\n// Payload must be an array of values in the order matching $1, $2, etc.\nmsg.params = [\n    data.timestamp,\n    data.machine_id,\n    data.metric_name,\n    metric_value // Use the parsed float value\n];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 815,
        "y": 200,
        "wires": [
            [
                "cb8b116c262625d0"
            ]
        ],
        "l": false
    },
    {
        "id": "cb8b116c262625d0",
        "type": "postgresql",
        "z": "389b26273279e5c8",
        "g": "7205aeb72ebcf067",
        "name": "Store Data",
        "query": "INSERT INTO measurements (timestamp, machine_id, metric_name, metric_value)\nVALUES ($1, $2, $3, $4);",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 915,
        "y": 200,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "1e3e471c120e45a7",
        "type": "function",
        "z": "389b26273279e5c8",
        "g": "bdb21c81e84f1fd8",
        "name": "Register Analysis Driver",
        "func": "// Expected MQTT Topic: factory/{machine_id}/{metric_name}\n// This node stores the machine_id and metric_name of drivers wired to it.\n\nconst topicParts = msg.topic.split('/');\nif (topicParts.length < 3) {\n    node.warn(`Invalid topic format for driver registration: ${msg.topic}`);\n    return null; // Don't store anything\n}\n\nconst machine_id = topicParts[1];\nconst metric_name = topicParts[2];\n\n// Use flow context to store the registered drivers for each machine\nlet registeredDrivers = flow.get(\"registeredDrivers\") || {};\n\n// Initialize structure for the machine if it doesn't exist\nif (!registeredDrivers[machine_id]) {\n    registeredDrivers[machine_id] = {};\n}\n\n// Store the metric name (use an object as a set for easy addition/checking)\nregisteredDrivers[machine_id][metric_name] = true; // Mark as registered\n\n// Save back to flow context\nflow.set(\"registeredDrivers\", registeredDrivers);\n\n// Optional: Log registration\n// node.log(`Registered driver: ${metric_name} for machine: ${machine_id}`);\n\n// No message needs to be passed on from here for the analysis trigger\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 725,
        "y": 340,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "85bd41e72d01aa1d",
        "type": "inject",
        "z": "389b26273279e5c8",
        "g": "7d314f8087d9043c",
        "name": "Run Analysis",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"machine_id\":\"plug01_test\",\"energy_metric\":\"power_w\",\"time_window_hours\":1}",
        "payloadType": "json",
        "x": 270,
        "y": 500,
        "wires": [
            [
                "50ea5d3ce66dc19f"
            ]
        ]
    },
    {
        "id": "50ea5d3ce66dc19f",
        "type": "function",
        "z": "389b26273279e5c8",
        "g": "cc3d0153a28f1229",
        "name": "Prepare Analysis Query",
        "func": "// Expects msg.payload like: { machine_id: \"...\", energy_metric: \"...\", time_window_hours: ... }\n// Retrieves registered drivers from flow context for the specified machine.\n\nconst config = msg.payload;\nif (!config || !config.machine_id || !config.energy_metric || !config.time_window_hours) {\n    node.error(\"Analysis trigger payload is missing required fields (machine_id, energy_metric, time_window_hours).\", msg);\n    return null;\n}\n\nconst machine_id = config.machine_id;\nconst energy_metric = config.energy_metric;\nconst hours = config.time_window_hours;\nconst endTime = new Date();\nconst startTime = new Date(endTime.getTime() - hours * 60 * 60 * 1000);\n\n// Get the list of drivers registered for this machine\nconst registeredDrivers = flow.get(\"registeredDrivers\") || {};\nconst machineDriversObj = registeredDrivers[machine_id] || {};\nconst driver_metrics = Object.keys(machineDriversObj); // Get the names of registered drivers\n\nif (driver_metrics.length === 0) {\n    node.warn(`No drivers registered for machine ${machine_id}. Cannot run analysis.`);\n    // Store empty list for the analysis node to handle gracefully\n    msg.driver_metrics = [];\n    // Maybe still fetch energy data? Or stop? Let's fetch energy at least.\n    // return null; // Option to stop if no drivers\n} else {\n    node.log(`Analyzing machine [${machine_id}] energy [${energy_metric}] against drivers: [${driver_metrics.join(', ')}] for the last ${hours} hours.`);\n}\nmsg.driver_metrics = driver_metrics; // Pass driver names to the next node\n\n// List of all metrics to fetch (energy + registered drivers)\nconst all_metrics_to_fetch = [energy_metric, ...driver_metrics];\n\n// // Prepare SQL Query using parameterization\n// msg.topic = `\n//     SELECT\n//         timestamp,\n//         metric_name,\n//         metric_value\n//     FROM\n//         measurements\n//     WHERE\n//         machine_id = $1\n//         AND metric_name = ANY($2) -- Use ANY() to check against an array of metrics\n//         AND timestamp BETWEEN $3 AND $4\n//     ORDER BY\n//         timestamp ASC;\n// `;\n\n// Payload is the array of parameters for the query\nmsg.params = [\n    machine_id,\n    all_metrics_to_fetch, // Pass the array of metric names\n    startTime.toISOString(),\n    endTime.toISOString()\n];\n\n// Pass config info along for the analysis node\nmsg.analysis_config = config;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 495,
        "y": 500,
        "wires": [
            [
                "7ab18258201e57f8"
            ]
        ],
        "l": false
    },
    {
        "id": "7ab18258201e57f8",
        "type": "postgresql",
        "z": "389b26273279e5c8",
        "g": "cc3d0153a28f1229",
        "name": "Fetch Data",
        "query": "    SELECT\n        timestamp,\n        metric_name,\n        metric_value\n    FROM\n        measurements\n    WHERE\n        machine_id = $1\n        AND metric_name = ANY($2) -- Use ANY() to check against an array of metrics\n        AND timestamp BETWEEN $3 AND $4\n    ORDER BY\n        timestamp ASC;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 585,
        "y": 500,
        "wires": [
            [
                "960630c6f8f09215"
            ]
        ],
        "l": false
    },
    {
        "id": "960630c6f8f09215",
        "type": "function",
        "z": "389b26273279e5c8",
        "g": "cc3d0153a28f1229",
        "name": "Perform Analysis",
        "func": "// Expects msg.payload to be an array of rows from Postgres: [{timestamp, metric_name, metric_value}, ...]\n// Also expects msg.analysis_config and msg.driver_metrics from the previous node.\n\nconst dbRows = msg.payload;\nconst config = msg.analysis_config;\nconst driver_metrics = msg.driver_metrics; // Drivers selected for this run\nconst energy_metric = config.energy_metric;\nconst machine_id = config.machine_id;\n\nif (!Array.isArray(dbRows)) {\n    node.error(\"Did not receive array from database query.\", msg);\n    return null;\n}\nif (!config || !driver_metrics) {\n    node.error(\"Missing analysis configuration or driver metrics.\", msg);\n    return null;\n}\n\nif (dbRows.length === 0) {\n    msg.payload = `No data found for machine [${machine_id}] and metrics [${energy_metric}, ${driver_metrics.join(', ')}] in the specified time window.`;\n    return msg;\n}\n\n// --- Data Alignment ---\n// Group data by timestamp (or near timestamps). This is a simple approach.\n// More robust methods might involve interpolation or time-window averaging.\nconst timeToleranceMillis = 5000; // 5 seconds tolerance for matching timestamps\nlet alignedData = {}; // Key: timestamp (rounded), Value: { energy: val, driver1: val, driver2: val ... }\n\ndbRows.forEach(row => {\n    const ts = new Date(row.timestamp).getTime();\n    // Find a nearby timestamp key\n    let foundKey = null;\n    for (const keyTsStr in alignedData) {\n        const keyTs = parseInt(keyTsStr);\n        if (Math.abs(ts - keyTs) <= timeToleranceMillis) {\n            foundKey = keyTsStr;\n            break;\n        }\n    }\n\n    // If no nearby key, create a new entry using the current timestamp as the key\n    const key = foundKey || ts.toString();\n    if (!alignedData[key]) {\n        alignedData[key] = { timestamp: new Date(parseInt(key)) }; // Store the representative timestamp\n    }\n\n    // Add the metric value\n    if (row.metric_name === energy_metric) {\n        alignedData[key].energy = row.metric_value;\n    } else if (driver_metrics.includes(row.metric_name)) {\n        alignedData[key][row.metric_name] = row.metric_value;\n    }\n});\n\n// Convert alignedData object to an array, filtering out points missing energy or *any* driver\nlet analysisPoints = Object.values(alignedData).filter(point => {\n    if (point.energy === undefined || point.energy === null) return false;\n    for (const driver of driver_metrics) {\n        if (point[driver] === undefined || point[driver] === null) return false;\n    }\n    return true;\n});\n\nif (analysisPoints.length < 5) { // Need a minimum number of points for meaningful stats\n    msg.payload = `Insufficient aligned data points (${analysisPoints.length}) for analysis. Found ${dbRows.length} raw measurements. Try a larger time window or check data frequency.`;\n    return msg;\n}\n\n// --- Analysis Functions ---\n\n// Simple Pearson Correlation Coefficient\nfunction calculateCorrelation(arr1, arr2) {\n    if (arr1.length !== arr2.length || arr1.length === 0) return NaN;\n    const n = arr1.length;\n    const mean1 = arr1.reduce((a, b) => a + b, 0) / n;\n    const mean2 = arr2.reduce((a, b) => a + b, 0) / n;\n    const stdDev1 = Math.sqrt(arr1.reduce((a, b) => a + Math.pow(b - mean1, 2), 0) / n);\n    const stdDev2 = Math.sqrt(arr2.reduce((a, b) => a + Math.pow(b - mean2, 2), 0) / n);\n    if (stdDev1 === 0 || stdDev2 === 0) return NaN; // Avoid division by zero if data is constant\n\n    let covariance = 0;\n    for (let i = 0; i < n; i++) {\n        covariance += (arr1[i] - mean1) * (arr2[i] - mean2);\n    }\n    covariance /= n;\n\n    return covariance / (stdDev1 * stdDev2);\n}\n\n// Simple Trend Analysis (Average energy per driver quartile)\nfunction calculateTrend(driverValues, energyValues, driverName) {\n    if (driverValues.length !== energyValues.length || driverValues.length === 0) return null;\n    const points = driverValues.map((d, i) => ({ driver: d, energy: energyValues[i] })).sort((a, b) => a.driver - b.driver);\n    const n = points.length;\n    const qSize = Math.max(1, Math.floor(n / 4)); // Ensure at least 1 point per quartile approx\n    const quartiles = [\n        points.slice(0, qSize),\n        points.slice(qSize, 2 * qSize),\n        points.slice(2 * qSize, 3 * qSize),\n        points.slice(3 * qSize, n)\n    ].filter(q => q.length > 0); // Remove empty quartiles if n is small\n\n    const trend = quartiles.map((q, i) => {\n        const avgDriver = q.reduce((sum, p) => sum + p.driver, 0) / q.length;\n        const avgEnergy = q.reduce((sum, p) => sum + p.energy, 0) / q.length;\n        return `Q${i + 1} (Avg ${driverName}: ${avgDriver.toFixed(2)}): Avg Energy = ${avgEnergy.toFixed(2)}`;\n    });\n    return trend;\n}\n\n// Simple Pattern Detection (Find times with high energy and report driver values)\nfunction detectHighEnergyPatterns(analysisPoints, energyValues, driver_metrics) {\n    const n = energyValues.length;\n    if (n === 0) return [];\n    const sortedEnergy = [...energyValues].sort((a, b) => a - b);\n    const percentileThreshold = 0.90; // Look at top 10% energy usage\n    const energyThreshold = sortedEnergy[Math.floor(n * percentileThreshold)];\n\n    const highEnergyInstances = analysisPoints.filter(p => p.energy >= energyThreshold);\n\n    return highEnergyInstances.map(p => {\n        let drivers = driver_metrics.map(d => `${d}: ${p[d] !== undefined ? p[d].toFixed(2) : 'N/A'}`).join(', ');\n        return `High Energy (${p.energy.toFixed(2)}) at ${p.timestamp.toLocaleString()} -> Drivers: ${drivers}`;\n    }).slice(0, 10); // Limit output\n}\n\n\n// --- Perform Analysis ---\nlet results = {\n    analysis_run_time: new Date().toLocaleString(),\n    machine_id: machine_id,\n    energy_metric: energy_metric,\n    analyzed_drivers: driver_metrics,\n    time_window_hours: config.time_window_hours,\n    total_raw_measurements: dbRows.length,\n    aligned_data_points: analysisPoints.length,\n    correlation: {},\n    trend: {},\n    high_energy_patterns: []\n};\n\nconst energyValues = analysisPoints.map(p => p.energy);\n\n// Calculate for each driver\ndriver_metrics.forEach(driver => {\n    const driverValues = analysisPoints.map(p => p[driver]);\n\n    // Correlation\n    const corr = calculateCorrelation(driverValues, energyValues);\n    results.correlation[driver] = isNaN(corr) ? \"N/A (Insufficient data variation?)\" : `${corr.toFixed(3)} (${interpretCorrelation(corr)})`;\n\n    // Trend\n    results.trend[driver] = calculateTrend(driverValues, energyValues, driver);\n\n});\n\n// Pattern Detection (Overall High Energy)\nresults.high_energy_patterns = detectHighEnergyPatterns(analysisPoints, energyValues, driver_metrics);\n\n// Helper to interpret correlation\nfunction interpretCorrelation(corr) {\n    const absCorr = Math.abs(corr);\n    if (isNaN(corr)) return \"Invalid\";\n    if (absCorr >= 0.7) return \"Strong\";\n    if (absCorr >= 0.4) return \"Moderate\";\n    if (absCorr >= 0.1) return \"Weak\";\n    return \"Very Weak/None\";\n}\n\n// Format results for debug output\nmsg.payload = results; // Output the results object\n\n// Or format as a string:\n/*\nlet outputString = `Energy Analysis Results for Machine: ${machine_id}\\n`;\noutputString += `Time Window: Last ${config.time_window_hours} hours\\n`;\noutputString += `Energy Metric: ${energy_metric}\\n`;\noutputString += `Drivers Analyzed: ${driver_metrics.join(', ')}\\n`;\noutputString += `Aligned Data Points Used: ${analysisPoints.length} (from ${dbRows.length} raw measurements)\\n\\n`;\n\noutputString += \"--- Correlation ---\\n\";\nfor(const driver in results.correlation){\n    outputString += `${driver} vs ${energy_metric}: ${results.correlation[driver]}\\n`;\n}\n\noutputString += \"\\n--- Trend (Energy vs Driver Quartiles) ---\\n\";\nfor(const driver in results.trend){\n    outputString += `Driver: ${driver}\\n`;\n    if (results.trend[driver]) {\n        results.trend[driver].forEach(t => outputString += `  - ${t}\\n`);\n    } else {\n        outputString += \"  - N/A\\n\";\n    }\n}\n\noutputString += \"\\n--- High Energy Patterns (Top ${((1-percentileThreshold)*100).toFixed(0)}%) ---\\n\";\nif(results.high_energy_patterns.length > 0){\n    results.high_energy_patterns.forEach(p => outputString += `  - ${p}\\n`);\n} else {\n    outputString += \"  - No specific high-energy patterns detected.\\n\";\n}\n\nmsg.payload = outputString;\n*/\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 645,
        "y": 500,
        "wires": [
            [
                "950a5eaafa1958c8"
            ]
        ],
        "l": false
    },
    {
        "id": "950a5eaafa1958c8",
        "type": "debug",
        "z": "389b26273279e5c8",
        "g": "cc3d0153a28f1229",
        "name": "Analysis Results",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 685,
        "y": 500,
        "wires": [],
        "l": false
    },
    {
        "id": "6f2a9a10e1b1821c",
        "type": "mqtt in",
        "z": "389b26273279e5c8",
        "g": "8f3e7bc8aa8c628b",
        "name": "Temperature",
        "topic": "factory/energy/temperature_c",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 220,
        "wires": [
            [
                "4acaf77f97d3bbd1"
            ]
        ]
    },
    {
        "id": "7e5c441ed2907a1f",
        "type": "mqtt in",
        "z": "389b26273279e5c8",
        "g": "797078317007a183",
        "name": "MK4-1 Printer Smart Plug",
        "topic": "factory/energy/plug_01",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "4acaf77f97d3bbd1"
            ]
        ]
    },
    {
        "id": "14ebebb4ac83589f",
        "type": "mqtt in",
        "z": "389b26273279e5c8",
        "g": "8f3e7bc8aa8c628b",
        "name": "Humidity",
        "topic": "factory/energy/humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 280,
        "wires": [
            [
                "4acaf77f97d3bbd1"
            ]
        ]
    },
    {
        "id": "2394fadc2a5e1ffd",
        "type": "mqtt in",
        "z": "389b26273279e5c8",
        "d": true,
        "g": "70285d6452ccfa1a",
        "name": "TEST Driver (plug01_test State)",
        "topic": "factory/plug01_test/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 650,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "99dc0395eea3127a",
        "type": "mqtt in",
        "z": "389b26273279e5c8",
        "d": true,
        "g": "70285d6452ccfa1a",
        "name": "TEST Energy (plug01_test)",
        "topic": "factory/plug01_test/power_w",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 630,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "json-node",
        "type": "json",
        "z": "c0a7987ca656e902",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 260,
        "wires": [
            [
                "function-node",
                "7c6aa8cbe14a276d"
            ]
        ]
    },
    {
        "id": "function-node",
        "type": "function",
        "z": "c0a7987ca656e902",
        "name": "Parse Energy Data",
        "func": "// Define energy consumption thresholds for each stage\nconst energyThresholds = {\n    seed: 0,\n    sprout: 0.1,   // 0.1 kWh\n    young: 0.5,    // 0.5 kWh\n    mature: 1,     // 1 kWh\n    wilting: 2     // 2 kWh\n};\n\n\n// Add debug output\nnode.warn(\"Received payload: \" + JSON.stringify(msg.payload));\n\n// Parse the data\nlet data;\nif (typeof msg.payload === 'string') {\n    try {\n        data = JSON.parse(msg.payload);\n    } catch (e) {\n        node.error(\"Failed to parse JSON: \" + e.message);\n        return null;\n    }\n} else {\n    data = msg.payload;\n}\n\n// Check if data exists and has ENERGY property\nif (!data || !data.ENERGY) {\n    node.error(\"Invalid payload structure\");\n    return null;\n}\n\nconst energy = data.ENERGY;\n\n// Determine plant stage based on Total energy consumption\nlet currentStage = 'seed';\nconst totalEnergy = (energy.Total || 0) * 1000;\n\n\nif (totalEnergy >= energyThresholds.wilting) {\n    currentStage = 'wilting';\n} else if (totalEnergy >= energyThresholds.mature) {\n    currentStage = 'mature';\n} else if (totalEnergy >= energyThresholds.young) {\n    currentStage = 'young';\n} else if (totalEnergy >= energyThresholds.sprout) {\n    currentStage = 'sprout';\n}\n\n// Create messages for metrics\nconst metrics = [];\n\n// Power\nif (typeof energy.Power !== 'undefined') {\n    metrics.push({\n        topic: \"grafana/metrics/power\",\n        payload: energy.Power\n    });\n}\n\n// Voltage\nif (typeof energy.Voltage !== 'undefined') {\n    metrics.push({\n        topic: \"grafana/metrics/voltage\",\n        payload: energy.Voltage\n    });\n}\n\n// Current\nif (typeof energy.Current !== 'undefined') {\n    metrics.push({\n        topic: \"grafana/metrics/current\",\n        payload: energy.Current\n    });\n}\n\n// Total Energy\nif (typeof energy.Total !== 'undefined') {\n    metrics.push({\n        topic: \"grafana/metrics/total_energy\",\n        payload: energy.Total\n    });\n}\n\n// Power Factor\nif (typeof energy.Factor !== 'undefined') {\n    metrics.push({\n        topic: \"grafana/metrics/power_factor\",\n        payload: energy.Factor\n    });\n}\n\nconst plantStageMessage = {\n    topic: \"grafana/plant/stage\",\n    payload: {  // Send as object, not stringified JSON\n        stage: currentStage,\n        Today: totalEnergy\n    }\n};\n\n// Update the metrics array with properly formatted message\nmetrics[5] = plantStageMessage;\n\n// Return array of messages\nreturn [metrics[0], metrics[1], metrics[2], metrics[3], metrics[4], metrics[5]];",
        "outputs": 6,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 360,
        "wires": [
            [
                "mqtt-out-power"
            ],
            [
                "mqtt-out-voltage"
            ],
            [
                "mqtt-out-current"
            ],
            [
                "mqtt-out-total"
            ],
            [
                "mqtt-out-factor"
            ],
            [
                "0ddb7d74d33219bf"
            ]
        ]
    },
    {
        "id": "mqtt-out-power",
        "type": "mqtt out",
        "z": "c0a7987ca656e902",
        "name": "Power",
        "topic": "grafana/metrics/power",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "becc22b8f4461a4d",
        "x": 740,
        "y": 120,
        "wires": []
    },
    {
        "id": "mqtt-out-voltage",
        "type": "mqtt out",
        "z": "c0a7987ca656e902",
        "name": "Voltage",
        "topic": "grafana/metrics/voltage",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "becc22b8f4461a4d",
        "x": 770,
        "y": 200,
        "wires": []
    },
    {
        "id": "mqtt-out-current",
        "type": "mqtt out",
        "z": "c0a7987ca656e902",
        "name": "Current",
        "topic": "grafana/metrics/current",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "becc22b8f4461a4d",
        "x": 790,
        "y": 260,
        "wires": []
    },
    {
        "id": "mqtt-out-total",
        "type": "mqtt out",
        "z": "c0a7987ca656e902",
        "name": "Total Energy",
        "topic": "grafana/metrics/total_energy",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "becc22b8f4461a4d",
        "x": 800,
        "y": 360,
        "wires": []
    },
    {
        "id": "mqtt-out-factor",
        "type": "mqtt out",
        "z": "c0a7987ca656e902",
        "name": "Power Factor",
        "topic": "grafana/metrics/power_factor",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "becc22b8f4461a4d",
        "x": 780,
        "y": 440,
        "wires": []
    },
    {
        "id": "0939276fa3106cfc",
        "type": "mqtt in",
        "z": "c0a7987ca656e902",
        "name": "",
        "topic": "tele/smartplug_1/SENSOR",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 280,
        "wires": [
            [
                "json-node",
                "ae9755139d8d0f98"
            ]
        ]
    },
    {
        "id": "test-seed",
        "type": "inject",
        "z": "c0a7987ca656e902",
        "name": "Test Seed Stage",
        "props": [
            {
                "p": "payload",
                "v": "{\"ENERGY\":{\"Total\":0}}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 290,
        "y": 520,
        "wires": [
            [
                "function-node"
            ]
        ]
    },
    {
        "id": "0ddb7d74d33219bf",
        "type": "websocket out",
        "z": "c0a7987ca656e902",
        "name": "Plant WebSocket",
        "server": "07bb42ebce915296",
        "client": "",
        "x": 760,
        "y": 520,
        "wires": []
    },
    {
        "id": "04afc50afe4e7567",
        "type": "http in",
        "z": "c0a7987ca656e902",
        "g": "51fdc2c5228199f5",
        "name": "",
        "url": "/plant",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 700,
        "wires": [
            [
                "4d8634944c80fd5a"
            ]
        ]
    },
    {
        "id": "4d8634944c80fd5a",
        "type": "template",
        "z": "c0a7987ca656e902",
        "g": "51fdc2c5228199f5",
        "name": "index.html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <title>Energy Consumption Visualization</title>\n    <style>\n        html, body {\n            margin: 0; \n            padding: 0;\n            background: transparent;\n            color: #eee;\n            font-family: sans-serif;\n            overflow: hidden;\n        }\n        \n        #mainContainer {\n            width: 100%;\n            height: 100vh;\n            position: relative;\n        }\n\n        #imageContainer {\n            width: 100%;\n            height: 100vh;\n            position: relative;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            background: transparent;\n        }\n\n        .energy-image {\n            position: absolute;\n            max-width: 90%;\n            max-height: 90vh;\n            opacity: 0;\n            will-change: opacity;\n            backface-visibility: hidden;\n            -webkit-backface-visibility: hidden;\n            /* transition: opacity 0.5s ease-in-out; */\n            visibility: hidden;\n        }\n\n        .energy-image.active {\n            opacity: 1;\n            visibility: visible;\n        }\n\n        #controlPanel {\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            background: rgba(0,0,0,0.7);\n            padding: 15px;\n            border-radius: 8px;\n            min-width: 200px;\n            z-index: 1000;\n        }\n\n        #conditions {\n            background: rgba(255,255,255,0.1);\n            padding: 10px;\n            border-radius: 4px;\n            margin-top: 10px;\n        }\n\n        #conditions p {\n            margin: 5px 0;\n            font-size: 14px;\n            color: #ffffff;\n        }\n\n        #statusText {\n            position: absolute;\n            bottom: 10px;\n            left: 10px;\n            font-size: 12px;\n            color: #666;\n            background: rgba(0,0,0,0.5);\n            padding: 5px 10px;\n            border-radius: 4px;\n        }\n\n        #imageNumber {\n            position: absolute;\n            top: 10px;\n            left: 10px;\n            font-size: 16px;\n            color: #ffffff;\n            background: rgba(0,0,0,0.7);\n            padding: 5px 10px;\n            border-radius: 4px;\n            z-index: 1000;\n        }\n\n        #debugPanel {\n            position: fixed;\n            bottom: 10px;\n            right: 10px;\n            background: rgba(0,0,0,0.8);\n            color: white;\n            padding: 10px;\n            font-family: monospace;\n            max-height: 200px;\n            overflow-y: auto;\n            z-index: 1000;\n            border-radius: 4px;\n            font-size: 12px;\n            width: 400px;\n        }\n\n        #debugLog {\n            margin: 0;\n            padding: 5px;\n            white-space: pre-wrap;\n            word-wrap: break-word;\n        }\n\n        .debug-title {\n            font-weight: bold;\n            margin-bottom: 5px;\n            color: #4CAF50;\n        }\n\n        /* Loading indicator */\n        .loading-overlay {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0,0,0,0.7);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            z-index: 2000;\n        }\n\n        .loading-spinner {\n            border: 4px solid #f3f3f3;\n            border-top: 4px solid #3498db;\n            border-radius: 50%;\n            width: 40px;\n            height: 40px;\n            animation: spin 1s linear infinite;\n        }\n\n        @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n        }\n    </style>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.0/gsap.min.js\"></script>\n</head>\n<body>\n    <div id=\"mainContainer\">\n        <!-- Loading Overlay -->\n        <div class=\"loading-overlay\" id=\"loadingOverlay\">\n            <div class=\"loading-spinner\"></div>\n        </div>\n\n        <div id=\"imageContainer\">\n            <!-- Images with loading handlers -->\n            <img src=\"images/1.png\" class=\"energy-image\" id=\"image-1\" alt=\"Energy Stage 1\">\n            <img src=\"images/2.png\" class=\"energy-image\" id=\"image-2\" alt=\"Energy Stage 2\">\n            <img src=\"images/3.png\" class=\"energy-image\" id=\"image-3\" alt=\"Energy Stage 3\">\n            <img src=\"images/4.png\" class=\"energy-image\" id=\"image-4\" alt=\"Energy Stage 4\">\n            <img src=\"images/5.png\" class=\"energy-image\" id=\"image-5\" alt=\"Energy Stage 5\">\n            <img src=\"images/6.png\" class=\"energy-image\" id=\"image-6\" alt=\"Energy Stage 6\">\n            <img src=\"images/7.png\" class=\"energy-image\" id=\"image-7\" alt=\"Energy Stage 7\">\n            <img src=\"images/8.png\" class=\"energy-image\" id=\"image-8\" alt=\"Energy Stage 8\">\n            <img src=\"images/9.png\" class=\"energy-image\" id=\"image-9\" alt=\"Energy Stage 9\">\n            <img src=\"images/10.png\" class=\"energy-image\" id=\"image-10\" alt=\"Energy Stage 10\">\n            <img src=\"images/11.png\" class=\"energy-image\" id=\"image-11\" alt=\"Energy Stage 11\">\n            <img src=\"images/12.png\" class=\"energy-image\" id=\"image-12\" alt=\"Energy Stage 12\">\n            <img src=\"images/13.png\" class=\"energy-image\" id=\"image-13\" alt=\"Energy Stage 13\">\n            <img src=\"images/14.png\" class=\"energy-image\" id=\"image-14\" alt=\"Energy Stage 14\">\n            <img src=\"images/15.png\" class=\"energy-image\" id=\"image-15\" alt=\"Energy Stage 15\">\n            <img src=\"images/16.png\" class=\"energy-image\" id=\"image-16\" alt=\"Energy Stage 16\">\n            <img src=\"images/17.png\" class=\"energy-image\" id=\"image-17\" alt=\"Energy Stage 17\">\n            <img src=\"images/18.png\" class=\"energy-image\" id=\"image-18\" alt=\"Energy Stage 18\">\n            <img src=\"images/19.png\" class=\"energy-image\" id=\"image-19\" alt=\"Energy Stage 19\">\n            <img src=\"images/20.png\" class=\"energy-image\" id=\"image-20\" alt=\"Energy Stage 20\">\n            <img src=\"images/21.png\" class=\"energy-image\" id=\"image-21\" alt=\"Energy Stage 21\">\n        </div>\n\n        <div id=\"imageNumber\">Image: 1</div>\n\n        <div id=\"controlPanel\">\n            <h3 style=\"margin: 0 0 10px 0;\">Energy Consumption Monitor</h3>\n            <div id=\"conditions\">\n                <p>Current Energy: <span id=\"energyValue\">0</span> Wh</p>\n                <p>Current Image: <span id=\"currentImage\">1</span></p>\n                <p>Power: <span id=\"powerValue\">0</span> W</p>\n                <p>Last Updated: <span id=\"lastUpdate\">-</span></p>\n            </div>\n        </div>\n\n        <div id=\"statusText\">Connecting to WebSocket...</div>\n\n        <div id=\"debugPanel\">\n            <div class=\"debug-title\">Debug Log:</div>\n            <pre id=\"debugLog\"></pre>\n        </div>\n    </div>\n\n    <script src=\"js/main.js\"></script>\n</body>\n</html>",
        "output": "str",
        "x": 330,
        "y": 700,
        "wires": [
            [
                "890a40f8cc4f5870"
            ]
        ]
    },
    {
        "id": "890a40f8cc4f5870",
        "type": "http response",
        "z": "c0a7987ca656e902",
        "g": "51fdc2c5228199f5",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "text/html"
        },
        "x": 510,
        "y": 700,
        "wires": []
    },
    {
        "id": "f52cb9f815c1ec3c",
        "type": "http in",
        "z": "c0a7987ca656e902",
        "g": "51fdc2c5228199f5",
        "name": "",
        "url": "/js/main.js",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 760,
        "wires": [
            [
                "abdc162f301a22bd"
            ]
        ]
    },
    {
        "id": "abdc162f301a22bd",
        "type": "template",
        "z": "c0a7987ca656e902",
        "g": "51fdc2c5228199f5",
        "name": "/js/main.js",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "document.addEventListener('DOMContentLoaded', async () => {\n    console.log('DOM Content Loaded');\n    \n    // Debug logging utility\n    const debug = {\n        log: function(message, data = null) {\n            const timestamp = new Date().toLocaleTimeString();\n            const logMessage = `[${timestamp}] ${message}`;\n            console.log(logMessage, data || '');\n            \n            const debugLog = document.getElementById('debugLog');\n            if (debugLog) {\n                debugLog.innerHTML = `${logMessage}\\n${debugLog.innerHTML}`.slice(0, 5000);\n            }\n        },\n        error: function(message, error = null) {\n            const timestamp = new Date().toLocaleTimeString();\n            const errorMessage = `[${timestamp}] ERROR: ${message}`;\n            console.error(errorMessage, error || '');\n            \n            const debugLog = document.getElementById('debugLog');\n            if (debugLog) {\n                debugLog.innerHTML = `<span style=\"color: #ff4444\">${errorMessage}</span>\\n${debugLog.innerHTML}`.slice(0, 5000);\n            }\n        }\n    };\n\n    // Energy thresholds for 21 images (kWh values)\n    const energyThresholds = {\n        '1': 0,      '2': 0.01,   '3': 0.02,   '4': 0.03,   '5': 0.04,\n        '6': 0.05,   '7': 0.06,   '8': 0.07,   '9': 0.08,   '10': 0.09,\n        '11': 0.10,  '12': 0.11,  '13': 0.12,  '14': 0.13,  '15': 0.14,\n        '16': 0.15,  '17': 0.16,  '18': 0.17,  '19': 0.18,  '20': 0.19,\n        '21': 0.20\n    };\n\n    // Track current state\n    let currentImageNumber = 1;\n    let isTransitioning = false;\n    const images = {};\n\n    // Preload images function\n    async function preloadImages() {\n        debug.log('Starting image preload...');\n        const loadingOverlay = document.getElementById('loadingOverlay');\n        \n        const preloadPromises = [];\n        for (let i = 1; i <= 21; i++) {\n            const img = document.getElementById(`image-${i}`);\n            if (img) {\n                images[i] = img;\n                preloadPromises.push(new Promise((resolve, reject) => {\n                    if (img.complete) {\n                        resolve(i);\n                    } else {\n                        img.onload = () => resolve(i);\n                        img.onerror = () => reject(`Failed to load image ${i}`);\n                    }\n                }));\n            }\n        }\n\n        try {\n            await Promise.all(preloadPromises);\n            debug.log('All images preloaded successfully');\n            if (loadingOverlay) {\n                loadingOverlay.style.display = 'none';\n            }\n            // Show initial image\n            showImage(1);\n        } catch (error) {\n            debug.error('Image preload error:', error);\n            if (loadingOverlay) {\n                loadingOverlay.innerHTML = 'Error loading images. Please refresh the page.';\n            }\n        }\n    }\n\n    // Show image function (without transition)\n    function showImage(imageNumber) {\n        if (images[imageNumber]) {\n            Object.values(images).forEach(img => {\n                img.style.visibility = 'hidden';\n                img.style.opacity = '0';\n            });\n            images[imageNumber].style.visibility = 'visible';\n            images[imageNumber].style.opacity = '1';\n            currentImageNumber = imageNumber;\n            updateDisplayElements(imageNumber);\n        }\n    }\n\n    // Transition between images using GSAP\n    async function transitionToImage(newImageNumber) {\n        if (newImageNumber === currentImageNumber || isTransitioning) {\n            return;\n        }\n\n        debug.log(`Transitioning from image ${currentImageNumber} to ${newImageNumber}`);\n        isTransitioning = true;\n\n        const timeline = gsap.timeline({\n            onComplete: () => {\n                isTransitioning = false;\n                debug.log(`Transition to image ${newImageNumber} complete`);\n            }\n        });\n\n        // Prepare new image\n        if (images[newImageNumber]) {\n            images[newImageNumber].style.visibility = 'visible';\n            images[newImageNumber].style.opacity = '0';\n        }\n\n        // Create transition\n        timeline\n            .to(images[currentImageNumber], {\n                duration: 0.5,\n                opacity: 0,\n                ease: \"power2.out\",\n                onComplete: () => {\n                    images[currentImageNumber].style.visibility = 'hidden';\n                }\n            })\n            .to(images[newImageNumber], {\n                duration: 0.5,\n                opacity: 1,\n                ease: \"power2.in\"\n            }, \"-=0.3\");\n\n        updateDisplayElements(newImageNumber);\n        currentImageNumber = newImageNumber;\n    }\n\n    // Update display elements\n    function updateDisplayElements(imageNumber) {\n        document.getElementById('currentImage').textContent = imageNumber;\n        document.getElementById('imageNumber').textContent = `Image: ${imageNumber}`;\n    }\n\n    // Calculate image number based on energy\n    function getImageNumberForEnergy(energy) {\n        for (let i = 21; i >= 1; i--) {\n            if (energy >= energyThresholds[i]) {\n                return i;\n            }\n        }\n        return 1;\n    }\n\n    // Update conditions panel\n    function updateConditionsPanel(data) {\n        document.getElementById('energyValue').textContent = \n            typeof data.todayEnergy === 'number' ? data.todayEnergy.toFixed(3) : data.todayEnergy;\n        document.getElementById('powerValue').textContent = \n            typeof data.power === 'number' ? data.power.toFixed(2) : data.power;\n        document.getElementById('lastUpdate').textContent = new Date().toLocaleTimeString();\n    }\n\n    // WebSocket handling\n    let ws;\n    let reconnectAttempts = 0;\n    const maxReconnectAttempts = 5;\n\n    function connectWebSocket() {\n        const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n        const wsUrl = `${wsProtocol}//${window.location.hostname}:1880/ws/plant`;\n        debug.log('Connecting to WebSocket:', wsUrl);\n\n        ws = new WebSocket(wsUrl);\n\n        ws.onopen = () => {\n            debug.log('WebSocket Connected');\n            updateStatus('Connected', '#4CAF50');\n            reconnectAttempts = 0;\n        };\n\n        ws.onmessage = (event) => {\n            try {\n                const data = JSON.parse(event.data);\n                let energyData = data.payload;\n                \n                if (typeof energyData === 'string') {\n                    energyData = JSON.parse(energyData);\n                }\n\n                if (energyData && typeof energyData.Today !== 'undefined') {\n                    const newImageNumber = getImageNumberForEnergy(energyData.Today);\n                    transitionToImage(newImageNumber);\n\n                    updateConditionsPanel({\n                        todayEnergy: energyData.Today,\n                        power: energyData.power || 0\n                    });\n\n                    updateStatus(`Energy: ${energyData.Today.toFixed(3)} kWh - Image: ${newImageNumber}`, '#4CAF50');\n                }\n            } catch (error) {\n                debug.error('WebSocket message processing error:', error);\n                updateStatus('Error processing data', '#FF0000');\n            }\n        };\n\n        ws.onerror = (error) => {\n            debug.error('WebSocket Error:', error);\n            updateStatus('Connection Error', '#FF0000');\n        };\n\n        ws.onclose = (event) => {\n            debug.log('WebSocket Connection Closed', event);\n            handleReconnection();\n        };\n    }\n\n    // Update status display\n    function updateStatus(message, color) {\n        const statusElement = document.getElementById('statusText');\n        if (statusElement) {\n            statusElement.textContent = message;\n            statusElement.style.color = color;\n        }\n    }\n\n    // Handle WebSocket reconnection\n    function handleReconnection() {\n        updateStatus('Disconnected - Reconnecting...', '#FFA500');\n        \n        if (reconnectAttempts < maxReconnectAttempts) {\n            const timeout = Math.min(1000 * Math.pow(2, reconnectAttempts), 10000);\n            debug.log(`Attempting to reconnect in ${timeout}ms...`);\n            \n            setTimeout(() => {\n                reconnectAttempts++;\n                connectWebSocket();\n            }, timeout);\n        } else {\n            updateStatus('Connection failed - Please refresh the page', '#FF0000');\n            debug.error('Max reconnection attempts reached');\n        }\n    }\n\n    // Initialize\n    try {\n        await preloadImages();\n        connectWebSocket();\n        \n        // Initialize conditions panel\n        updateConditionsPanel({\n            todayEnergy: 0,\n            power: 0\n        });\n        \n        debug.log('Initialization complete');\n    } catch (error) {\n        debug.error('Initialization error:', error);\n        updateStatus('Initialization failed - Please refresh the page', '#FF0000');\n    }\n});",
        "output": "str",
        "x": 320,
        "y": 760,
        "wires": [
            [
                "06b71666ccb8c0d6"
            ]
        ]
    },
    {
        "id": "06b71666ccb8c0d6",
        "type": "http response",
        "z": "c0a7987ca656e902",
        "g": "51fdc2c5228199f5",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/javascript"
        },
        "x": 510,
        "y": 760,
        "wires": []
    },
    {
        "id": "07ffa8fe4b4bc480",
        "type": "http in",
        "z": "c0a7987ca656e902",
        "g": "fa9028e60e616fca",
        "name": "",
        "url": "/plant_exp",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 800,
        "y": 700,
        "wires": [
            [
                "82d948411ee82457"
            ]
        ]
    },
    {
        "id": "82d948411ee82457",
        "type": "template",
        "z": "c0a7987ca656e902",
        "g": "fa9028e60e616fca",
        "name": "index.html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <title>Energy Consumption Visualization - Experimental Panel</title>\n    <style>\n        html, body {\n            margin: 0; \n            padding: 0;\n            background: transparent;\n            color: #eee;\n            font-family: sans-serif;\n            overflow: hidden;\n            height: 100%;\n        }\n        \n        #mainContainer {\n            width: 100%;\n            height: 100vh;\n            position: relative;\n        }\n\n        #imageContainer {\n            width: 100%;\n            height: 100vh;\n            position: relative;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n\n        /* Images are no longer absolutely positioned */\n        .energy-image {\n            max-width: 100%;\n            max-height: 100%;\n            display: none;\n        }\n\n        #controlPanel {\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            background: rgba(0,0,0,0.7);\n            padding: 15px;\n            border-radius: 8px;\n            min-width: 200px;\n            z-index: 1000;\n        }\n\n        #conditions {\n            background: rgba(255,255,255,0.1);\n            padding: 10px;\n            border-radius: 4px;\n            margin-top: 10px;\n        }\n\n        #conditions p {\n            margin: 5px 0;\n            font-size: 14px;\n            color: #ffffff;\n        }\n\n        #simulateButton {\n            margin-top: 10px;\n            padding: 8px 12px;\n            font-size: 14px;\n            border: none;\n            border-radius: 4px;\n            background-color: #4CAF50;\n            color: #fff;\n            cursor: pointer;\n        }\n\n        #simulateButton:hover {\n            background-color: #45a049;\n        }\n\n        #statusText {\n            position: absolute;\n            bottom: 10px;\n            left: 10px;\n            font-size: 12px;\n            color: #666;\n            background: rgba(0,0,0,0.5);\n            padding: 5px 10px;\n            border-radius: 4px;\n        }\n\n        #imageNumber {\n            position: absolute;\n            top: 10px;\n            left: 10px;\n            font-size: 16px;\n            color: #ffffff;\n            background: rgba(0,0,0,0.7);\n            padding: 5px 10px;\n            border-radius: 4px;\n            z-index: 1000;\n        }\n    </style>\n    <!-- We don't need GSAP anymore since transitions are removed, \n         but you can keep it if you want to reintroduce animations. -->\n</head>\n<body>\n    <div id=\"mainContainer\">\n        <div id=\"imageContainer\">\n            <!-- 21 images -->\n            <img src=\"images/1.png\" class=\"energy-image\" id=\"image-1\" alt=\"Energy Stage 1\">\n            <img src=\"images/2.png\" class=\"energy-image\" id=\"image-2\" alt=\"Energy Stage 2\">\n            <img src=\"images/3.png\" class=\"energy-image\" id=\"image-3\" alt=\"Energy Stage 3\">\n            <img src=\"images/4.png\" class=\"energy-image\" id=\"image-4\" alt=\"Energy Stage 4\">\n            <img src=\"images/5.png\" class=\"energy-image\" id=\"image-5\" alt=\"Energy Stage 5\">\n            <img src=\"images/6.png\" class=\"energy-image\" id=\"image-6\" alt=\"Energy Stage 6\">\n            <img src=\"images/7.png\" class=\"energy-image\" id=\"image-7\" alt=\"Energy Stage 7\">\n            <img src=\"images/8.png\" class=\"energy-image\" id=\"image-8\" alt=\"Energy Stage 8\">\n            <img src=\"images/9.png\" class=\"energy-image\" id=\"image-9\" alt=\"Energy Stage 9\">\n            <img src=\"images/10.png\" class=\"energy-image\" id=\"image-10\" alt=\"Energy Stage 10\">\n            <img src=\"images/11.png\" class=\"energy-image\" id=\"image-11\" alt=\"Energy Stage 11\">\n            <img src=\"images/12.png\" class=\"energy-image\" id=\"image-12\" alt=\"Energy Stage 12\">\n            <img src=\"images/13.png\" class=\"energy-image\" id=\"image-13\" alt=\"Energy Stage 13\">\n            <img src=\"images/14.png\" class=\"energy-image\" id=\"image-14\" alt=\"Energy Stage 14\">\n            <img src=\"images/15.png\" class=\"energy-image\" id=\"image-15\" alt=\"Energy Stage 15\">\n            <img src=\"images/16.png\" class=\"energy-image\" id=\"image-16\" alt=\"Energy Stage 16\">\n            <img src=\"images/17.png\" class=\"energy-image\" id=\"image-17\" alt=\"Energy Stage 17\">\n            <img src=\"images/18.png\" class=\"energy-image\" id=\"image-18\" alt=\"Energy Stage 18\">\n            <img src=\"images/19.png\" class=\"energy-image\" id=\"image-19\" alt=\"Energy Stage 19\">\n            <img src=\"images/20.png\" class=\"energy-image\" id=\"image-20\" alt=\"Energy Stage 20\">\n            <img src=\"images/21.png\" class=\"energy-image\" id=\"image-21\" alt=\"Energy Stage 21\">\n        </div>\n\n        <div id=\"imageNumber\">Image: 1</div>\n\n        <div id=\"controlPanel\">\n            <h3 style=\"margin: 0 0 10px 0;\">Energy Consumption Monitor</h3>\n            <div id=\"conditions\">\n                <p>Current Energy: <span id=\"energyValue\">0</span> Wh</p>\n                <p>Current Image: <span id=\"currentImage\">1</span></p>\n                <p>Power: <span id=\"powerValue\">0</span> W</p>\n                <p>Last Updated: <span id=\"lastUpdate\">-</span></p>\n            </div>\n            <!-- Simulation button to increase energy consumption for testing -->\n            <button id=\"simulateButton\">Simulate Energy Increase</button>\n        </div>\n\n        <!-- Status text -->\n        <div id=\"statusText\">Experimental Mode</div>\n    </div>\n\n    <!-- Link to your JS file -->\n    <script src=\"js/main_exp.js\"></script>\n</body>\n</html>\n",
        "output": "str",
        "x": 990,
        "y": 700,
        "wires": [
            [
                "b3e5d4c6e270d5e2"
            ]
        ]
    },
    {
        "id": "b3e5d4c6e270d5e2",
        "type": "http response",
        "z": "c0a7987ca656e902",
        "g": "fa9028e60e616fca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 700,
        "wires": []
    },
    {
        "id": "8b3a2d2051354225",
        "type": "http in",
        "z": "c0a7987ca656e902",
        "g": "fa9028e60e616fca",
        "name": "",
        "url": "/js/main_exp.js",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 810,
        "y": 760,
        "wires": [
            [
                "13ccce47f10fecd0"
            ]
        ]
    },
    {
        "id": "13ccce47f10fecd0",
        "type": "template",
        "z": "c0a7987ca656e902",
        "g": "fa9028e60e616fca",
        "name": "/js/main.js",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "document.addEventListener('DOMContentLoaded', () => {\n    console.log('DOM Content Loaded');\n\n    // Energy thresholds for each image\n    const energyThresholds = {\n        '1': 0,      // 0 Wh\n        '2': 10,     // 10 Wh\n        '3': 20,     \n        '4': 30,\n        '5': 40,\n        '6': 50,\n        '7': 60,\n        '8': 70,\n        '9': 80,\n        '10': 90,\n        '11': 100,\n        '12': 110,\n        '13': 120,\n        '14': 130,\n        '15': 140,\n        '16': 150,\n        '17': 160,\n        '18': 170,\n        '19': 180,\n        '20': 190,\n        '21': 200\n    };\n\n    // Track current image\n    let currentImageNumber = 1;\n\n    // Get all image elements, hide them except the first\n    const images = {};\n    for (let i = 1; i <= 21; i++) {\n        images[i] = document.getElementById(`image-${i}`);\n        if (images[i]) {\n            images[i].style.display = 'none';\n        }\n    }\n    // Show the first image\n    if (images[1]) {\n        images[1].style.display = 'block';\n    }\n\n    // Determine which image to show based on energy consumption\n    function getImageNumberForEnergy(energy) {\n        for (let i = 21; i >= 1; i--) {\n            if (energy >= energyThresholds[i]) {\n                return i;\n            }\n        }\n        return 1;\n    }\n\n    // Instantly switch images (no fade)\n    function transitionToImage(newImageNumber) {\n        if (newImageNumber === currentImageNumber) return;\n\n        // Hide current image\n        if (images[currentImageNumber]) {\n            images[currentImageNumber].style.display = 'none';\n        }\n        // Show new image\n        if (images[newImageNumber]) {\n            images[newImageNumber].style.display = 'block';\n        }\n\n        currentImageNumber = newImageNumber;\n        document.getElementById('currentImage').textContent = newImageNumber;\n        document.getElementById('imageNumber').textContent = `Image: ${newImageNumber}`;\n    }\n\n    // Update the conditions panel\n    function updateConditionsPanel(data) {\n        document.getElementById('energyValue').textContent =\n            typeof data.totalEnergy === 'number' ? data.totalEnergy.toFixed(2) : data.totalEnergy;\n        document.getElementById('powerValue').textContent =\n            typeof data.power === 'number' ? data.power.toFixed(2) : data.power;\n        document.getElementById('lastUpdate').textContent = new Date().toLocaleTimeString();\n    }\n\n    // Simulation: Increase energy gradually\n    const simulateButton = document.getElementById('simulateButton');\n    simulateButton.addEventListener('click', () => {\n        console.log(\"Simulation button clicked.\");\n        startSimulation();\n    });\n\n    function startSimulation() {\n        let simulatedEnergy = 0;\n        // Increase energy by 5 Wh every second\n        const simulationInterval = setInterval(() => {\n            simulatedEnergy += 5;\n            console.log(\"Simulated Energy:\", simulatedEnergy);\n\n            // Get the right image for this energy\n            const newImageNumber = getImageNumberForEnergy(simulatedEnergy);\n            transitionToImage(newImageNumber);\n\n            // Update panel & status text\n            updateConditionsPanel({ totalEnergy: simulatedEnergy, power: 0 });\n            document.getElementById('statusText').textContent =\n                `Simulated Energy: ${simulatedEnergy.toFixed(2)} Wh - Image: ${newImageNumber}`;\n\n            // Stop simulation after 210 Wh\n            if (simulatedEnergy >= 210) {\n                clearInterval(simulationInterval);\n                console.log(\"Simulation complete.\");\n            }\n        }, 1000);\n    }\n\n    console.log('Initialization complete for experimental panel.');\n});\n",
        "output": "str",
        "x": 980,
        "y": 760,
        "wires": [
            [
                "ee5ed177de5c07f2"
            ]
        ]
    },
    {
        "id": "ee5ed177de5c07f2",
        "type": "http response",
        "z": "c0a7987ca656e902",
        "g": "fa9028e60e616fca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 760,
        "wires": []
    },
    {
        "id": "ae9755139d8d0f98",
        "type": "debug",
        "z": "c0a7987ca656e902",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 240,
        "y": 400,
        "wires": []
    },
    {
        "id": "05a72e9daacb57d4",
        "type": "http in",
        "z": "c0a7987ca656e902",
        "g": "f0f3249a92f3348a",
        "name": "",
        "url": "/corn_imgs",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 940,
        "wires": [
            [
                "a9049259d9ec799d"
            ]
        ]
    },
    {
        "id": "a9049259d9ec799d",
        "type": "template",
        "z": "c0a7987ca656e902",
        "g": "f0f3249a92f3348a",
        "name": "index.html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <title>Energy Consumption Visualization</title>\n    <style>\n        html, body {\n            margin: 0; \n            padding: 0;\n            background: transparent;\n            color: #eee;\n            font-family: sans-serif;\n            overflow: hidden;\n        }\n        \n        #mainContainer {\n            width: 100%;\n            height: 100vh;\n            position: relative;\n        }\n\n        #imageContainer {\n            width: 100%;\n            height: 100vh;\n            position: relative;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n\n        .energy-image {\n            position: absolute;\n            max-width: 90%;\n            max-height: 90vh;\n            opacity: 0;\n            /* transition: opacity 0.5s ease-in-out; */\n            display: none;\n        }\n\n        .energy-image.active {\n            opacity: 1;\n            display: block;\n        }\n\n        #controlPanel {\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            background: rgba(0,0,0,0.7);\n            padding: 15px;\n            border-radius: 8px;\n            min-width: 200px;\n            z-index: 1000;\n        }\n\n        #conditions {\n            background: rgba(255,255,255,0.1);\n            padding: 10px;\n            border-radius: 4px;\n            margin-top: 10px;\n        }\n\n        #conditions p {\n            margin: 5px 0;\n            font-size: 14px;\n            color: #ffffff;\n        }\n\n        #statusText {\n            position: absolute;\n            bottom: 10px;\n            left: 10px;\n            font-size: 12px;\n            color: #666;\n            background: rgba(0,0,0,0.5);\n            padding: 5px 10px;\n            border-radius: 4px;\n        }\n\n        #imageNumber {\n            position: absolute;\n            top: 10px;\n            left: 10px;\n            font-size: 16px;\n            color: #ffffff;\n            background: rgba(0,0,0,0.7);\n            padding: 5px 10px;\n            border-radius: 4px;\n            z-index: 1000;\n        }\n    </style>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.0/gsap.min.js\"></script>\n</head>\n<body>\n    <script>\n        // Log image loading attempts\n        function logImageAttempt(imageId, success, error) {\n            console.log(`Image ${imageId} loading ${success ? 'succeeded' : 'failed'}`, error || '');\n        }\n    </script>\n\n    <div id=\"mainContainer\">\n        <div id=\"imageContainer\">\n            <!-- Updated image elements (1 to 8) from corn_imgs folder -->\n            <img src=\"corn_imgs/1.png\" class=\"energy-image\" id=\"image-1\" alt=\"Energy Stage 1\" \n                onerror=\"logImageAttempt(1, false, this.src)\" \n                onload=\"logImageAttempt(1, true)\">\n            <img src=\"corn_imgs/2.png\" class=\"energy-image\" id=\"image-2\" alt=\"Energy Stage 2\"\n                onerror=\"logImageAttempt(2, false, this.src)\"\n                onload=\"logImageAttempt(2, true)\">\n            <img src=\"corn_imgs/3.png\" class=\"energy-image\" id=\"image-3\" alt=\"Energy Stage 3\"\n                onerror=\"logImageAttempt(3, false, this.src)\"\n                onload=\"logImageAttempt(3, true)\">\n            <img src=\"corn_imgs/4.png\" class=\"energy-image\" id=\"image-4\" alt=\"Energy Stage 4\"\n                onerror=\"logImageAttempt(4, false, this.src)\"\n                onload=\"logImageAttempt(4, true)\">\n            <img src=\"corn_imgs/5.png\" class=\"energy-image\" id=\"image-5\" alt=\"Energy Stage 5\"\n                onerror=\"logImageAttempt(5, false, this.src)\"\n                onload=\"logImageAttempt(5, true)\">\n            <img src=\"corn_imgs/6.png\" class=\"energy-image\" id=\"image-6\" alt=\"Energy Stage 6\"\n                onerror=\"logImageAttempt(6, false, this.src)\"\n                onload=\"logImageAttempt(6, true)\">\n            <img src=\"corn_imgs/7.png\" class=\"energy-image\" id=\"image-7\" alt=\"Energy Stage 7\"\n                onerror=\"logImageAttempt(7, false, this.src)\"\n                onload=\"logImageAttempt(7, true)\">\n            <img src=\"corn_imgs/8.png\" class=\"energy-image\" id=\"image-8\" alt=\"Energy Stage 8\"\n                onerror=\"logImageAttempt(8, false, this.src)\"\n                onload=\"logImageAttempt(8, true)\">\n        </div>\n\n        <div id=\"imageNumber\">Image: 1</div>\n\n        <div id=\"controlPanel\">\n            <h3 style=\"margin: 0 0 10px 0;\">Energy Consumption Monitor</h3>\n            <div id=\"conditions\">\n                <p>Current Energy: <span id=\"energyValue\">0</span> kWh</p>\n                <p>Current Image: <span id=\"currentImage\">1</span></p>\n                <p>Power: <span id=\"powerValue\">0</span> W</p>\n                <p>Last Updated: <span id=\"lastUpdate\">-</span></p>\n            </div>\n        </div>\n\n        <div id=\"statusText\">Connecting to WebSocket...</div>\n    </div>\n\n    <script src=\"js/corn_imgs.js\"></script>\n</body>\n</html>\n",
        "output": "str",
        "x": 330,
        "y": 940,
        "wires": [
            [
                "d35d1066759ea635"
            ]
        ]
    },
    {
        "id": "d35d1066759ea635",
        "type": "http response",
        "z": "c0a7987ca656e902",
        "g": "f0f3249a92f3348a",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "text/html"
        },
        "x": 510,
        "y": 940,
        "wires": []
    },
    {
        "id": "6d3c08ce5fc6c4a6",
        "type": "http in",
        "z": "c0a7987ca656e902",
        "g": "f0f3249a92f3348a",
        "name": "",
        "url": "/js/corn_imgs.js",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1000,
        "wires": [
            [
                "a7f6bb1f126ccadc"
            ]
        ]
    },
    {
        "id": "a7f6bb1f126ccadc",
        "type": "template",
        "z": "c0a7987ca656e902",
        "g": "f0f3249a92f3348a",
        "name": "/js/main.js",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "document.addEventListener('DOMContentLoaded', () => {\n    console.log('DOM Content Loaded');\n    console.log('Current protocol:', window.location.protocol);\n    console.log('Current hostname:', window.location.hostname);\n    console.log('Current port:', window.location.port);\n    console.log('Base URL:', window.location.origin);\n\n    // Energy thresholds for 8 images (using \"Today\" energy in kWh)\n    const energyThresholds = {\n        '1': 0,       // 0 kWh\n        '2': 0.01,    // 10 Wh = 0.01 kWh\n        '3': 0.02,    // 20 Wh = 0.02 kWh\n        '4': 0.03,    // 30 Wh = 0.03 kWh\n        '5': 0.04,    // 40 Wh = 0.04 kWh\n        '6': 0.05,    // 50 Wh = 0.05 kWh\n        '7': 0.06,    // 60 Wh = 0.06 kWh\n        '8': 0.07     // 70 Wh = 0.07 kWh\n    };\n\n    // Function to check image paths and loading status (for 8 images)\n    function checkImagePaths() {\n        console.log('Checking image paths and status...');\n        for (let i = 1; i <= 8; i++) {\n            const img = document.getElementById(`image-${i}`);\n            if (img) {\n                console.log(`Image ${i}:`, {\n                    src: img.src,\n                    complete: img.complete,\n                    naturalWidth: img.naturalWidth,\n                    display: img.style.display,\n                    opacity: img.style.opacity\n                });\n                // Test image loading\n                fetch(img.src)\n                    .then(response => {\n                        console.log(`Image ${i} fetch status:`, response.status);\n                        if (!response.ok) {\n                            console.error(`Image ${i} fetch failed:`, response.statusText);\n                        }\n                    })\n                    .catch(error => {\n                        console.error(`Image ${i} fetch error:`, error);\n                    });\n            } else {\n                console.error(`Image element ${i} not found in DOM`);\n            }\n        }\n    }\n\n    // Track current image number\n    let currentImageNumber = 1;\n\n    // Initialize image elements for 8 images (assumes your HTML includes images with id=\"image-1\" to \"image-8\")\n    console.log('Initializing image elements...');\n    const images = {};\n    for (let i = 1; i <= 8; i++) {\n        images[i] = document.getElementById(`image-${i}`);\n        if (images[i]) {\n            images[i].style.display = 'none';\n            images[i].style.opacity = '0';\n        } else {\n            console.error(`Failed to get image element ${i}`);\n        }\n    }\n\n    // Display the initial image\n    if (images[1]) {\n        images[1].style.display = 'block';\n        images[1].style.opacity = '1';\n        console.log('Initial image displayed');\n    } else {\n        console.error('Failed to display initial image');\n    }\n\n    // Determine which image to display based on \"Today\" energy consumption\n    function getImageNumberForEnergy(energy) {\n        console.log('Calculating image number for energy:', energy);\n        for (let i = 8; i >= 1; i--) {\n            if (energy >= energyThresholds[i]) {\n                console.log(`Selected image ${i} for energy ${energy}`);\n                return i;\n            }\n        }\n        console.log('Using default image 1 for energy:', energy);\n        return 1;\n    }\n\n    // Transition between images using GSAP animations\n    function transitionToImage(newImageNumber) {\n        console.log(`Transition requested: ${currentImageNumber} -> ${newImageNumber}`);\n\n        if (newImageNumber === currentImageNumber) {\n            console.log('Skipping transition - same image number');\n            return;\n        }\n\n        // Fade out current image\n        if (images[currentImageNumber]) {\n            gsap.to(images[currentImageNumber], {\n                duration: 1,\n                opacity: 0,\n                onComplete: () => {\n                    images[currentImageNumber].style.display = 'none';\n                    console.log(`Completed fade out of image ${currentImageNumber}`);\n                }\n            });\n        } else {\n            console.error(`Current image ${currentImageNumber} not found`);\n        }\n\n        // Fade in new image\n        if (images[newImageNumber]) {\n            images[newImageNumber].style.display = 'block';\n            gsap.to(images[newImageNumber], {\n                duration: 1,\n                opacity: 1,\n                onComplete: () => {\n                    console.log(`Completed fade in of image ${newImageNumber}`);\n                }\n            });\n        } else {\n            console.error(`New image ${newImageNumber} not found`);\n        }\n\n        // Update display elements for the current image\n        document.getElementById('currentImage').textContent = newImageNumber;\n        document.getElementById('imageNumber').textContent = `Image: ${newImageNumber}`;\n        currentImageNumber = newImageNumber;\n    }\n\n    // Update the conditions panel with energy and power readings\n    function updateConditionsPanel(data) {\n        document.getElementById('energyValue').textContent =\n            typeof data.todayEnergy === 'number' ? data.todayEnergy.toFixed(4) : data.todayEnergy;\n        document.getElementById('powerValue').textContent =\n            typeof data.power === 'number' ? data.power.toFixed(2) : data.power;\n        document.getElementById('lastUpdate').textContent = new Date().toLocaleTimeString();\n    }\n\n    // Establish WebSocket connection to receive energy data from Node‑RED\n    let ws;\n    let reconnectAttempts = 0;\n    const maxReconnectAttempts = 5;\n\n    function connectWebSocket() {\n        const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n        const wsUrl = `${wsProtocol}//${window.location.hostname}:1880/ws/plant`;\n        console.log('Attempting to connect to WebSocket:', wsUrl);\n        ws = new WebSocket(wsUrl);\n\n        ws.onopen = () => {\n            document.getElementById('statusText').textContent = 'Connected';\n            document.getElementById('statusText').style.color = '#4CAF50';\n            reconnectAttempts = 0;\n        };\n\n        ws.onmessage = (event) => {\n            try {\n                const data = JSON.parse(event.data);\n                let energyData;\n                if (data.payload) {\n                    try {\n                        energyData = typeof data.payload === 'string'\n                            ? JSON.parse(data.payload)\n                            : data.payload;\n                    } catch (e) {\n                        energyData = data.payload;\n                    }\n                }\n                // Use \"Today\" energy data from the sensor\n                if (energyData && typeof energyData.Today !== 'undefined') {\n                    const newImageNumber = getImageNumberForEnergy(energyData.Today);\n                    transitionToImage(newImageNumber);\n                    updateConditionsPanel({\n                        todayEnergy: energyData.Today,\n                        power: energyData.power || 0\n                    });\n                    document.getElementById('statusText').textContent =\n                        `Energy: ${energyData.Today.toFixed(3)} kWh - Image: ${newImageNumber}`;\n                    document.getElementById('statusText').style.color = '#4CAF50';\n                } else {\n                    console.error('Invalid energy data structure:', energyData);\n                }\n            } catch (e) {\n                console.error('Error processing WebSocket message:', e);\n                document.getElementById('statusText').textContent = 'Error processing data';\n                document.getElementById('statusText').style.color = '#FF0000';\n            }\n        };\n\n        ws.onerror = (error) => {\n            console.error('WebSocket Error:', error);\n            document.getElementById('statusText').textContent = 'Connection Error';\n            document.getElementById('statusText').style.color = '#FF0000';\n        };\n\n        ws.onclose = (event) => {\n            console.log('WebSocket Connection Closed', event.code, event.reason);\n            document.getElementById('statusText').textContent = 'Disconnected - Reconnecting...';\n            document.getElementById('statusText').style.color = '#FFA500';\n            if (reconnectAttempts < maxReconnectAttempts) {\n                const timeout = Math.min(1000 * Math.pow(2, reconnectAttempts), 10000);\n                console.log(`Attempting to reconnect in ${timeout}ms...`);\n                setTimeout(() => {\n                    reconnectAttempts++;\n                    connectWebSocket();\n                }, timeout);\n            } else {\n                document.getElementById('statusText').textContent =\n                    'Connection failed - Please refresh the page';\n                console.error('Max reconnection attempts reached');\n            }\n        };\n    }\n\n    // Initialize WebSocket connection and image path checking\n    connectWebSocket();\n    setTimeout(checkImagePaths, 1000);\n\n    // Initialize the conditions panel with default values\n    updateConditionsPanel({\n        todayEnergy: 0,\n        power: 0\n    });\n\n    // Optional: Override fetch to log network requests for debugging\n    const originalFetch = window.fetch;\n    window.fetch = function(...args) {\n        console.log('Fetch request:', args[0]);\n        return originalFetch.apply(this, args);\n    };\n\n    console.log('Initialization complete');\n});\n",
        "output": "str",
        "x": 320,
        "y": 1000,
        "wires": [
            [
                "24a8a6c65da2626e"
            ]
        ]
    },
    {
        "id": "24a8a6c65da2626e",
        "type": "http response",
        "z": "c0a7987ca656e902",
        "g": "f0f3249a92f3348a",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/javascript"
        },
        "x": 510,
        "y": 1000,
        "wires": []
    },
    {
        "id": "7c21ef58951c9d57",
        "type": "http in",
        "z": "c0a7987ca656e902",
        "name": "",
        "url": "/panel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 780,
        "y": 920,
        "wires": [
            [
                "8332985d6fb347f1"
            ]
        ]
    },
    {
        "id": "8332985d6fb347f1",
        "type": "template",
        "z": "c0a7987ca656e902",
        "name": "index.html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Plant Growth Visualization Panel (Hardcoded Images)</title>\n  <style>\n    html, body {\n      margin: 0;\n      padding: 0;\n      background: transparent;\n      font-family: sans-serif;\n      overflow: hidden;\n    }\n    #panelContainer {\n      width: 100%;\n      height: 100vh;\n      position: relative;\n      text-align: center;\n    }\n    .plantImage {\n      max-width: 90%;\n      max-height: 90vh;\n      margin: auto;\n      display: none; /* all hidden by default */\n      position: absolute; /* so they stack in the same place */\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n    }\n    /* Show only the first image by default */\n    #image-1 {\n      display: block;\n    }\n    #statusPanel {\n      position: absolute;\n      top: 10px;\n      left: 10px;\n      background: rgba(0, 0, 0, 0.7);\n      padding: 10px 15px;\n      border-radius: 8px;\n      z-index: 1000;\n      font-size: 16px;\n      color: #eee;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"panelContainer\">\n<!-- \n    <div id=\"statusPanel\">\n      Energy (Wh): <span id=\"energyValue\">0</span><br>\n      Stage: <span id=\"plantStage\">1</span>\n    </div>\n-->\n\n    <!-- Hardcode all 21 images, each with a unique ID -->\n    <img id=\"image-1\"  class=\"plantImage\" src=\"/images/1.png\"  alt=\"Stage 1\">\n    <img id=\"image-2\"  class=\"plantImage\" src=\"/images/2.png\"  alt=\"Stage 2\">\n    <img id=\"image-3\"  class=\"plantImage\" src=\"/images/3.png\"  alt=\"Stage 3\">\n    <img id=\"image-4\"  class=\"plantImage\" src=\"/images/4.png\"  alt=\"Stage 4\">\n    <img id=\"image-5\"  class=\"plantImage\" src=\"/images/5.png\"  alt=\"Stage 5\">\n    <img id=\"image-6\"  class=\"plantImage\" src=\"/images/6.png\"  alt=\"Stage 6\">\n    <img id=\"image-7\"  class=\"plantImage\" src=\"/images/7.png\"  alt=\"Stage 7\">\n    <img id=\"image-8\"  class=\"plantImage\" src=\"/images/8.png\"  alt=\"Stage 8\">\n    <img id=\"image-9\"  class=\"plantImage\" src=\"/images/9.png\"  alt=\"Stage 9\">\n    <img id=\"image-10\" class=\"plantImage\" src=\"/images/10.png\" alt=\"Stage 10\">\n    <img id=\"image-11\" class=\"plantImage\" src=\"/images/11.png\" alt=\"Stage 11\">\n    <img id=\"image-12\" class=\"plantImage\" src=\"/images/12.png\" alt=\"Stage 12\">\n    <img id=\"image-13\" class=\"plantImage\" src=\"/images/13.png\" alt=\"Stage 13\">\n    <img id=\"image-14\" class=\"plantImage\" src=\"/images/14.png\" alt=\"Stage 14\">\n    <img id=\"image-15\" class=\"plantImage\" src=\"/images/15.png\" alt=\"Stage 15\">\n    <img id=\"image-16\" class=\"plantImage\" src=\"/images/16.png\" alt=\"Stage 16\">\n    <img id=\"image-17\" class=\"plantImage\" src=\"/images/17.png\" alt=\"Stage 17\">\n    <img id=\"image-18\" class=\"plantImage\" src=\"/images/18.png\" alt=\"Stage 18\">\n    <img id=\"image-19\" class=\"plantImage\" src=\"/images/19.png\" alt=\"Stage 19\">\n    <img id=\"image-20\" class=\"plantImage\" src=\"/images/20.png\" alt=\"Stage 20\">\n    <img id=\"image-21\" class=\"plantImage\" src=\"/images/21.png\" alt=\"Stage 21\">\n  </div>\n  \n  <script>\n    // Use correct WebSocket protocol (ws or wss) depending on page\n    const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    // Build the WebSocket URL for /ws/panel\n    const wsUrl = wsProtocol + '//' + window.location.hostname + ':1880/ws/panel';\n    const ws = new WebSocket(wsUrl);\n\n    // Hide all images, show only the requested stage\n    function showStage(stage) {\n      for (let i = 1; i <= 21; i++) {\n        document.getElementById('image-' + i).style.display = 'none';\n      }\n      document.getElementById('image-' + stage).style.display = 'block';\n    }\n\n    ws.onopen = function() {\n      console.log('WebSocket connected to /ws/panel');\n    };\n\n    ws.onmessage = function(event) {\n      console.log('WebSocket message received:', event.data);\n      try {\n        // Your Node-RED message includes the actual data under \"payload\", so we parse that\n        const rawMsg = JSON.parse(event.data);\n        const data = rawMsg.payload || {}; // <--- use payload, not top-level\n\n        // data should have { stage, totalEnergyWh, power, voltage, current, factor }\n        if (typeof data.stage !== 'undefined') {\n          document.getElementById('plantStage').textContent = data.stage;\n          showStage(data.stage);\n        }\n        if (typeof data.totalEnergyWh !== 'undefined') {\n          document.getElementById('energyValue').textContent = data.totalEnergyWh.toFixed(2);\n        }\n      } catch (err) {\n        console.error('Error parsing WebSocket message:', err);\n      }\n    };\n\n    ws.onerror = function(error) {\n      console.error('WebSocket error:', error);\n    };\n\n    ws.onclose = function() {\n      console.log('WebSocket connection closed');\n    };\n  </script>\n</body>\n</html>\n",
        "output": "str",
        "x": 990,
        "y": 920,
        "wires": [
            [
                "57bd7440ee717f73"
            ]
        ]
    },
    {
        "id": "57bd7440ee717f73",
        "type": "http response",
        "z": "c0a7987ca656e902",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "text/html"
        },
        "x": 1170,
        "y": 920,
        "wires": []
    },
    {
        "id": "7c6aa8cbe14a276d",
        "type": "function",
        "z": "c0a7987ca656e902",
        "name": "function 1",
        "func": "// If the payload is still a string, parse it\nif (typeof msg.payload === \"string\") {\n    try {\n        msg.payload = JSON.parse(msg.payload);\n    } catch (e) {\n        node.error(\"Failed to parse JSON string: \" + e.message, msg);\n        return null;\n    }\n}\n\n// Make sure we have msg.payload.ENERGY and a 'Today' value\nif (!msg.payload.ENERGY || typeof msg.payload.ENERGY.Today === \"undefined\") {\n    node.error(\"Invalid payload structure: Missing ENERGY or Today\", msg);\n    return null;\n}\n\n// Read 'Today' (kWh) and convert to Wh\nconst todayKWh = parseFloat(msg.payload.ENERGY.Today);\nconst todayWh = todayKWh * 1000;\n\n// Map the Wh to a stage from 1 to 21\n// For every 10 Wh, we move to the next stage\nlet stage = Math.floor(todayWh / 10) + 1;\nif (stage < 1) stage = 1;\nif (stage > 21) stage = 21;\n\n// Prepare the payload for the WebSocket out node\nmsg.payload = {\n    stage: stage,\n    totalEnergyWh: todayWh,              // how many Wh we have so far\n    power: msg.payload.ENERGY.Power,\n    voltage: msg.payload.ENERGY.Voltage,\n    current: msg.payload.ENERGY.Current,\n    factor: msg.payload.ENERGY.Factor\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 320,
        "wires": [
            [
                "707619923e9f7cdf",
                "8a9a3ccd1374a770"
            ]
        ]
    },
    {
        "id": "707619923e9f7cdf",
        "type": "websocket out",
        "z": "c0a7987ca656e902",
        "name": "Plant WebSocket",
        "server": "349f15e91de8b866",
        "client": "",
        "x": 1170,
        "y": 380,
        "wires": []
    },
    {
        "id": "8a9a3ccd1374a770",
        "type": "debug",
        "z": "c0a7987ca656e902",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 300,
        "wires": []
    },
    {
        "id": "344397dece533eb5",
        "type": "http in",
        "z": "c0a7987ca656e902",
        "name": "",
        "url": "/corn",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 780,
        "y": 1020,
        "wires": [
            [
                "800bc400f33e31d5"
            ]
        ]
    },
    {
        "id": "800bc400f33e31d5",
        "type": "template",
        "z": "c0a7987ca656e902",
        "name": "index.html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Corn Growth Visualization Panel (8 Images)</title>\n  <style>\n    html, body {\n      margin: 0;\n      padding: 0;\n      background: transparent;\n      font-family: sans-serif;\n      overflow: hidden;\n    }\n    #panelContainer {\n      width: 100%;\n      height: 100vh;\n      position: relative;\n      text-align: center;\n    }\n    .plantImage {\n      max-width: 90%;\n      max-height: 90vh;\n      margin: auto;\n      display: none; /* All hidden by default */\n      position: absolute; /* Stack in the same place */\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n    }\n    /* Show only the first image by default */\n    #image-1 {\n      display: block;\n    }\n    #statusPanel {\n      position: absolute;\n      top: 10px;\n      left: 10px;\n      background: rgba(0, 0, 0, 0.7);\n      padding: 10px 15px;\n      border-radius: 8px;\n      z-index: 1000;\n      font-size: 16px;\n      color: #eee;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"panelContainer\">\n<!-- \n    <div id=\"statusPanel\">\n      Energy (Wh): <span id=\"energyValue\">0</span><br>\n      Stage: <span id=\"plantStage\">1</span>\n    </div>\n-->\n\n    <!-- Hardcode all 8 images, each with a unique ID -->\n    <img id=\"image-1\" class=\"plantImage\" src=\"/corn_imgs/1.png\" alt=\"Stage 1\">\n    <img id=\"image-2\" class=\"plantImage\" src=\"/corn_imgs/2.png\" alt=\"Stage 2\">\n    <img id=\"image-3\" class=\"plantImage\" src=\"/corn_imgs/3.png\" alt=\"Stage 3\">\n    <img id=\"image-4\" class=\"plantImage\" src=\"/corn_imgs/4.png\" alt=\"Stage 4\">\n    <img id=\"image-5\" class=\"plantImage\" src=\"/corn_imgs/5.png\" alt=\"Stage 5\">\n    <img id=\"image-6\" class=\"plantImage\" src=\"/corn_imgs/6.png\" alt=\"Stage 6\">\n    <img id=\"image-7\" class=\"plantImage\" src=\"/corn_imgs/7.png\" alt=\"Stage 7\">\n    <img id=\"image-8\" class=\"plantImage\" src=\"/corn_imgs/8.png\" alt=\"Stage 8\">\n  </div>\n  \n  <script>\n    // Pick correct WebSocket protocol (ws or wss) based on the page protocol\n    const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    // Build the WebSocket URL for /ws/panel (adjust if needed)\n    const wsUrl = wsProtocol + '//' + window.location.hostname + ':1880/ws/panel';\n    const ws = new WebSocket(wsUrl);\n\n    // Hide all images, then show only the requested stage\n    function showStage(stage) {\n      for (let i = 1; i <= 8; i++) {\n        document.getElementById('image-' + i).style.display = 'none';\n      }\n      // Ensure the requested stage is in [1..8]\n      if (stage >= 1 && stage <= 8) {\n        document.getElementById('image-' + stage).style.display = 'block';\n      }\n    }\n\n    ws.onopen = function() {\n      console.log('WebSocket connected to /ws/panel');\n    };\n\n    ws.onmessage = function(event) {\n      console.log('WebSocket message received:', event.data);\n      try {\n        // Your Node-RED message includes the actual data under \"payload\", so parse that\n        const rawMsg = JSON.parse(event.data);\n        const data = rawMsg.payload || {}; \n        // We expect data = { stage, totalEnergyWh, ... }\n\n        if (typeof data.stage !== 'undefined') {\n          document.getElementById('plantStage').textContent = data.stage;\n          showStage(data.stage);\n        }\n        if (typeof data.totalEnergyWh !== 'undefined') {\n          document.getElementById('energyValue').textContent = data.totalEnergyWh.toFixed(2);\n        }\n      } catch (err) {\n        console.error('Error parsing WebSocket message:', err);\n      }\n    };\n\n    ws.onerror = function(error) {\n      console.error('WebSocket error:', error);\n    };\n\n    ws.onclose = function() {\n      console.log('WebSocket connection closed');\n    };\n  </script>\n</body>\n</html>\n",
        "output": "str",
        "x": 990,
        "y": 1020,
        "wires": [
            [
                "6fc91f55ca9ac748"
            ]
        ]
    },
    {
        "id": "6fc91f55ca9ac748",
        "type": "http response",
        "z": "c0a7987ca656e902",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "text/html"
        },
        "x": 1170,
        "y": 1020,
        "wires": []
    },
    {
        "id": "61e008e4db88521e",
        "type": "mqtt in",
        "z": "e24bcad243f972df",
        "g": "8ad3d089057afb69",
        "name": "",
        "topic": "factory/energy/temperature_c",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 220,
        "wires": [
            [
                "e0cc7a5564aaecec"
            ]
        ]
    },
    {
        "id": "c6cf032d21da53e2",
        "type": "mqtt in",
        "z": "e24bcad243f972df",
        "g": "8ad3d089057afb69",
        "name": "",
        "topic": "factory/energy/humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 280,
        "wires": [
            [
                "e0cc7a5564aaecec"
            ]
        ]
    },
    {
        "id": "14b7afde013be3bb",
        "type": "mqtt in",
        "z": "e24bcad243f972df",
        "g": "711064a7b7dcab0f",
        "name": "",
        "topic": "factory/energy/plug_01",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 120,
        "wires": [
            [
                "e0cc7a5564aaecec"
            ]
        ]
    },
    {
        "id": "e25f653a6bbb9a1e",
        "type": "function",
        "z": "e24bcad243f972df",
        "g": "736e73ef7d144b40",
        "name": "Format for DB",
        "func": "// Expected MQTT Topic: factory/{machine_id}/{metric_name}\n// Expected Payload: Raw value or JSON like {\"value\": 123}\n\nconst topicParts = msg.topic.split('/');\nif (topicParts.length < 3) {\n    node.warn(`Invalid topic format: ${msg.topic}. Expected factory/{machine_id}/{metric_name}`);\n    return null; // Stop processing this message\n}\n\nconst machine_id = topicParts[1];\nconst metric_name = topicParts[2];\nlet metric_value;\n\n// Try to parse the payload\nif (typeof msg.payload === 'object' && msg.payload !== null && msg.payload.hasOwnProperty('value')) {\n    metric_value = parseFloat(msg.payload.value);\n} else {\n    metric_value = parseFloat(msg.payload);\n}\n\n// Validate the parsed value\nif (isNaN(metric_value)) {\n    node.warn(`Could not parse metric value from payload: ${msg.payload} for topic: ${msg.topic}`);\n    return null; // Stop processing\n}\n\n// Create the object for the next step\nmsg.payload = {\n    timestamp: new Date().toISOString(), // Use current time as timestamp\n    machine_id: machine_id,\n    metric_name: metric_name,\n    metric_value: metric_value\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 140,
        "wires": [
            [
                "cd4013258184c96b"
            ]
        ]
    },
    {
        "id": "cd4013258184c96b",
        "type": "function",
        "z": "e24bcad243f972df",
        "g": "736e73ef7d144b40",
        "name": "Build SQL Insert",
        "func": "// --- Corrected `Build SQL Insert` using Parameterization ---\n\n// Expects msg.payload with { timestamp, machine_id, metric_name, metric_value }\nconst data = msg.payload;\n\n// Basic validation\nif (!data || !data.timestamp || !data.machine_id || !data.metric_name || data.metric_value === undefined || data.metric_value === null) {\n    node.warn(`Invalid data format received for SQL Insert: ${JSON.stringify(data)}`);\n    return null;\n}\n\n// Ensure value is a number\nconst metric_value = parseFloat(data.metric_value);\nif (isNaN(metric_value)) {\n    node.warn(`Invalid metric value: ${data.metric_value}`);\n    return null;\n}\n\n\n\n\n// Payload must be an array of values in the order matching $1, $2, etc.\nmsg.params = [\n    data.timestamp,\n    data.machine_id,\n    data.metric_name,\n    metric_value // Use the parsed float value\n];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 220,
        "wires": [
            [
                "6fa745969a9225ee"
            ]
        ]
    },
    {
        "id": "6fa745969a9225ee",
        "type": "postgresql",
        "z": "e24bcad243f972df",
        "g": "736e73ef7d144b40",
        "name": "Store Data",
        "query": "INSERT INTO measurements (timestamp, machine_id, metric_name, metric_value)\nVALUES ($1, $2, $3, $4);",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1270,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "1748054ed00b6f14",
        "type": "function",
        "z": "e24bcad243f972df",
        "g": "f3ffed341ba7d121",
        "name": "Register Analysis Driver",
        "func": "// Expected MQTT Topic: factory/{machine_id}/{metric_name}\n// This node stores the machine_id and metric_name of drivers wired to it.\n\nconst topicParts = msg.topic.split('/');\nif (topicParts.length < 3) {\n    node.warn(`Invalid topic format for driver registration: ${msg.topic}`);\n    return null; // Don't store anything\n}\n\nconst machine_id = topicParts[1];\nconst metric_name = topicParts[2];\n\n// Use flow context to store the registered drivers for each machine\nlet registeredDrivers = flow.get(\"registeredDrivers\") || {};\n\n// Initialize structure for the machine if it doesn't exist\nif (!registeredDrivers[machine_id]) {\n    registeredDrivers[machine_id] = {};\n}\n\n// Store the metric name (use an object as a set for easy addition/checking)\nregisteredDrivers[machine_id][metric_name] = true; // Mark as registered\n\n// Save back to flow context\nflow.set(\"registeredDrivers\", registeredDrivers);\n\n// Optional: Log registration\n// node.log(`Registered driver: ${metric_name} for machine: ${machine_id}`);\n\n// No message needs to be passed on from here for the analysis trigger\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "a0ca650fd74f6314",
        "type": "inject",
        "z": "e24bcad243f972df",
        "g": "076c47cf58d53355",
        "name": "Run Analysis",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"machine_id\":\"plug01_test\",\"energy_metric\":\"power_w\",\"time_window_hours\":1}",
        "payloadType": "json",
        "x": 330,
        "y": 620,
        "wires": [
            [
                "ed57310db93ecab4"
            ]
        ]
    },
    {
        "id": "ed57310db93ecab4",
        "type": "function",
        "z": "e24bcad243f972df",
        "g": "fb12aa971871ac40",
        "name": "Prepare Analysis Query",
        "func": "// Expects msg.payload like: { machine_id: \"...\", energy_metric: \"...\", time_window_hours: ... }\n// Retrieves registered drivers from flow context for the specified machine.\n\nconst config = msg.payload;\nif (!config || !config.machine_id || !config.energy_metric || !config.time_window_hours) {\n    node.error(\"Analysis trigger payload is missing required fields (machine_id, energy_metric, time_window_hours).\", msg);\n    return null;\n}\n\nconst machine_id = config.machine_id;\nconst energy_metric = config.energy_metric;\nconst hours = config.time_window_hours;\nconst endTime = new Date();\nconst startTime = new Date(endTime.getTime() - hours * 60 * 60 * 1000);\n\n// Get the list of drivers registered for this machine\nconst registeredDrivers = flow.get(\"registeredDrivers\") || {};\nconst machineDriversObj = registeredDrivers[machine_id] || {};\nconst driver_metrics = Object.keys(machineDriversObj); // Get the names of registered drivers\n\nif (driver_metrics.length === 0) {\n    node.warn(`No drivers registered for machine ${machine_id}. Cannot run analysis.`);\n    // Store empty list for the analysis node to handle gracefully\n    msg.driver_metrics = [];\n    // Maybe still fetch energy data? Or stop? Let's fetch energy at least.\n    // return null; // Option to stop if no drivers\n} else {\n    node.log(`Analyzing machine [${machine_id}] energy [${energy_metric}] against drivers: [${driver_metrics.join(', ')}] for the last ${hours} hours.`);\n}\nmsg.driver_metrics = driver_metrics; // Pass driver names to the next node\n\n// List of all metrics to fetch (energy + registered drivers)\nconst all_metrics_to_fetch = [energy_metric, ...driver_metrics];\n\n// // Prepare SQL Query using parameterization\n// msg.topic = `\n//     SELECT\n//         timestamp,\n//         metric_name,\n//         metric_value\n//     FROM\n//         measurements\n//     WHERE\n//         machine_id = $1\n//         AND metric_name = ANY($2) -- Use ANY() to check against an array of metrics\n//         AND timestamp BETWEEN $3 AND $4\n//     ORDER BY\n//         timestamp ASC;\n// `;\n\n// Payload is the array of parameters for the query\nmsg.params = [\n    machine_id,\n    all_metrics_to_fetch, // Pass the array of metric names\n    startTime.toISOString(),\n    endTime.toISOString()\n];\n\n// Pass config info along for the analysis node\nmsg.analysis_config = config;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 620,
        "wires": [
            [
                "41d722ef8ffbf29f"
            ]
        ]
    },
    {
        "id": "41d722ef8ffbf29f",
        "type": "postgresql",
        "z": "e24bcad243f972df",
        "g": "fb12aa971871ac40",
        "name": "Fetch Data",
        "query": "    SELECT\n        timestamp,\n        metric_name,\n        metric_value\n    FROM\n        measurements\n    WHERE\n        machine_id = $1\n        AND metric_name = ANY($2) -- Use ANY() to check against an array of metrics\n        AND timestamp BETWEEN $3 AND $4\n    ORDER BY\n        timestamp ASC;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 790,
        "y": 620,
        "wires": [
            [
                "9a7b4504d6f61f34"
            ]
        ]
    },
    {
        "id": "dd8c2b050250b089",
        "type": "debug",
        "z": "e24bcad243f972df",
        "g": "fb12aa971871ac40",
        "name": "Analysis Results",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 620,
        "wires": []
    },
    {
        "id": "b8bd2e5afd8d7efe",
        "type": "mqtt in",
        "z": "e24bcad243f972df",
        "g": "8ad3d089057afb69",
        "name": "TEST Energy (plug01_test)",
        "topic": "factory/plug01_test/power_w",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 370,
        "y": 340,
        "wires": [
            [
                "e0cc7a5564aaecec"
            ]
        ]
    },
    {
        "id": "8b04ad044352baf3",
        "type": "mqtt in",
        "z": "e24bcad243f972df",
        "g": "8ad3d089057afb69",
        "name": "TEST Driver (plug01_test State)",
        "topic": "factory/plug01_test/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 400,
        "wires": [
            [
                "ca4a34e1cc5eac2e",
                "e0cc7a5564aaecec"
            ]
        ]
    },
    {
        "id": "9a7b4504d6f61f34",
        "type": "function",
        "z": "e24bcad243f972df",
        "g": "fb12aa971871ac40",
        "name": "Perform Analysis",
        "func": "// Expects msg.payload to be an array of rows from Postgres: [{timestamp, metric_name, metric_value}, ...]\n// Also expects msg.analysis_config and msg.driver_metrics from the previous node.\n\nconst dbRows = msg.payload;\nconst config = msg.analysis_config;\nconst driver_metrics = msg.driver_metrics; // Drivers selected for this run\nconst energy_metric = config.energy_metric;\nconst machine_id = config.machine_id;\n\nif (!Array.isArray(dbRows)) {\n    node.error(\"Did not receive array from database query.\", msg);\n    return null;\n}\nif (!config || !driver_metrics) {\n    node.error(\"Missing analysis configuration or driver metrics.\", msg);\n    return null;\n}\n\nif (dbRows.length === 0) {\n    msg.payload = `No data found for machine [${machine_id}] and metrics [${energy_metric}, ${driver_metrics.join(', ')}] in the specified time window.`;\n    return msg;\n}\n\n// --- Data Alignment ---\n// Group data by timestamp (or near timestamps). This is a simple approach.\n// More robust methods might involve interpolation or time-window averaging.\nconst timeToleranceMillis = 5000; // 5 seconds tolerance for matching timestamps\nlet alignedData = {}; // Key: timestamp (rounded), Value: { energy: val, driver1: val, driver2: val ... }\n\ndbRows.forEach(row => {\n    const ts = new Date(row.timestamp).getTime();\n    // Find a nearby timestamp key\n    let foundKey = null;\n    for (const keyTsStr in alignedData) {\n        const keyTs = parseInt(keyTsStr);\n        if (Math.abs(ts - keyTs) <= timeToleranceMillis) {\n            foundKey = keyTsStr;\n            break;\n        }\n    }\n\n    // If no nearby key, create a new entry using the current timestamp as the key\n    const key = foundKey || ts.toString();\n    if (!alignedData[key]) {\n        alignedData[key] = { timestamp: new Date(parseInt(key)) }; // Store the representative timestamp\n    }\n\n    // Add the metric value\n    if (row.metric_name === energy_metric) {\n        alignedData[key].energy = row.metric_value;\n    } else if (driver_metrics.includes(row.metric_name)) {\n        alignedData[key][row.metric_name] = row.metric_value;\n    }\n});\n\n// Convert alignedData object to an array, filtering out points missing energy or *any* driver\nlet analysisPoints = Object.values(alignedData).filter(point => {\n    if (point.energy === undefined || point.energy === null) return false;\n    for (const driver of driver_metrics) {\n        if (point[driver] === undefined || point[driver] === null) return false;\n    }\n    return true;\n});\n\nif (analysisPoints.length < 5) { // Need a minimum number of points for meaningful stats\n    msg.payload = `Insufficient aligned data points (${analysisPoints.length}) for analysis. Found ${dbRows.length} raw measurements. Try a larger time window or check data frequency.`;\n    return msg;\n}\n\n// --- Analysis Functions ---\n\n// Simple Pearson Correlation Coefficient\nfunction calculateCorrelation(arr1, arr2) {\n    if (arr1.length !== arr2.length || arr1.length === 0) return NaN;\n    const n = arr1.length;\n    const mean1 = arr1.reduce((a, b) => a + b, 0) / n;\n    const mean2 = arr2.reduce((a, b) => a + b, 0) / n;\n    const stdDev1 = Math.sqrt(arr1.reduce((a, b) => a + Math.pow(b - mean1, 2), 0) / n);\n    const stdDev2 = Math.sqrt(arr2.reduce((a, b) => a + Math.pow(b - mean2, 2), 0) / n);\n    if (stdDev1 === 0 || stdDev2 === 0) return NaN; // Avoid division by zero if data is constant\n\n    let covariance = 0;\n    for (let i = 0; i < n; i++) {\n        covariance += (arr1[i] - mean1) * (arr2[i] - mean2);\n    }\n    covariance /= n;\n\n    return covariance / (stdDev1 * stdDev2);\n}\n\n// Simple Trend Analysis (Average energy per driver quartile)\nfunction calculateTrend(driverValues, energyValues, driverName) {\n    if (driverValues.length !== energyValues.length || driverValues.length === 0) return null;\n    const points = driverValues.map((d, i) => ({ driver: d, energy: energyValues[i] })).sort((a, b) => a.driver - b.driver);\n    const n = points.length;\n    const qSize = Math.max(1, Math.floor(n / 4)); // Ensure at least 1 point per quartile approx\n    const quartiles = [\n        points.slice(0, qSize),\n        points.slice(qSize, 2 * qSize),\n        points.slice(2 * qSize, 3 * qSize),\n        points.slice(3 * qSize, n)\n    ].filter(q => q.length > 0); // Remove empty quartiles if n is small\n\n    const trend = quartiles.map((q, i) => {\n        const avgDriver = q.reduce((sum, p) => sum + p.driver, 0) / q.length;\n        const avgEnergy = q.reduce((sum, p) => sum + p.energy, 0) / q.length;\n        return `Q${i + 1} (Avg ${driverName}: ${avgDriver.toFixed(2)}): Avg Energy = ${avgEnergy.toFixed(2)}`;\n    });\n    return trend;\n}\n\n// Simple Pattern Detection (Find times with high energy and report driver values)\nfunction detectHighEnergyPatterns(analysisPoints, energyValues, driver_metrics) {\n    const n = energyValues.length;\n    if (n === 0) return [];\n    const sortedEnergy = [...energyValues].sort((a, b) => a - b);\n    const percentileThreshold = 0.90; // Look at top 10% energy usage\n    const energyThreshold = sortedEnergy[Math.floor(n * percentileThreshold)];\n\n    const highEnergyInstances = analysisPoints.filter(p => p.energy >= energyThreshold);\n\n    return highEnergyInstances.map(p => {\n        let drivers = driver_metrics.map(d => `${d}: ${p[d] !== undefined ? p[d].toFixed(2) : 'N/A'}`).join(', ');\n        return `High Energy (${p.energy.toFixed(2)}) at ${p.timestamp.toLocaleString()} -> Drivers: ${drivers}`;\n    }).slice(0, 10); // Limit output\n}\n\n\n// --- Perform Analysis ---\nlet results = {\n    analysis_run_time: new Date().toLocaleString(),\n    machine_id: machine_id,\n    energy_metric: energy_metric,\n    analyzed_drivers: driver_metrics,\n    time_window_hours: config.time_window_hours,\n    total_raw_measurements: dbRows.length,\n    aligned_data_points: analysisPoints.length,\n    correlation: {},\n    trend: {},\n    high_energy_patterns: []\n};\n\nconst energyValues = analysisPoints.map(p => p.energy);\n\n// Calculate for each driver\ndriver_metrics.forEach(driver => {\n    const driverValues = analysisPoints.map(p => p[driver]);\n\n    // Correlation\n    const corr = calculateCorrelation(driverValues, energyValues);\n    results.correlation[driver] = isNaN(corr) ? \"N/A (Insufficient data variation?)\" : `${corr.toFixed(3)} (${interpretCorrelation(corr)})`;\n\n    // Trend\n    results.trend[driver] = calculateTrend(driverValues, energyValues, driver);\n\n});\n\n// Pattern Detection (Overall High Energy)\nresults.high_energy_patterns = detectHighEnergyPatterns(analysisPoints, energyValues, driver_metrics);\n\n// Helper to interpret correlation\nfunction interpretCorrelation(corr) {\n    const absCorr = Math.abs(corr);\n    if (isNaN(corr)) return \"Invalid\";\n    if (absCorr >= 0.7) return \"Strong\";\n    if (absCorr >= 0.4) return \"Moderate\";\n    if (absCorr >= 0.1) return \"Weak\";\n    return \"Very Weak/None\";\n}\n\n// Format results for debug output\nmsg.payload = results; // Output the results object\n\n// Or format as a string:\n/*\nlet outputString = `Energy Analysis Results for Machine: ${machine_id}\\n`;\noutputString += `Time Window: Last ${config.time_window_hours} hours\\n`;\noutputString += `Energy Metric: ${energy_metric}\\n`;\noutputString += `Drivers Analyzed: ${driver_metrics.join(', ')}\\n`;\noutputString += `Aligned Data Points Used: ${analysisPoints.length} (from ${dbRows.length} raw measurements)\\n\\n`;\n\noutputString += \"--- Correlation ---\\n\";\nfor(const driver in results.correlation){\n    outputString += `${driver} vs ${energy_metric}: ${results.correlation[driver]}\\n`;\n}\n\noutputString += \"\\n--- Trend (Energy vs Driver Quartiles) ---\\n\";\nfor(const driver in results.trend){\n    outputString += `Driver: ${driver}\\n`;\n    if (results.trend[driver]) {\n        results.trend[driver].forEach(t => outputString += `  - ${t}\\n`);\n    } else {\n        outputString += \"  - N/A\\n\";\n    }\n}\n\noutputString += \"\\n--- High Energy Patterns (Top ${((1-percentileThreshold)*100).toFixed(0)}%) ---\\n\";\nif(results.high_energy_patterns.length > 0){\n    results.high_energy_patterns.forEach(p => outputString += `  - ${p}\\n`);\n} else {\n    outputString += \"  - No specific high-energy patterns detected.\\n\";\n}\n\nmsg.payload = outputString;\n*/\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 620,
        "wires": [
            [
                "dd8c2b050250b089"
            ]
        ]
    },
    {
        "id": "b942fb2cf23d1411",
        "type": "debug",
        "z": "412ea24796634f13",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 150,
        "y": 480,
        "wires": []
    },
    {
        "id": "a2d434818f6b64c7",
        "type": "mqtt in",
        "z": "412ea24796634f13",
        "g": "1d2bd7ab961bbc92",
        "name": "",
        "topic": "sensor/humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 820,
        "wires": [
            [
                "d501f7d7c64bd2b4",
                "5c548c4fb5d4d96b"
            ]
        ]
    },
    {
        "id": "682e485f3a352113",
        "type": "debug",
        "z": "412ea24796634f13",
        "g": "1d2bd7ab961bbc92",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 880,
        "wires": []
    },
    {
        "id": "d6081e39b770d3fc",
        "type": "mqtt in",
        "z": "412ea24796634f13",
        "name": "",
        "topic": "tele/smartplug_1/SENSOR",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 520,
        "wires": [
            [
                "b942fb2cf23d1411",
                "cc3d86c21041bb53"
            ]
        ]
    },
    {
        "id": "cc3d86c21041bb53",
        "type": "json",
        "z": "412ea24796634f13",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 340,
        "y": 520,
        "wires": [
            [
                "842175b619a41ce4",
                "3de377f762e54ece"
            ]
        ]
    },
    {
        "id": "d501f7d7c64bd2b4",
        "type": "json",
        "z": "412ea24796634f13",
        "g": "1d2bd7ab961bbc92",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 380,
        "y": 860,
        "wires": [
            [
                "682e485f3a352113"
            ]
        ]
    },
    {
        "id": "842175b619a41ce4",
        "type": "debug",
        "z": "412ea24796634f13",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 480,
        "wires": []
    },
    {
        "id": "a8cddf74f1a186ee",
        "type": "postgresql",
        "z": "412ea24796634f13",
        "name": "",
        "query": "INSERT INTO monitor_readings \n    (timestamp, power, apparent_power, reactive_power, power_factor, voltage, current)\nVALUES \n    ($1, $2, $3, $4, $5, $6, $7);",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 730,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "3de377f762e54ece",
        "type": "function",
        "z": "412ea24796634f13",
        "name": "function 3",
        "func": "// Adjust the time to UTC+3 if needed\nlet now = new Date();\nlet timestamp = now.toISOString().slice(0, 19).replace('T', ' ');  // Format: YYYY-MM-DD HH:MM:SS\n\n// Prepare the parameters for the PostgreSQL node\nmsg.params = [\n    timestamp,                           // $1: timestamp\n    msg.payload.ENERGY.Power,           // $2: power\n    msg.payload.ENERGY.ApparentPower,   // $3: apparent_power\n    msg.payload.ENERGY.ReactivePower,   // $4: reactive_power\n    msg.payload.ENERGY.Factor,          // $5: power_factor\n    msg.payload.ENERGY.Voltage,         // $6: voltage\n    msg.payload.ENERGY.Current          // $7: current\n];\n\n// Add a topic for debugging purposes\nmsg.topic = `Inserting monitor reading at ${timestamp}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 520,
        "wires": [
            [
                "a8cddf74f1a186ee",
                "458162c7583b516a"
            ]
        ]
    },
    {
        "id": "458162c7583b516a",
        "type": "debug",
        "z": "412ea24796634f13",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 480,
        "wires": []
    },
    {
        "id": "aaaf1e44b623c83b",
        "type": "mqtt in",
        "z": "412ea24796634f13",
        "name": "",
        "topic": "sensor/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 140,
        "wires": [
            [
                "9d5ac196fab464e1",
                "e55ae02bd55d2113"
            ]
        ]
    },
    {
        "id": "17e661914492953a",
        "type": "function",
        "z": "412ea24796634f13",
        "name": "function 4",
        "func": "// Get current timestamp and adjust to UTC+3\nlet now = new Date();\nnow.setHours(now.getHours() + 3);  // Add 3 hours for UTC+3\nlet timestamp = now.toISOString().slice(0, 19).replace('T', ' ');\n\n// Extract temperature from payload\nlet temperature = parseFloat(msg.payload);\n\n// Prepare parameters for PostgreSQL\nmsg.params = [\n    timestamp,    // $1: timestamp\n    temperature   // $2: temperature\n];\n\n// Add debug topic\nmsg.topic = `Inserting temperature reading: ${temperature}°C at ${timestamp}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 140,
        "wires": [
            [
                "f489c9983b3d7836"
            ]
        ]
    },
    {
        "id": "6ec119a7404e05c4",
        "type": "json",
        "z": "412ea24796634f13",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 510,
        "y": 140,
        "wires": [
            [
                "17e661914492953a"
            ]
        ]
    },
    {
        "id": "f489c9983b3d7836",
        "type": "postgresql",
        "z": "412ea24796634f13",
        "name": "",
        "query": "INSERT INTO temperature_readings (timestamp, temperature)\nVALUES ($1, $2);",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "14f280d4813cf510",
        "type": "python-function",
        "z": "412ea24796634f13",
        "name": "",
        "func": "import os\nimport sys\n\n# Add virtual environment's site-packages to path\nvenv_path = '/home/ubuntu/monitor_ml/venv/lib/python3.12/site-packages'\nif venv_path not in sys.path:\n    sys.path.append(venv_path)\n\n# Now import the required libraries\nimport pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LinearRegression\nimport psycopg2\nimport joblib\nfrom datetime import datetime\n\ntry:\n    # Ensure models directory exists\n    models_dir = '/home/ubuntu/monitor_ml/models'\n    os.makedirs(models_dir, exist_ok=True)\n\n    # Database connection\n    conn = psycopg2.connect(\n        dbname=\"reg_ml\",\n        user=\"reg_ml\",\n        password=\"raptorblingx\",\n        host=\"localhost\"\n    )\n\n    # Load training data\n    query = \"\"\"\n    SELECT \n        apparent_power,\n        reactive_power,\n        power_factor,\n        voltage,\n        current,\n        device_state_numeric,\n        actual_power\n    FROM monitor_training_data\n    ORDER BY timestamp;\n    \"\"\"\n\n    df = pd.read_sql_query(query, conn)\n    conn.close()\n\n    # Prepare features and target\n    X = df[['apparent_power', 'reactive_power', 'power_factor', \n            'voltage', 'current', 'device_state_numeric']]\n    y = df['actual_power']\n\n    # Scale the features\n    scaler = StandardScaler()\n    X_scaled = scaler.fit_transform(X)\n\n    # Train the model\n    model = LinearRegression()\n    model.fit(X_scaled, y)\n\n    # Save the model and scaler\n    timestamp = datetime.now().strftime(\"%Y%m%d_%H%M%S\")\n    model_path = os.path.join(models_dir, f'model_{timestamp}.joblib')\n    scaler_path = os.path.join(models_dir, f'scaler_{timestamp}.joblib')\n    \n    joblib.dump(model, model_path)\n    joblib.dump(scaler, scaler_path)\n\n    msg['payload'] = {\n        \"status\": \"success\",\n        \"message\": \"Model trained successfully\",\n        \"model_path\": model_path,\n        \"scaler_path\": scaler_path,\n        \"feature_importance\": dict(zip(X.columns, model.coef_)),\n        \"training_samples\": len(df)\n    }\n\nexcept Exception as e:\n    msg['payload'] = {\n        \"status\": \"error\",\n        \"message\": str(e),\n        \"traceback\": str(sys.exc_info())\n    }\n\nreturn msg",
        "outputs": 1,
        "x": 260,
        "y": 240,
        "wires": [
            [
                "d0cd613f447f514c"
            ]
        ]
    },
    {
        "id": "d5aa80c01ba6dd04",
        "type": "inject",
        "z": "412ea24796634f13",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 240,
        "wires": [
            [
                "14f280d4813cf510"
            ]
        ]
    },
    {
        "id": "d0cd613f447f514c",
        "type": "debug",
        "z": "412ea24796634f13",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 240,
        "wires": []
    },
    {
        "id": "7a3c4d9d8f674d43",
        "type": "python-function",
        "z": "412ea24796634f13",
        "name": "",
        "func": "import os\nimport sys\n\n# Add virtual environment's site-packages to path\nvenv_path = '/home/ubuntu/monitor_ml/venv/lib/python3.12/site-packages'\nif venv_path not in sys.path:\n    sys.path.append(venv_path)\n\n# Import required libraries\nimport joblib\nimport numpy as np\n\ntry:\n    # Load the latest model and scaler\n    models_dir = '/home/ubuntu/monitor_ml/models'\n    \n    # Get the latest model and scaler files\n    model_files = [f for f in os.listdir(models_dir) if f.startswith('model_')]\n    scaler_files = [f for f in os.listdir(models_dir) if f.startswith('scaler_')]\n    \n    latest_model = sorted(model_files)[-1]\n    latest_scaler = sorted(scaler_files)[-1]\n    \n    model = joblib.load(os.path.join(models_dir, latest_model))\n    scaler = joblib.load(os.path.join(models_dir, latest_scaler))\n    \n    # Get input data from MQTT message\n    energy_data = msg['payload']['ENERGY']  # Correct path to ENERGY data\n    \n    input_data = {\n        'apparent_power': energy_data['ApparentPower'],\n        'reactive_power': energy_data['ReactivePower'],\n        'power_factor': energy_data['Factor'],\n        'voltage': energy_data['Voltage'],\n        'current': energy_data['Current'],\n        'device_state_numeric': 1  # You might want to calculate this based on your rules\n    }\n    \n    # Prepare input data for prediction\n    X_pred = np.array([[\n        input_data['apparent_power'],\n        input_data['reactive_power'],\n        input_data['power_factor'],\n        input_data['voltage'],\n        input_data['current'],\n        input_data['device_state_numeric']\n    ]])\n    \n    # Scale input data\n    X_pred_scaled = scaler.transform(X_pred)\n    \n    # Make prediction\n    prediction = model.predict(X_pred_scaled)[0]\n    \n    # Prepare output\n    msg = {\n        'payload': {\n            'status': 'success',\n            'actual_power': energy_data['Power'],\n            'predicted_power': float(prediction),\n            'difference': float(energy_data['Power'] - prediction),\n            'input_features': input_data,\n            'model_file': latest_model,\n            'timestamp': msg['payload']['Time']\n        }\n    }\n\nexcept Exception as e:\n    msg = {\n        'payload': {\n            'status': 'error',\n            'message': str(e),\n            'traceback': str(sys.exc_info())\n        }\n    }\n\nreturn msg",
        "outputs": 1,
        "x": 460,
        "y": 380,
        "wires": [
            [
                "9b532e772ad499fa",
                "cb2039348fea640f"
            ]
        ]
    },
    {
        "id": "9b532e772ad499fa",
        "type": "debug",
        "z": "412ea24796634f13",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 360,
        "wires": []
    },
    {
        "id": "d7e96ec1bf8ac365",
        "type": "mqtt in",
        "z": "412ea24796634f13",
        "name": "",
        "topic": "tele/smartplug_1/SENSOR",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 360,
        "wires": [
            [
                "52b5dc15a5ca0f87",
                "2056d5e634a102f1"
            ]
        ]
    },
    {
        "id": "52b5dc15a5ca0f87",
        "type": "json",
        "z": "412ea24796634f13",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 380,
        "wires": [
            [
                "7a3c4d9d8f674d43"
            ]
        ]
    },
    {
        "id": "5552cf11746f3147",
        "type": "postgresql",
        "z": "412ea24796634f13",
        "name": "",
        "query": "INSERT INTO power_predictions (\n    timestamp,\n    actual_power,\n    predicted_power,\n    difference,\n    apparent_power,\n    reactive_power,\n    power_factor,\n    voltage,\n    current,\n    model_file\n) VALUES (\n    $1, $2, $3, $4, $5, $6, $7, $8, $9, $10\n);",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 950,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "cb2039348fea640f",
        "type": "function",
        "z": "412ea24796634f13",
        "name": "function 5",
        "func": "// Function Node code\n// Get current timestamp and adjust for local time (UTC+3)\nlet now = new Date(msg.payload.timestamp);\nnow.setHours(now.getHours() - 1);  // Subtract 1 hour to fix the offset\nlet timestamp = now.toISOString().slice(0, 19).replace('T', ' ');\n\n// Debug timestamp\nconsole.log(`Original timestamp: ${msg.payload.timestamp}`);\nconsole.log(`Formatted timestamp: ${timestamp}`);\n\n// Prepare parameters for PostgreSQL\nmsg.params = [\n    timestamp,                                  // $1: timestamp\n    msg.payload.actual_power,                   // $2: actual_power\n    msg.payload.predicted_power,                // $3: predicted_power\n    msg.payload.difference,                     // $4: difference\n    msg.payload.input_features.apparent_power,  // $5: apparent_power\n    msg.payload.input_features.reactive_power,  // $6: reactive_power\n    msg.payload.input_features.power_factor,    // $7: power_factor\n    msg.payload.input_features.voltage,         // $8: voltage\n    msg.payload.input_features.current,         // $9: current\n    msg.payload.model_file                      // $10: model_file\n];\n\n// Add debug topic\nmsg.topic = `Inserting prediction data at ${timestamp}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 420,
        "wires": [
            [
                "5552cf11746f3147"
            ]
        ]
    },
    {
        "id": "9d5ac196fab464e1",
        "type": "rate-limiter",
        "z": "412ea24796634f13",
        "delay_action": "ratelimit",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "drop_select": "drop",
        "addcurrentcount": false,
        "name": "",
        "outputs": 1,
        "buffer_size": "0",
        "buffer_drop": "buffer_drop_new",
        "emit_msg_2nd": false,
        "control_topic": "",
        "version": 0.0018,
        "x": 310,
        "y": 140,
        "wires": [
            [
                "6ec119a7404e05c4"
            ]
        ]
    },
    {
        "id": "e55ae02bd55d2113",
        "type": "debug",
        "z": "412ea24796634f13",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 250,
        "y": 60,
        "wires": []
    },
    {
        "id": "2056d5e634a102f1",
        "type": "debug",
        "z": "412ea24796634f13",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 300,
        "wires": []
    },
    {
        "id": "5c548c4fb5d4d96b",
        "type": "debug",
        "z": "412ea24796634f13",
        "g": "1d2bd7ab961bbc92",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 720,
        "wires": []
    },
    {
        "id": "34bcc315755bde9d",
        "type": "inject",
        "z": "92aed38eddd445e6",
        "name": "Trigger Hourly",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 260,
        "wires": [
            [
                "266d50dd48029eb6"
            ]
        ]
    },
    {
        "id": "266d50dd48029eb6",
        "type": "function",
        "z": "92aed38eddd445e6",
        "name": "Prepare Get Jobs Query",
        "func": "// No parameters are needed for this query\nmsg.params = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 300,
        "wires": [
            [
                "871f3e1aad897f93"
            ]
        ]
    },
    {
        "id": "871f3e1aad897f93",
        "type": "postgresql",
        "z": "92aed38eddd445e6",
        "name": "Get Jobs Missing kWh",
        "query": "SELECT\n    job_id,\n    device_id,\n    start_time,\n    end_time\nFROM print_jobs\nWHERE\n    status IN ('success', 'failed', 'cancelled') -- Only for finished jobs\n    AND kwh_consumed IS NULL -- The key filter\n    AND start_time IS NOT NULL -- Ensure we have a time range\n    AND end_time IS NOT NULL;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": true,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 570,
        "y": 340,
        "wires": [
            [
                "d2f8198aa597b69f",
                "d64c5e4c8feff951"
            ]
        ]
    },
    {
        "id": "d2f8198aa597b69f",
        "type": "function",
        "z": "92aed38eddd445e6",
        "name": "Prepare kWh Calc Query",
        "func": "// Node: Prepare kWh Calc Query (Final Version)\nconst job = msg.payload;\n\n// Store the entire job object in msg.topic.\n// The postgres node will not overwrite this property.\nmsg.topic = job;\n\n// Prepare parameters for the energy data query\nmsg.params = [\n    job.device_id,\n    job.start_time,\n    job.end_time\n];\n\n// Clear payload as it's no longer needed by the next node\ndelete msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 400,
        "wires": [
            [
                "4e01ce943324e2fd",
                "cc8a8772e417b1f7"
            ]
        ]
    },
    {
        "id": "4e01ce943324e2fd",
        "type": "postgresql",
        "z": "92aed38eddd445e6",
        "name": "Get Energy Data for Job",
        "query": "SELECT timestamp, power_watts\nFROM energy_data\nWHERE\n    device_id = $1 AND\n    timestamp BETWEEN $2 AND $3\nORDER BY timestamp;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 920,
        "y": 440,
        "wires": [
            [
                "5bf0ea262fa0e2e5"
            ]
        ]
    },
    {
        "id": "5bf0ea262fa0e2e5",
        "type": "function",
        "z": "92aed38eddd445e6",
        "name": "Calculate kWh & Prepare Update",
        "func": "// Node: Calculate kWh & Prepare Update (Pure JavaScript Version)\n\nconst energyDataPoints = msg.payload; // Array of {timestamp, power_watts}\nconst job = msg.job_details; // The job we are processing\n\n// --- JavaScript Trapezoidal Rule Function ---\nfunction trapezoidal_integration(y_values, x_values) {\n    let area = 0.0;\n    for (let i = 0; i < x_values.length - 1; i++) {\n        const width = x_values[i+1] - x_values[i];\n        const height = (y_values[i] + y_values[i+1]) / 2.0;\n        area += width * height;\n    }\n    return area;\n}\n// --- End Helper Function ---\n\nif (!Array.isArray(energyDataPoints) || energyDataPoints.length < 2) {\n    node.warn(`Not enough energy data points to calculate kWh for job_id: ${job.job_id}. Updating with 0.`);\n    msg.params = [0.0, job.job_id];\n    return msg;\n}\n\nlet kwh_consumed = null;\n\ntry {\n    const timestamps = energyDataPoints.map(p => new Date(p.timestamp).getTime() / 1000); // Seconds\n    const power = energyDataPoints.map(p => p.power_watts || 0);\n\n    // JavaScript doesn't have a direct equivalent of the numpy duplicate removal,\n    // but since we query with ORDER BY, a simple check can be done.\n    // For simplicity and since duplicates are less likely in a short job window,\n    // we'll proceed directly. If errors arise, we can add a JS duplicate removal loop.\n    const time_elapsed_sec = timestamps.map(ts => ts - timestamps[0]);\n    const total_joules = trapezoidal_integration(power, time_elapsed_sec);\n    kwh_consumed = parseFloat((total_joules / (3600 * 1000)).toFixed(4)); // toFixed(4) for precision\n\n} catch (e) {\n    node.error(`Error calculating kWh for job_id ${job.job_id}: ${e}`);\n    kwh_consumed = -1.0; // Update with -1 to signify an error\n}\n\nnode.log(`Calculated ${kwh_consumed} kWh for job_id ${job.job_id}.`);\n\n// Prepare params for the UPDATE query\nmsg.params = [\n    kwh_consumed, // $1\n    job.job_id    // $2\n];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 500,
        "wires": [
            [
                "3332314c10e274cf",
                "87fab0f86edf50a4"
            ]
        ]
    },
    {
        "id": "3332314c10e274cf",
        "type": "postgresql",
        "z": "92aed38eddd445e6",
        "name": "Update Job with kWh",
        "query": "UPDATE print_jobs\nSET kwh_consumed = $1\nWHERE job_id = $2;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1330,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "87fab0f86edf50a4",
        "type": "debug",
        "z": "92aed38eddd445e6",
        "name": "debug 50",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 460,
        "wires": []
    },
    {
        "id": "cc8a8772e417b1f7",
        "type": "debug",
        "z": "92aed38eddd445e6",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 380,
        "wires": []
    },
    {
        "id": "d64c5e4c8feff951",
        "type": "debug",
        "z": "92aed38eddd445e6",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 320,
        "wires": []
    },
    {
        "id": "0de1e498d2e4dda6",
        "type": "inject",
        "z": "9d123742b98b63a7",
        "name": "Poll Printers Every 30s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 240,
        "wires": [
            [
                "758d30995d78f4a6"
            ]
        ]
    },
    {
        "id": "758d30995d78f4a6",
        "type": "function",
        "z": "9d123742b98b63a7",
        "name": "Get Printer List",
        "func": "// This function node simply triggers the database query.\n// The actual query is now defined in the 'Get Printer Details' postgres node.\n\n// Clear payload and params as they are not needed.\n// The postgres node is set to run a static query without parameters.\nmsg.payload = {};\nmsg.params = []; // Ensure params is empty\nmsg.topic = \"\"; // Ensure topic is empty\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 360,
        "wires": [
            [
                "73bc2b974a4ad06a"
            ]
        ]
    },
    {
        "id": "73bc2b974a4ad06a",
        "type": "postgresql",
        "z": "9d123742b98b63a7",
        "name": "Get Printer Details",
        "query": "SELECT\n    device_id,\n    api_ip,\n    api_key,\n    device_model\nFROM devices\nWHERE api_ip IS NOT NULL AND api_ip <> ''\n  AND api_key IS NOT NULL AND api_key <> '';",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 660,
        "y": 480,
        "wires": [
            [
                "0465935004355e25"
            ]
        ]
    },
    {
        "id": "0465935004355e25",
        "type": "split",
        "z": "9d123742b98b63a7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 890,
        "y": 440,
        "wires": [
            [
                "d53a11df4d6a077f"
            ]
        ]
    },
    {
        "id": "d53a11df4d6a077f",
        "type": "function",
        "z": "9d123742b98b63a7",
        "name": "Prepare API Request",
        "func": "// msg.payload now contains a single printer object like:\n// { device_id: 'PrusaMK4-1', api_ip: '192...', api_key: '...', device_model: 'PrusaMK4' }\n\nconst printer = msg.payload;\n\nif (!printer || !printer.api_ip || !printer.api_key || !printer.device_id) {\n    node.error(\"Incomplete printer details received for splitting\", msg);\n    return null;\n}\n\n// Construct the API URL\n// Using the /api/printer endpoint you showed earlier. Add http:// if missing.\nlet apiUrl = printer.api_ip.startsWith('http') ? printer.api_ip : `http://${printer.api_ip}`;\napiUrl += '/api/printer'; // Append the specific endpoint\n\n// Set properties for the http request node\nmsg.url = apiUrl;\nmsg.headers = {\n    'X-Api-Key': printer.api_key,\n    'Content-Type': 'application/json' // Good practice\n};\nmsg.method = 'GET'; // Explicitly set method\n\n// Carry along the device_id and model for later use\nmsg.device_id = printer.device_id;\nmsg.device_model = printer.device_model; // Pass model info along\n\n// Clear original payload\nmsg.payload = {};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 500,
        "wires": [
            [
                "8f227bc79dc9a124"
            ]
        ]
    },
    {
        "id": "8f227bc79dc9a124",
        "type": "http request",
        "z": "9d123742b98b63a7",
        "name": "Call Prusa API",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1210,
        "y": 600,
        "wires": [
            [
                "7e08327a2d825369"
            ]
        ]
    },
    {
        "id": "f6ddec000dd6c33d",
        "type": "function",
        "z": "9d123742b98b63a7",
        "name": "Parse & Prepare Insert",
        "func": "// At this point, we have BOTH API responses available:\n// - The /job response is in msg.payload (from the last http request)\n// - The /printer response is in msg.printer_api_response (which we saved)\nconst job_api_response = msg.payload ?? {};\nconst printer_api_response = msg.printer_api_response ?? {};\nconst deviceId = msg.device_id; // Carried over from the start\n\nif (!printer_api_response.state || !deviceId) {\n    node.error(\"Missing API data or device_id after Prusa HTTP requests\", msg);\n    return null;\n}\n\n// --- Extract data from /printer response ---\nconst stateFlags = printer_api_response.state?.flags ?? {};\nconst stateText = printer_api_response.state?.text ?? 'Unknown';\nconst nozzleActual = printer_api_response.temperature?.tool0?.actual ?? printer_api_response.telemetry?.['temp-nozzle'] ?? null;\nconst nozzleTarget = printer_api_response.temperature?.tool0?.target ?? null;\nconst bedActual = printer_api_response.temperature?.bed?.actual ?? printer_api_response.telemetry?.['temp-bed'] ?? null;\nconst bedTarget = printer_api_response.temperature?.bed?.target ?? null;\nconst zHeight = printer_api_response.telemetry?.['z-height'] ?? null;\nconst speedMultiplier = printer_api_response.telemetry?.['print-speed'] ?? null;\nconst material = printer_api_response.telemetry?.material ?? null;\n\n// --- Extract data from /job response ---\nconst filename = job_api_response.job?.file?.name ?? null;\n// PrusaLink progress is 0-1. Convert to 0-100 for consistency.\nconst progressPercent = job_api_response.progress?.completion ? (job_api_response.progress.completion * 100) : null;\nconst timeLeftSeconds = job_api_response.progress?.printTimeLeft ?? null;\n\n// --- Prepare for Database Insert ---\nconst timestamp = new Date().toISOString();\n\nmsg.params = [\n    timestamp,                  // $1\n    deviceId,                   // $2\n    stateText,                  // $3\n    stateFlags.operational,     // $4\n    stateFlags.printing,        // $5\n    stateFlags.paused,          // $6\n    stateFlags.error,           // $7\n    stateFlags.busy,            // $8\n    stateFlags.sdReady,         // $9\n    parseFloat(nozzleActual) || null, // $10\n    parseFloat(nozzleTarget) || null, // $11\n    parseFloat(bedActual) || null,    // $12\n    parseFloat(bedTarget) || null,    // $13\n    parseFloat(zHeight) || null,      // $14\n    parseFloat(speedMultiplier) || null, // $15\n    material,                   // $16\n    filename,                   // $17\n    progressPercent,            // $18 (You might need to add this column to your table)\n    timeLeftSeconds             // $19 (You might need to add this column to your table)\n];\n\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 740,
        "wires": [
            [
                "8ad7f42699e84602"
            ]
        ]
    },
    {
        "id": "8ad7f42699e84602",
        "type": "postgresql",
        "z": "9d123742b98b63a7",
        "name": "Insert Printer Status",
        "query": "INSERT INTO printer_status (\n    timestamp, device_id, state_text, is_operational, is_printing,\n    is_paused, is_error, is_busy, is_sd_ready, nozzle_temp_actual,\n    nozzle_temp_target, bed_temp_actual, bed_temp_target, z_height_mm,\n    speed_multiplier_percent, material, filename, \n    -- These are the two new columns\n    progress_percent, time_left_seconds\n)\nVALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19) -- Now accepts 19 parameters\nON CONFLICT (timestamp, device_id) DO UPDATE SET\n    state_text = EXCLUDED.state_text,\n    is_operational = EXCLUDED.is_operational,\n    is_printing = EXCLUDED.is_printing,\n    is_paused = EXCLUDED.is_paused,\n    is_error = EXCLUDED.is_error,\n    is_busy = EXCLUDED.is_busy,\n    is_sd_ready = EXCLUDED.is_sd_ready,\n    nozzle_temp_actual = EXCLUDED.nozzle_temp_actual,\n    nozzle_temp_target = EXCLUDED.nozzle_temp_target,\n    bed_temp_actual = EXCLUDED.bed_temp_actual,\n    bed_temp_target = EXCLUDED.bed_temp_target,\n    z_height_mm = EXCLUDED.z_height_mm,\n    speed_multiplier_percent = EXCLUDED.speed_multiplier_percent,\n    material = EXCLUDED.material,\n    filename = EXCLUDED.filename,\n    -- And update the new columns on conflict as well\n    progress_percent = EXCLUDED.progress_percent,\n    time_left_seconds = EXCLUDED.time_left_seconds\n;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1240,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "7e08327a2d825369",
        "type": "function",
        "z": "9d123742b98b63a7",
        "name": "Prepare /job Request",
        "func": "// The response from the first API call (/api/printer) is in msg.payload.\n// We need to save it, because the next http request will overwrite msg.payload.\n\n// Store the first response in a different part of the message.\nmsg.printer_api_response = msg.payload;\n\n// Now, prepare the SECOND API call to the /api/job endpoint.\n// We can get the IP and Key from the msg object that has been carried along.\nconst printer_ip = msg.url.split('/')[2]; // Extracts IP from \"http://IP/api/printer\"\nconst api_key = msg.headers['X-Api-Key'];\n\nmsg.url = `http://${printer_ip}/api/job`;\nmsg.headers = { 'X-Api-Key': api_key };\nmsg.payload = {}; // Clear payload for a GET request\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 500,
        "wires": [
            [
                "1c70aa059a61dec1"
            ]
        ]
    },
    {
        "id": "1c70aa059a61dec1",
        "type": "http request",
        "z": "9d123742b98b63a7",
        "name": "Call Prusa /job API",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1490,
        "y": 620,
        "wires": [
            [
                "f6ddec000dd6c33d"
            ]
        ]
    },
    {
        "id": "6f57ba5b53dd0bb1",
        "type": "mqtt in",
        "z": "dd55f774d9b5b325",
        "d": true,
        "name": "Shelly Status In",
        "topic": "+/status/switch:0",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0a4d318485c9397e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1000,
        "wires": [
            [
                "31d7f14d6d48803a"
            ]
        ]
    },
    {
        "id": "31d7f14d6d48803a",
        "type": "function",
        "z": "dd55f774d9b5b325",
        "d": true,
        "name": "Parse Shelly Data",
        "func": "// msg.topic will be something like \"SPPS-02/status/switch:0\"\n// msg.payload will be the parsed JSON object from Shelly\n\n// Extract the Shelly ID from the topic\nconst topicParts = msg.topic.split('/');\nconst shellyId = topicParts[0]; // e.g., \"SPPS-02\"\n\n// Extract data from the payload, using safe navigation (?. operator)\n// Check both possible payload structures you provided\nlet power = msg.payload.apower;\nlet energyTotal = msg.payload.aenergy?.total;\nlet voltage = msg.payload.voltage;\nlet current = msg.payload.current;\nlet plugTempC = msg.payload.temperature?.tC;\n\n// Sometimes the simpler payload only contains energy:\n// {\"src\":\"...\",\"dst\":\"...\",\"method\":\"NotifyStatus\",\"params\":{\"ts\":...,\"switch:0\":{\"id\":0,\"aenergy\":{\"by_minute\":...,\"minute_ts\":...,\"total\":...}}}}\nif (msg.payload.params?.[\"switch:0\"]?.aenergy?.total !== undefined) {\n    // If the more complex structure exists, prefer its energy value if others are missing\n    if (energyTotal === undefined) {\n        energyTotal = msg.payload.params[\"switch:0\"].aenergy.total;\n    }\n    // This structure doesn't contain power, voltage etc., so we rely on the other message type for those.\n    // If power is undefined here, it means this message ONLY contained energy update. We should skip inserting incomplete data.\n    if (power === undefined) {\n         node.warn(`Skipping incomplete energy-only update for ${shellyId}`);\n         return null; // Stop processing this message further\n    }\n}\n\n// Validate required data (at least power and energy)\nif (shellyId === undefined || power === undefined || energyTotal === undefined) {\n    node.error(\"Missing required data (shellyId, power, or energyTotal) in payload for topic: \" + msg.topic, msg);\n    return null; // Stop processing this message\n}\n\n// Create a standard timestamp (Node-RED runs on UTC, PG needs TIMESTAMPTZ)\nconst timestamp = new Date().toISOString();\n\n// We need the internal device_id (e.g., PrusaMK4-1) associated with this shellyId.\n// We'll fetch this using a separate database lookup in the next step.\n// For now, just pass the shellyId along.\nmsg.shellyId = shellyId;\n\n// Prepare the payload for the next step (lookup)\nmsg.payload = {\n    timestamp: timestamp,\n    power_watts: parseFloat(power) || 0, // Ensure float, default to 0 if parse fails\n    energy_total_wh: parseFloat(energyTotal) || 0, // Shelly reports Wh*min, we convert later if needed, but field is named _wh\n    voltage: parseFloat(voltage) || 0,\n    current_amps: parseFloat(current) || 0,\n    plug_temp_c: parseFloat(plugTempC) || null // Allow NULL if temp missing\n};\n\n// Clear the original topic to avoid confusion downstream\nmsg.topic = \"\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 980,
        "wires": [
            [
                "7c4ce2cbf1dc46e0",
                "3057bb5a678e24af"
            ]
        ]
    },
    {
        "id": "7c4ce2cbf1dc46e0",
        "type": "function",
        "z": "dd55f774d9b5b325",
        "d": true,
        "name": "Lookup Device ID",
        "func": "// msg.shellyId contains the ID like \"SPPS-02\"\n// msg.payload contains the parsed energy data object\n\nif (!msg.shellyId) {\n    node.error(\"Shelly ID missing, cannot lookup device ID\");\n    return null;\n}\n\n// Prepare the parameters array for the Prepared Statement in the postgres node.\n// The query in the postgres node will expect $1 to be the shelly_id.\nmsg.params = [ msg.shellyId ];\n\n// Pass the energy data along for the next step using a different property\nmsg.energyData = msg.payload;\n\n// Clear payload and topic as they are not needed for the postgres node in this mode\nmsg.payload = {};\nmsg.topic = \"\"; // Ensure topic is empty\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1040,
        "wires": [
            [
                "e095b01eff73832b",
                "410f576b8d422baf"
            ]
        ]
    },
    {
        "id": "4992d23c6610ce51",
        "type": "function",
        "z": "dd55f774d9b5b325",
        "d": true,
        "name": "Prepare Insert Parameters",
        "func": "// msg.payload from the database node will be an array of results.\n// It should contain one object like [{ device_id: 'PrusaMK4-1' }]\n\n// **Improved Check:** Verify msg.payload is a non-empty array first\nif (!Array.isArray(msg.payload) || msg.payload.length === 0) {\n    // Log an informative error including the shellyId that failed the lookup\n    node.error(`Device ID lookup query returned no results for Shelly ID: '${msg.shellyId}'. Check if this Shelly ID exists in the 'devices' table.`, msg);\n    return null; // Stop processing this message flow\n}\n\n// Now we know msg.payload is a non-empty array. Access the first result.\nconst lookupResult = msg.payload[0];\n\n// **Improved Check:** Verify the result object and the device_id property exist\nif (!lookupResult || typeof lookupResult.device_id !== 'string' || lookupResult.device_id.trim() === '') {\n    node.error(`Device ID not found or is invalid in lookup result for Shelly ID: '${msg.shellyId}'. Result object received:`, lookupResult);\n    return null; // Stop processing\n}\n\n// If we reached here, the lookup was successful.\nconst deviceId = lookupResult.device_id;\nconst data = msg.energyData; // Retrieve the energy data we stored earlier\n\nif (!data) {\n    // This error shouldn't happen if the flow logic is correct, but check anyway\n    node.error(\"Internal Error: Energy data missing after successful device ID lookup for device: \" + deviceId);\n    return null;\n}\n\n// Prepare the parameters array in the correct order for the INSERT statement\n// Order MUST match the VALUES clause in the postgres node:\n// $1: timestamp, $2: device_id, $3: power_watts, $4: energy_total_wh,\n// $5: voltage, $6: current_amps, $7: plug_temp_c\nmsg.params = [\n    data.timestamp,        // $1\n    deviceId,              // $2\n    data.power_watts,      // $3\n    data.energy_total_wh,  // $4\n    data.voltage,          // $5\n    data.current_amps,     // $6\n    data.plug_temp_c       // $7\n];\n\n// Clear unnecessary properties that might interfere\ndelete msg.payload;\ndelete msg.topic; // Ensure topic is clear as we're not using it for the query\ndelete msg.energyData;\n// We keep msg.shellyId here so the error messages above have context, but it's not used further.\n// delete msg.shellyId; // Optional: uncomment to remove it fully\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 900,
        "wires": [
            [
                "77a706e676371f6c",
                "449e7014818623f0"
            ]
        ]
    },
    {
        "id": "77a706e676371f6c",
        "type": "postgresql",
        "z": "dd55f774d9b5b325",
        "d": true,
        "name": "Insert Energy Data",
        "query": "INSERT INTO energy_data (\n    timestamp,\n    device_id,\n    power_watts,\n    energy_total_wh,\n    voltage,\n    current_amps,\n    plug_temp_c\n)\nVALUES ($1, $2, $3, $4, $5, $6, $7)\nON CONFLICT (timestamp, device_id) DO NOTHING;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1040,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "e095b01eff73832b",
        "type": "postgresql",
        "z": "dd55f774d9b5b325",
        "d": true,
        "name": "Prepared Statement",
        "query": "SELECT device_id FROM devices WHERE shelly_id = $1;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 800,
        "y": 960,
        "wires": [
            [
                "4992d23c6610ce51"
            ]
        ]
    },
    {
        "id": "449e7014818623f0",
        "type": "debug",
        "z": "dd55f774d9b5b325",
        "d": true,
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 860,
        "wires": []
    },
    {
        "id": "3057bb5a678e24af",
        "type": "debug",
        "z": "dd55f774d9b5b325",
        "d": true,
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 1100,
        "wires": []
    },
    {
        "id": "410f576b8d422baf",
        "type": "debug",
        "z": "dd55f774d9b5b325",
        "d": true,
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1120,
        "wires": []
    },
    {
        "id": "3b44ba5a1dc552c7",
        "type": "mqtt in",
        "z": "dd55f774d9b5b325",
        "name": "Shelly Status In",
        "topic": "+/status/switch:0",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 260,
        "wires": [
            [
                "6011c11b42aa9370"
            ]
        ],
        "info": "**Purpose:** Subscribes to the MQTT topics for all Shelly smart plugs. This is the primary entry point for live energy data.\n\n**Topic:** `+/status/switch:0`\n- The `+` is a single-level wildcard that captures the unique `shelly_id` from the topic (e.g., `SPPS-02`).\n\n**Output:**\n- `msg.topic`: The full topic string.\n- `msg.payload`: A JSON object containing the status report from the Shelly device, including power, energy, and voltage."
    },
    {
        "id": "6011c11b42aa9370",
        "type": "function",
        "z": "dd55f774d9b5b325",
        "name": "Parse Shelly Data",
        "func": "// msg.topic will be something like \"LAUDS_FabLab_3DP_Klimawandel/status/switch:0\"\n// msg.payload will be the parsed JSON object from the Shelly /status/switch:0 message\n\nconst topicParts = msg.topic.split('/');\nlet shellyId;\n\n// NEW: More robust way to find the Shelly ID.\n// It finds the 'status' part of the topic and assumes the ID is the part right before it.\nconst statusIndex = topicParts.indexOf('status');\nif (statusIndex > 0) {\n    shellyId = topicParts[statusIndex - 1];\n} else {\n    // Fallback to the original logic if 'status' isn't found\n    shellyId = topicParts[0];\n}\n\n// Extract data from the payload, using safe navigation (?. operator)\nlet power = msg.payload.apower;\nlet energyTotal = msg.payload.aenergy?.total;\nlet voltage = msg.payload.voltage;\nlet current = msg.payload.current;\nlet plugTempC = msg.payload.temperature?.tC;\n\n// This block correctly handles the other message type (.../events/rpc) by ignoring it.\n// We add a more descriptive warning.\nif (msg.payload.params?.[\"switch:0\"]?.aenergy?.total !== undefined) {\n    if (power === undefined) {\n        node.warn(`Skipping incomplete energy-only update from topic ${msg.topic}. This is the correct behavior as it lacks full data.`);\n        return null; // Stop processing this message further\n    }\n}\n\n// Validate required data. This is a critical check.\nif (shellyId === undefined || power === undefined || energyTotal === undefined) {\n    node.error(\"Missing required data (shellyId, power, or energyTotal) in payload for topic: \" + msg.topic, msg);\n    return null; // Stop processing this message\n}\n\n// Create a standard timestamp (Node-RED runs on UTC, PG needs TIMESTAMPTZ)\nconst timestamp = new Date().toISOString();\n\n// We need the internal device_id (e.g., ultimaker_2_solex) associated with this shellyId.\n// We'll fetch this using a separate database lookup in the next step.\n// For now, just pass the shellyId along.\nmsg.shellyId = shellyId;\n\n// Prepare the payload for the next step (lookup)\nmsg.payload = {\n    timestamp: timestamp,\n    power_watts: parseFloat(power) || 0,\n    energy_total_wh: parseFloat(energyTotal) || 0,\n    voltage: parseFloat(voltage) || 0,\n    current_amps: parseFloat(current) || 0,\n    plug_temp_c: parseFloat(plugTempC) || null // Allow NULL if temp missing\n};\n\n// Clear the original topic to avoid confusion downstream\nmsg.topic = \"\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 260,
        "wires": [
            [
                "dea9b58952db33f3",
                "880c7f6b7e9a735f"
            ]
        ],
        "info": "**Purpose:** Extracts the relevant energy metrics from the raw JSON payload and standardizes them into a consistent format.\n\n**Logic:**\n1.  Parses the `shelly_id` from the `msg.topic`.\n2.  Safely extracts `apower`, `aenergy.total`, `voltage`, etc. from the `msg.payload`.\n3.  Validates that essential data is present.\n4.  Creates a new, clean object with standardized keys (`power_watts`, `energy_total_wh`, etc.).\n\n**Output:**\n- `msg.shellyId`: The unique ID of the Shelly plug.\n- `msg.payload`: The new, standardized data object."
    },
    {
        "id": "dea9b58952db33f3",
        "type": "function",
        "z": "dd55f774d9b5b325",
        "name": "Lookup Device ID",
        "func": "// msg.shellyId contains the ID like \"SPPS-02\"\n// msg.payload contains the parsed energy data object\n\nif (!msg.shellyId) {\n    node.error(\"Shelly ID missing, cannot lookup device ID\");\n    return null;\n}\n\n// Prepare the parameters array for the Prepared Statement in the postgres node.\n// The query in the postgres node will expect $1 to be the shelly_id.\nmsg.params = [ msg.shellyId ];\n\n// Pass the energy data along for the next step using a different property\nmsg.energyData = msg.payload;\n\n// Clear payload and topic as they are not needed for the postgres node in this mode\nmsg.payload = {};\nmsg.topic = \"\"; // Ensure topic is empty\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 260,
        "wires": [
            [
                "b994af8ea200e124",
                "8a103cd81cf25cb4"
            ]
        ]
    },
    {
        "id": "2d8a7b2473e3360c",
        "type": "function",
        "z": "dd55f774d9b5b325",
        "name": "Prepare Insert Parameters",
        "func": "// msg.payload from the database node will be an array of results.\n// It should contain one object like [{ device_id: 'PrusaMK4-1' }]\n\n// **Improved Check:** Verify msg.payload is a non-empty array first\nif (!Array.isArray(msg.payload) || msg.payload.length === 0) {\n    // Log an informative error including the shellyId that failed the lookup\n    node.error(`Device ID lookup query returned no results for Shelly ID: '${msg.shellyId}'. Check if this Shelly ID exists in the 'devices' table.`, msg);\n    return null; // Stop processing this message flow\n}\n\n// Now we know msg.payload is a non-empty array. Access the first result.\nconst lookupResult = msg.payload[0];\n\n// **Improved Check:** Verify the result object and the device_id property exist\nif (!lookupResult || typeof lookupResult.device_id !== 'string' || lookupResult.device_id.trim() === '') {\n    node.error(`Device ID not found or is invalid in lookup result for Shelly ID: '${msg.shellyId}'. Result object received:`, lookupResult);\n    return null; // Stop processing\n}\n\n// If we reached here, the lookup was successful.\nconst deviceId = lookupResult.device_id;\nconst data = msg.energyData; // Retrieve the energy data we stored earlier\n\nif (!data) {\n    // This error shouldn't happen if the flow logic is correct, but check anyway\n    node.error(\"Internal Error: Energy data missing after successful device ID lookup for device: \" + deviceId);\n    return null;\n}\n\n// Prepare the parameters array in the correct order for the INSERT statement\n// Order MUST match the VALUES clause in the postgres node:\n// $1: timestamp, $2: device_id, $3: power_watts, $4: energy_total_wh,\n// $5: voltage, $6: current_amps, $7: plug_temp_c\nmsg.params = [\n    data.timestamp,        // $1\n    deviceId,              // $2\n    data.power_watts,      // $3\n    data.energy_total_wh,  // $4\n    data.voltage,          // $5\n    data.current_amps,     // $6\n    data.plug_temp_c       // $7\n];\n\n// Clear unnecessary properties that might interfere\ndelete msg.payload;\ndelete msg.topic; // Ensure topic is clear as we're not using it for the query\ndelete msg.energyData;\n// We keep msg.shellyId here so the error messages above have context, but it's not used further.\n// delete msg.shellyId; // Optional: uncomment to remove it fully\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 320,
        "wires": [
            [
                "873bd32f3e178cc0",
                "e04ec9e0e6c9a3a5"
            ]
        ]
    },
    {
        "id": "873bd32f3e178cc0",
        "type": "postgresql",
        "z": "dd55f774d9b5b325",
        "name": "Insert Energy Data",
        "query": "INSERT INTO energy_data (\n    timestamp,\n    device_id,\n    power_watts,\n    energy_total_wh,\n    voltage,\n    current_amps,\n    plug_temp_c\n)\nVALUES ($1, $2, $3, $4, $5, $6, $7)\nON CONFLICT (timestamp, device_id) DO NOTHING;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1330,
        "y": 260,
        "wires": [
            []
        ],
        "info": "**Purpose:** The final step. This node inserts the standardized energy data into the `energy_data` hypertable.\n\n**Logic:**\n- The previous node (\"Prepare Insert Parameters\") formats `msg.params` with all the required values in the correct order.\n- An `INSERT` query is executed.\n- `ON CONFLICT DO NOTHING` prevents duplicate entries if a message is received twice."
    },
    {
        "id": "b994af8ea200e124",
        "type": "postgresql",
        "z": "dd55f774d9b5b325",
        "name": "Prepared Statement",
        "query": "SELECT device_id FROM devices WHERE shelly_id = $1;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 840,
        "y": 260,
        "wires": [
            [
                "2d8a7b2473e3360c"
            ]
        ],
        "info": "**Purpose:** Translates the public `shelly_id` into the system's internal `device_id`.\n\n**Logic:**\n- It queries the `devices` table to find the row `WHERE shelly_id = $1`.\n- This is a critical step to link the energy data to the correct printer.\n\n**Output:**\n- `msg.payload`: An array containing the query result, e.g., `[{ \"device_id\": \"PrusaMK4-1\" }]`.\n- `msg.energyData`: The original standardized energy data is preserved and passed through."
    },
    {
        "id": "e04ec9e0e6c9a3a5",
        "type": "debug",
        "z": "dd55f774d9b5b325",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 320,
        "wires": []
    },
    {
        "id": "880c7f6b7e9a735f",
        "type": "debug",
        "z": "dd55f774d9b5b325",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 320,
        "wires": []
    },
    {
        "id": "8a103cd81cf25cb4",
        "type": "debug",
        "z": "dd55f774d9b5b325",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 320,
        "wires": []
    },
    {
        "id": "4918b67096adabfe",
        "type": "http in",
        "z": "ac9683af7e82fb53",
        "g": "9e77943c233db3eb",
        "name": "POST /api/analyze",
        "url": "/api/analyze",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "e0f4357542e2412b"
            ]
        ],
        "info": "**Purpose:** Defines the public HTTP endpoint that the frontend page calls when a user clicks the \"Run Energy Analysis\" button.\r\n\r\n**Endpoint:** `POST /api/analyze`\r\n\r\n**Input:**\r\n- Expects an incoming `msg.payload` containing a JSON object from the frontend, e.g., `{ \"deviceId\": \"PrusaMK4-1\", \"timeRange\": \"24h\", ... }`."
    },
    {
        "id": "e0f4357542e2412b",
        "type": "function",
        "z": "ac9683af7e82fb53",
        "g": "9e77943c233db3eb",
        "name": "Parse Analyze Request",
        "func": "// Node-RED Function Node: Parse Analyze Request\n// --- Updated: 2024-07-XX (Added 'all' time range) ---\n\n// msg.payload should contain JSON like:\n// { deviceId: \"PrusaMK4-1\", timeRange: \"24h\", selectedDrivers: {\"nozzle_temp_actual\": true, ...} }\n\nconst input = msg.payload;\n\n// --- Basic Validation ---\nif (!input || typeof input !== 'object') {\n    node.error(\"Invalid payload received. Expected JSON object.\", msg);\n    return [null, msg]; // Send to error output (output 2)\n}\nconst deviceId = input.deviceId;\n// --- Use '24h' as the default timeRange if not provided ---\nconst timeRange = input.timeRange || \"24h\";\nconst selectedDrivers = input.selectedDrivers || {}; // Default to empty object\n\nif (!deviceId || typeof deviceId !== 'string' || deviceId.trim() === '') {\n    node.error(\"Missing or invalid deviceId in payload.\", msg);\n    return [null, msg]; // Send to error output\n}\n// --- End Basic Validation ---\n\n\n// --- Calculate Start Time ---\nlet startTimeISO = null; // Initialize\n\nnode.log(`[Parse Request] Received timeRange: '${timeRange}' for device: '${deviceId}'`);\n\nif (timeRange === 'all') {\n    // For 'all time', use a very early date recognized by PostgreSQL.\n    // This effectively selects all data >= epoch start.\n    startTimeISO = '1970-01-01T00:00:00Z'; // Use Unix Epoch start as the boundary\n    node.log(`[Parse Request] Time Range is 'all', setting startTimeISO to: ${startTimeISO}`);\n} else {\n    // Calculate specific start time based on current time for other ranges\n    let targetTimeMs = new Date().getTime(); // Get current time in milliseconds UTC\n    let durationHours = 0;\n\n    switch (timeRange) {\n        case '1h':  durationHours = 1; break;\n        case '6h':  durationHours = 6; break;\n        case '7d':  durationHours = 7 * 24; break;\n        case '24h': // Fallthrough for default case\n        default:    durationHours = 24; break; // Default to 24h if invalid range provided\n    }\n    targetTimeMs -= durationHours * 60 * 60 * 1000; // Subtract duration in milliseconds\n\n    const finalStartTime = new Date(targetTimeMs); // Create Date object from calculated time\n    startTimeISO = finalStartTime.toISOString(); // Convert to ISO 8601 format (UTC)\n    node.log(`[Parse Request] Time Range: '${timeRange}', Calculated startTimeISO: ${startTimeISO}`);\n}\n// --- End Calculate Start Time ---\n\n\n// --- Prepare variables for next steps ---\n\n// Map of allowed driver keys from UI (selectedDrivers) to their DB column source\n// Keep this map updated if new selectable drivers are added or column names change.\n// REMOVED 'speed_multiplier_percent' as it's no longer used by model or UI checkbox\nconst allDriverDbColumns = {\n    'nozzle_temp_actual': 'ps.nozzle_temp_actual',\n    'bed_temp_actual': 'ps.bed_temp_actual',\n    'is_printing': 'ps.is_printing',\n    'z_height_mm': 'ps.z_height_mm',\n    // 'speed_multiplier_percent': 'ps.speed_multiplier_percent', // Removed\n    'temperature_c': 'env.temperature_c',   // From environment table\n    'humidity_percent': 'env.humidity_pct'  // From environment table (check column name)\n};\n\n// We don't strictly need columnsToSelect anymore as the SQL query fetches all relevant cols.\n// But we still need selectedDriverKeys for Correlation/Regression logic later.\nlet selectedDriverKeys = [];\nfor (const driverKey in selectedDrivers) {\n    // Check if driver is selected (value is true) AND it's a valid known driver key\n    if (selectedDrivers[driverKey] === true && allDriverDbColumns.hasOwnProperty(driverKey)) {\n        selectedDriverKeys.push(driverKey);\n    } else if (selectedDrivers[driverKey] === true) {\n        // Log if a selected key isn't in our map (maybe a typo in UI value?)\n        node.warn(`[Parse Request] Skipping unknown selected driver key '${driverKey}'.`);\n    }\n}\nnode.log(`[Parse Request] Selected Driver Keys for downstream analysis: ${selectedDriverKeys}`);\n// --- End Prepare variables ---\n\n\n// --- Pass data to the next node ---\n// The 'Build SQL for Analysis' node only needs dbParams.\n// The Python node needs analysisInputs.\n\nmsg.dbParams = [deviceId, startTimeISO]; // Params for the main SQL query node\n\nmsg.analysisInputs = {\n    deviceId: deviceId,\n    startTime: startTimeISO, // Pass the calculated start time (could be epoch start)\n    selectedDriverKeys: selectedDriverKeys // Pass the validated keys the user selected\n};\n\n// Clear payload from input node if not needed further\nmsg.payload = {};\n// Clear properties no longer needed\ndelete msg.selectColumnsSQL; // This isn't used anymore\n\nreturn [msg, null]; // Send valid requests to output 1 (main flow)",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 500,
        "wires": [
            [
                "9f67b80add894bed"
            ],
            [
                "2dc8f0c00c0dd79f"
            ]
        ],
        "info": "**Purpose:** Validates and processes the incoming request from the user. It translates the user-friendly inputs (like \"24h\") into technical parameters for the database query.\r\n\r\n**Logic:**\r\n1.  Validates the incoming JSON payload to ensure it has the required fields (`deviceId`, etc.).\r\n2.  Calculates the correct ISO 8601 start timestamp based on the `timeRange` string (e.g., \"24h\" becomes the timestamp for 24 hours ago).\r\n3.  Creates two new message properties to pass to downstream nodes:\r\n    - `msg.dbParams`: An array `[deviceId, startTimeISO]` for the PostgreSQL query.\r\n    - `msg.analysisInputs`: An object containing all the contextual information for the final Python script."
    },
    {
        "id": "9f67b80add894bed",
        "type": "function",
        "z": "ac9683af7e82fb53",
        "g": "6382c2e9dcb135c5",
        "name": "Build SQL for Analysis",
        "func": "// Receives msg.dbParams, msg.analysisInputs\n// The static SQL query is now in the postgres node\n\nconst dbParams = msg.dbParams; // Contains [deviceId, startTimeISO]\n\nif (!dbParams || dbParams.length !== 2) {\n    node.error(\"Missing required database parameters\", msg);\n    return null; // Stop flow\n}\n\n// Prepare parameters for the static query in the postgres node\nmsg.params = dbParams;\n\n// Clear properties not needed by the SQL node\ndelete msg.dbParams;\ndelete msg.selectColumnsSQL; // Ensure this is removed\n\n// Keep msg.analysisInputs for the Python node\nmsg.payload = {};\nmsg.topic = \"\"; // Clear topic\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 100,
        "wires": [
            [
                "fd667af16fc7af70"
            ]
        ],
        "info": "**Purpose:** A simple \"pass-through\" node that ensures the `msg` object is correctly formatted for the main database query node.\r\n**Logic:** It moves the `msg.dbParams` created in the previous step into the `msg.params` property, which is where the `postgresql` node expects its parameters."
    },
    {
        "id": "fd667af16fc7af70",
        "type": "postgresql",
        "z": "ac9683af7e82fb53",
        "g": "6382c2e9dcb135c5",
        "name": "Get Data for Analysis",
        "query": "-- Query selecting all potentially relevant columns, with improved Env join\nWITH EnergyPoints AS (\n    SELECT timestamp, device_id, power_watts, voltage, current_amps, plug_temp_c\n    FROM energy_data\n    WHERE device_id = $1 AND timestamp >= $2 -- $1=deviceId, $2=startTimeISO\n)\nSELECT\n    ep.timestamp,\n    ep.power_watts,\n    ep.voltage,\n    ep.current_amps,\n    ep.plug_temp_c,\n    ps.nozzle_temp_actual,\n    ps.bed_temp_actual,\n    ps.is_printing,\n    ps.z_height_mm,\n    ps.speed_multiplier_percent,\n    -- Environmental columns from the new join\n    env.temperature_c,\n    env.humidity_pct AS humidity_percent -- Still aliasing for consistency\nFROM EnergyPoints ep\n-- Lateral join for Printer Status (finds latest status at or before energy timestamp)\nLEFT JOIN LATERAL (\n    SELECT nozzle_temp_actual, bed_temp_actual, is_printing, z_height_mm, speed_multiplier_percent\n    FROM printer_status\n    WHERE device_id = ep.device_id AND timestamp <= ep.timestamp\n    ORDER BY timestamp DESC LIMIT 1\n) ps ON true\n-- Lateral join for Environment Data (finds closest reading within +/- 15 mins)\nLEFT JOIN LATERAL (\n    SELECT temperature_c, humidity_pct -- Select needed env columns\n    FROM environment_data\n    WHERE\n        -- Match on location or dummy device ID used for environment data\n        device_id = 'environment' -- Or use location_id = 'Hamburg_DE'\n        -- Define a reasonable time window around the energy timestamp\n        AND timestamp BETWEEN ep.timestamp - INTERVAL '15 minutes' AND ep.timestamp + INTERVAL '15 minutes'\n    -- Order by the absolute time difference to find the closest reading\n    ORDER BY ABS(EXTRACT(EPOCH FROM (ep.timestamp - timestamp))) ASC\n    LIMIT 1 -- Take only the single closest reading within the window\n) env ON true -- Always join, subquery finds closest or returns NULLs if none in window\nORDER BY ep.timestamp ASC;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 780,
        "y": 160,
        "wires": [
            [
                "970bdc8e3cb051e8"
            ]
        ],
        "info": "**Purpose:** Executes a powerful query to fetch a complete, unified time-series dataset for the requested device and time range.\r\n\r\n**Logic:**\r\n- The query joins `energy_data` with `printer_status` and `environment_data`.\r\n- It uses `LEFT JOIN LATERAL` to efficiently find the closest matching status and environment reading for every single energy data point. This creates a rich, high-resolution dataset perfect for analysis.\r\n\r\n**Output:**\r\n- `msg.payload`: An array of objects, where each object represents a single point in time with all available sensor data."
    },
    {
        "id": "970bdc8e3cb051e8",
        "type": "python-function",
        "z": "ac9683af7e82fb53",
        "g": "6382c2e9dcb135c5",
        "name": "Perform Analysis (ML, Regr, Corr)",
        "func": "# Node-RED Python Function Node: Perform Analysis (ML, Regr, Corr)\n# --- Final Version: XGBoost, 7 Features, Post-processing, Cost Removed, NumPy 2.0 Fix ---\n\n# --- Imports & Environment ---\nimport sys\nimport os\n# --- Add venv path ---\nvenv_path = '/home/ubuntu/monitor_ml/venv/lib/python3.12/site-packages'\nif venv_path not in sys.path:\n    sys.path.append(venv_path)\n\nimport pandas as pd\nimport numpy as np\nimport joblib\nfrom sklearn.linear_model import LinearRegression\nimport traceback\nimport warnings\nimport gc\nfrom datetime import timedelta\nimport psycopg2\n# Removed psycopg2 imports as cost fetch is removed\n\n# --- Configuration ---\nMODEL_DIR = '/home/ubuntu/monitor_ml/models'\nTARGET_COLUMN = 'power_watts'\nACTIVE_POWER_THRESHOLD = 5.0\nIMPUTE_VALUE_WHEN_API_MISSING = 0\n\n# --- Dynamic Model Selection ---\n# Get deviceId from the input message context provided by Node-RED\ndevice_id = msg.get('analysisInputs', {}).get('deviceId', '')\n\n# Default to Prusa model files\nMODEL_FILENAME = 'best_model.joblib' # Prusa XGBoost model\nSCALER_FILENAME = 'scaler.joblib'\nMETRICS_FILENAME = 'model_evaluation_metrics.joblib'\nSCALER_COLS_FILENAME = 'scaler_columns.joblib'\nMODEL_FEATURES_FILENAME = 'model_features.joblib'\nMODEL_TYPE_FOR_LOG = 'Prusa (XGBoost)'\n\n# If it's an Ender 3, switch to the Ender 3 model files\nif 'Ender-3' in device_id:\n    node.log(\"API - Ender 3 device selected. Switching to Ender 3 model assets.\")\n    MODEL_FILENAME = 'ender3_randomforest_model.joblib' # Ender RF model\n    SCALER_FILENAME = 'ender3_scaler.joblib'\n    METRICS_FILENAME = 'ender3_model_evaluation_metrics.joblib'\n    SCALER_COLS_FILENAME = 'ender3_scaler_columns.joblib'\n    MODEL_FEATURES_FILENAME = 'ender3_model_features.joblib'\n    MODEL_TYPE_FOR_LOG = 'Ender 3 (RandomForest)'\n\nnode.log(f\"API - Using Model Type: {MODEL_TYPE_FOR_LOG}\")\n\n# Build final paths based on the selected filenames\nSCALER_PATH = os.path.join(MODEL_DIR, SCALER_FILENAME)\nMODEL_PATH = os.path.join(MODEL_DIR, MODEL_FILENAME)\nMETRICS_PATH = os.path.join(MODEL_DIR, METRICS_FILENAME)\nSCALER_COLS_PATH = os.path.join(MODEL_DIR, SCALER_COLS_FILENAME)\nMODEL_FEATURES_PATH = os.path.join(MODEL_DIR, MODEL_FEATURES_FILENAME)\n\n# --- ADD Database Details Needed for Min Timestamp Query ---\nDB_NAME = \"reg_ml\"\nDB_USER = \"reg_ml\"\nDB_PASS = \"raptorblingx\" # Consider moving to flow/global context or env var later\nDB_HOST = \"localhost\"\nDB_PORT = \"5432\"\n# --- END ADD ---\n\n\n# --- Pre-load Model, Scaler, Feature Lists, and Metrics ---\nscaler = None; model = None; evaluation_metrics = {\"status\": \"Metrics pending load...\"}\nSCALER_COLUMNS = None; MODEL_FEATURES = None; loading_error_details = {}\ntry: scaler = joblib.load(SCALER_PATH); node.log(\"API - Loaded scaler.\")\nexcept Exception as e: loading_error_details[\"scaler\"] = f\"Scaler load error: {str(e)}\"; node.error(f\"API - {loading_error_details['scaler']}\")\ntry: SCALER_COLUMNS = joblib.load(SCALER_COLS_PATH); node.log(f\"API - Loaded scaler columns: {SCALER_COLUMNS}\")\nexcept Exception as e: loading_error_details[\"scaler_cols\"] = f\"Scaler columns load error: {str(e)}\"; node.error(f\"API - {loading_error_details['scaler_cols']}\")\ntry: model = joblib.load(MODEL_PATH); node.log(f\"API - Loaded model from {MODEL_FILENAME}.\")\nexcept Exception as e: loading_error_details[\"model\"] = f\"Model load error: {str(e)}\"; node.error(f\"API - {loading_error_details['model']}\")\ntry: MODEL_FEATURES = joblib.load(MODEL_FEATURES_PATH); node.log(f\"API - Loaded model features: {MODEL_FEATURES}\")\nexcept Exception as e: loading_error_details[\"model_features\"] = f\"Model features load error: {str(e)}\"; node.error(f\"API - {loading_error_details['model_features']}\")\ntry: evaluation_metrics = joblib.load(METRICS_PATH); node.log(f\"API - Loaded evaluation metrics (Type: {evaluation_metrics.get('model_type', 'Unknown')}).\")\nexcept Exception as e: error_msg = f\"Metrics load error: {str(e)}\"; node.error(f\"API - {error_msg}\"); evaluation_metrics = {\"mae\": \"N/A\", \"rmse\": \"N/A\", \"r_squared\": \"N/A\", \"error\": error_msg}; evaluation_metrics[\"error_metrics\"] = error_msg\n\nessential_components_missing = False\nif scaler is None or SCALER_COLUMNS is None or model is None or MODEL_FEATURES is None:\n    node.error(f\"API - CRITICAL: One or more ML assets failed to load. Errors: {loading_error_details}\")\n    essential_components_missing = True\n\n# --- Main Analysis Function Definition ---\ndef perform_analysis(data_list, selected_driver_keys, loaded_model, loaded_scaler, expected_scaler_cols, expected_model_features):\n    node.log(\"API - perform_analysis function started.\")\n    results = {\n        \"ml_prediction\": {\"timestamps\": [], \"actual\": [], \"predicted\": [], \"error\": None},\n        \"ml_feature_importance\": {\"error\": \"Not calculated yet.\"},\n        \"ml_top_drivers\": [],\n        # Removed cost fields\n        \"new_metrics\": {\"total_kwh\": None, \"avg_power_overall\": None, \"avg_power_active\": None, \"phase_analysis\": None, \"error\": None},\n        \"correlation\": {}, \"regression\": {}, \"summary\": \"Analysis started.\", \"error\": None\n        # Removed device_info\n    }\n    df = None; df_active = None; df_processed = None\n\n    # --- 1. Convert input list to DataFrame & Basic Prep ---\n    try:\n        if not data_list: raise ValueError(\"No data received from database query.\")\n        node.log(\"API - Creating DataFrame...\")\n        df = pd.DataFrame(data_list)\n        if TARGET_COLUMN not in df.columns: raise ValueError(f\"Target column '{TARGET_COLUMN}' missing.\")\n        if 'timestamp' not in df.columns: raise ValueError(\"'timestamp' column missing.\")\n\n        df['timestamp'] = pd.to_datetime(df['timestamp'])\n        df.set_index('timestamp', inplace=True, drop=False)\n        df.sort_index(inplace=True)\n        df.replace([np.inf, -np.inf], np.nan, inplace=True)\n        node.log(f\"API - Initial DataFrame shape: {df.shape}. Columns available: {df.columns.tolist()}\")\n\n    except Exception as e: node.error(f\"API - Error during DataFrame prep: {e}\\\\n{traceback.format_exc()}\"); results[\"error\"] = f\"Data prep error: {str(e)}\"; return results\n\n        # --- 1c. Fetch Minimum Timestamp for this Device ---\n    min_timestamp_iso = None\n    device_id_for_min_ts = msg.get('analysisInputs', {}).get('deviceId')\n\n    if device_id_for_min_ts:\n        db_conn_min_ts = None\n        try:\n            node.log(f\"API - Connecting to DB to fetch min timestamp for {device_id_for_min_ts}...\")\n            db_conn_min_ts = psycopg2.connect(dbname=DB_NAME, user=DB_USER, password=DB_PASS, host=DB_HOST, port=DB_PORT)\n            cur_min_ts = db_conn_min_ts.cursor()\n            # Query the absolute earliest timestamp for this device from energy_data\n            cur_min_ts.execute(\"SELECT min(timestamp) FROM energy_data WHERE device_id = %s\", (device_id_for_min_ts,))\n            result_min_ts = cur_min_ts.fetchone()\n            if result_min_ts and result_min_ts[0] is not None:\n                # Format as ISO string UTC (compatible with JS Date parsing)\n                min_timestamp_iso = result_min_ts[0].strftime('%Y-%m-%dT%H:%M:%S.%fZ')\n                node.log(f\"API - Fetched min_timestamp_iso: {min_timestamp_iso}\")\n            else:\n                node.warn(f\"API - min_timestamp not found for device {device_id_for_min_ts} (no data?)\")\n            cur_min_ts.close()\n        except Exception as db_err:\n            node.error(f\"API - Failed to fetch min_timestamp: {db_err}\")\n        finally:\n            if db_conn_min_ts:\n                db_conn_min_ts.close()\n    else:\n         node.warn(\"API - Cannot fetch min_timestamp, device_id not found.\")\n\n    # Store the minimum timestamp in the results (even if None)\n    # Ensure device_info exists if cost fetch was removed\n    if \"device_info\" not in results: results[\"device_info\"] = {}\n    results[\"device_info\"][\"min_timestamp_iso\"] = min_timestamp_iso\n    # --- End Min Timestamp Fetch ---\n    \n    node.log(f\"API - Stored in results['device_info']: {results.get('device_info')}\")\n\n\n    # --- 2. Preprocessing for ML Model (7 Features) ---\n    try:\n        node.log(\"API - Starting ML Preprocessing for 7 features...\")\n        df_processed = pd.DataFrame(index=df.index)\n\n        missing_inputs = [f for f in expected_model_features if f not in df.columns]\n        if missing_inputs:\n             node.warn(f\"API - Input data missing required feature columns: {missing_inputs}. Adding as NaN before processing.\")\n             for f in missing_inputs: df[f] = np.nan\n\n        # 1. Clean z_height_mm\n        if 'z_height_mm' in df.columns and 'z_height_mm' in expected_model_features:\n            neg_mask = df['z_height_mm'] < 0\n            if neg_mask.sum() > 0: df.loc[neg_mask, 'z_height_mm'] = IMPUTE_VALUE_WHEN_API_MISSING\n\n        # 2. Process 'is_printing'\n        if 'is_printing' in expected_model_features:\n             if 'is_printing' in df.columns: df_processed['is_printing'] = pd.to_numeric(df['is_printing'], errors='coerce').fillna(IMPUTE_VALUE_WHEN_API_MISSING).astype(int)\n             else: df_processed['is_printing'] = IMPUTE_VALUE_WHEN_API_MISSING\n\n        # 3. Process and Impute other features\n        features_to_process = ['plug_temp_c', 'nozzle_temp_actual', 'bed_temp_actual', 'z_height_mm', 'nozzle_temp_target', 'bed_temp_target']\n        for col in features_to_process:\n            if col in expected_model_features:\n                 if col in df.columns: df_processed[col] = df[col].fillna(IMPUTE_VALUE_WHEN_API_MISSING)\n                 else: df_processed[col] = IMPUTE_VALUE_WHEN_API_MISSING\n\n        # 4. Final checks on df_processed\n        final_missing = [f for f in expected_model_features if f not in df_processed.columns]\n        if final_missing: raise ValueError(f\"Features missing after processing: {final_missing}\")\n        df_processed = df_processed[expected_model_features]\n        if df_processed.isnull().values.any(): node.error(\"API - CRITICAL: NaNs found after preprocessing! Filling with 0.\"); df_processed = df_processed.fillna(0)\n\n        node.log(f\"API - ML Preprocessing complete. Processed DF shape: {df_processed.shape}\")\n\n    except Exception as e: node.error(f\"API - Error during ML preprocessing: {e}\\\\n{traceback.format_exc()}\"); results[\"ml_prediction\"][\"error\"] = f\"ML Preprocessing failed: {str(e)}\"; results[\"ml_feature_importance\"][\"error\"] = \"ML Preprocessing failed\"\n\n    # --- 3. ML Prediction & Feature Importance ---\n    if essential_components_missing or results[\"ml_prediction\"][\"error\"]:\n        err_msg = results[\"ml_prediction\"][\"error\"] or \"ML components missing.\"\n        results[\"ml_prediction\"][\"error\"] = err_msg; results[\"ml_feature_importance\"][\"error\"] = err_msg; node.error(f\"API - Skipping ML prediction/FI: {err_msg}\")\n    elif df_processed is None or df_processed.empty:\n        err_msg = \"Processed data missing/empty.\"; results[\"ml_prediction\"][\"error\"] = err_msg; results[\"ml_feature_importance\"][\"error\"] = err_msg; node.error(\"API - \" + err_msg)\n    else:\n        try:\n            if list(df_processed.columns) != expected_scaler_cols: node.warn(f\"API - Reordering columns for scaler.\"); df_processed = df_processed[expected_scaler_cols]\n            X_predict = df_processed\n            if X_predict.isnull().values.any(): raise ValueError(\"NaNs detected before scaling.\")\n\n            node.log(f\"API - Scaling {X_predict.shape[0]} rows...\")\n            X_predict_scaled = loaded_scaler.transform(X_predict)\n            node.log(f\"API - Scaled. Predicting using model features: {expected_model_features}\")\n            raw_predictions = loaded_model.predict(X_predict_scaled)\n            node.log(f\"API - Raw predictions generated, count: {len(raw_predictions)}\")\n\n            # --- Post-Processing Rule for Idle State ---\n            node.log(\"API - Applying post-processing rule for idle state...\")\n            predictions = raw_predictions # Start with raw predictions\n            idle_check_cols = ['is_printing', 'nozzle_temp_actual', 'bed_temp_actual', 'nozzle_temp_target', 'bed_temp_target']\n            if all(col in df_processed.columns for col in idle_check_cols):\n                 idle_condition_mask = (df_processed['is_printing'] == 0) & \\\n                                       (df_processed['nozzle_temp_actual'] == IMPUTE_VALUE_WHEN_API_MISSING) & \\\n                                       (df_processed['bed_temp_actual'] == IMPUTE_VALUE_WHEN_API_MISSING) & \\\n                                       (df_processed['nozzle_temp_target'] == IMPUTE_VALUE_WHEN_API_MISSING) & \\\n                                       (df_processed['bed_temp_target'] == IMPUTE_VALUE_WHEN_API_MISSING)\n                 predictions = np.where(idle_condition_mask, 0.0, raw_predictions)\n                 num_zeroed = np.sum(idle_condition_mask)\n                 node.log(f\"API - Applied post-processing rule. Zeroed {num_zeroed} predictions based on idle state conditions.\")\n            else: node.warn(f\"API - Post-processing skipped: Missing columns needed for idle check.\")\n\n            predictions = np.maximum(0.0, predictions) # Ensure no negative predictions remain\n            # --- End Post-Processing Rule ---\n\n            results[\"ml_prediction\"][\"timestamps\"] = df.index.strftime('%Y-%m-%dT%H:%M:%S.%fZ').tolist()\n            results[\"ml_prediction\"][\"actual\"] = df[TARGET_COLUMN].tolist()\n            results[\"ml_prediction\"][\"predicted\"] = predictions.tolist() # Use final predictions\n            results[\"ml_prediction\"][\"error\"] = None\n\n            # --- Feature Importance ---\n            if hasattr(loaded_model, 'feature_importances_'):\n                try:\n                    importances = loaded_model.feature_importances_\n                    fi_dict = dict(zip(expected_model_features, importances))\n                    results[\"ml_feature_importance\"] = fi_dict\n                    # node.log(f\"API - Calculated Feature Importances: {fi_dict}\") # Can be verbose\n                    # Find Top Drivers\n                    operational_fi = { k: v for k, v in fi_dict.items() }\n                    if operational_fi:\n                        sorted_operational_fi = sorted(operational_fi.items(), key=lambda item: item[1], reverse=True)\n                        top_drivers = [item[0] for item in sorted_operational_fi[:3]]\n                        results[\"ml_top_drivers\"] = top_drivers\n                        node.log(f\"API - Top ML Drivers: {top_drivers}\")\n                except Exception as fi_e: node.error(f\"API - Error processing FI: {fi_e}\"); results[\"ml_feature_importance\"] = {\"error\": f\"FI Error: {str(fi_e)}\"}\n            else: results[\"ml_feature_importance\"] = {\"message\": \"FI not available.\"}; node.log(\"API - FI N/A.\")\n\n            del X_predict, X_predict_scaled, predictions, raw_predictions; gc.collect()\n\n        except ValueError as ve: node.error(f\"API - ML Value Error: {ve}\"); results[\"ml_prediction\"][\"error\"] = f\"ML Fail: {str(ve)}\"; results[\"ml_feature_importance\"][\"error\"] = \"Pred fail\"\n        except Exception as e: node.error(f\"API - ML Error: {e}\\\\n{traceback.format_exc()}\"); results[\"ml_prediction\"][\"error\"] = f\"ML Fail: {str(e)}\"; results[\"ml_feature_importance\"][\"error\"] = \"Pred fail\"\n\n    # --- 4. New Calculations ---\n    try:\n        node.log(\"API - Starting New Calculations (kWh, Avg Power, Phases)...\")\n        if not isinstance(df.index, pd.DatetimeIndex): df = df.set_index('timestamp', drop=False).sort_index()\n        if TARGET_COLUMN not in df.columns: raise ValueError(f\"Target column '{TARGET_COLUMN}' missing.\")\n        time_diff_sec = df.index.to_series().diff().dt.total_seconds().fillna(0)\n        time_elapsed_sec = (df.index - df.index.min()).total_seconds()\n        power_for_trapz = df[TARGET_COLUMN].fillna(0).values\n        if len(time_elapsed_sec) > 1: total_joules = np.trapz(y=power_for_trapz, x=time_elapsed_sec); total_kwh = total_joules / (3600 * 1000); results[\"new_metrics\"][\"total_kwh\"] = round(total_kwh, 4)\n        else: results[\"new_metrics\"][\"total_kwh\"] = 0.0; total_kwh = 0.0\n\n        # --- Cost Calculation Removed ---\n\n        results[\"new_metrics\"][\"avg_power_overall\"] = round(df[TARGET_COLUMN].mean(), 2)\n        df_active = df[df[TARGET_COLUMN] > ACTIVE_POWER_THRESHOLD]\n        results[\"new_metrics\"][\"avg_power_active\"] = round(df_active[TARGET_COLUMN].mean(), 2) if not df_active.empty else 0.0\n\n        df['phase'] = 'Idle'; df.loc[df[TARGET_COLUMN] > ACTIVE_POWER_THRESHOLD, 'phase'] = 'Active (Other)'\n        if 'is_printing' in df.columns: df.loc[(df['is_printing'] == 1) & (df[TARGET_COLUMN] > ACTIVE_POWER_THRESHOLD), 'phase'] = 'Printing'\n        phase_analysis = {}; phase_energies_kwh = {}; total_duration_sec = time_diff_sec.sum()\n        for phase_name, phase_df in df.groupby('phase'):\n             phase_duration_sec = time_diff_sec[phase_df.index].sum()\n             phase_time_elapsed = (phase_df.index - df.index.min()).total_seconds(); phase_power = phase_df[TARGET_COLUMN].fillna(0).values; phase_joules = 0.0\n             if len(phase_time_elapsed) > 1: sorted_indices = np.argsort(phase_time_elapsed); phase_joules = np.trapz(y=phase_power[sorted_indices], x=phase_time_elapsed[sorted_indices])\n             phase_kwh = phase_joules / (3600 * 1000); phase_energies_kwh[phase_name] = phase_kwh\n             phase_analysis[phase_name] = { \"duration_minutes\": round(phase_duration_sec / 60, 1), \"duration_percent\": round((phase_duration_sec / total_duration_sec * 100) if total_duration_sec > 0 else 0, 1), \"energy_kwh\": round(phase_kwh, 4), \"avg_power\": round(phase_df[TARGET_COLUMN].mean(), 1) if not phase_df.empty else 0 }\n        total_phase_energy_kwh = sum(phase_energies_kwh.values())\n        for phase_name in phase_analysis: phase_kwh = phase_energies_kwh.get(phase_name, 0); phase_analysis[phase_name][\"energy_percent\"] = round((phase_kwh / total_phase_energy_kwh * 100) if total_phase_energy_kwh > 0 else 0, 1)\n        results[\"new_metrics\"][\"phase_analysis\"] = phase_analysis; node.log(f\"API - Phase Analysis Results: {phase_analysis}\")\n\n    except Exception as e: node.error(f\"API - Error during new calculations: {e}\\\\n{traceback.format_exc()}\"); results[\"new_metrics\"][\"error\"] = f\"Failed: {str(e)}\"\n\n    # --- 5. Correlation & 6. Regression Analysis ---\n    # (Logic remains the same, uses original df_active & selected_driver_keys)\n    if df_active is not None and not df_active.empty:\n        node.log(f\"API - Starting Correlation on ACTIVE data for selected drivers: {selected_driver_keys}\")\n        # ... (Existing Correlation logic - needs df_active) ...\n        try:\n            valid_drivers_for_corr = [key for key in selected_driver_keys if key in df_active.columns and key != TARGET_COLUMN]\n            if valid_drivers_for_corr:\n                correlation_results_dict = {}\n                for driver_key in valid_drivers_for_corr:\n                    temp_df = df_active[[TARGET_COLUMN, driver_key]].copy().dropna()\n                    num_pairs = len(temp_df)\n                    if num_pairs > 1: # Check if enough pairs first\n                        target_std = temp_df[TARGET_COLUMN].std(); driver_std = temp_df[driver_key].std()\n                        if target_std == 0 or driver_std == 0: correlation_results_dict[driver_key] = \"N/A (No Variation)\"\n                        else: correlation_matrix = temp_df.corr(); corr_value = correlation_matrix.loc[TARGET_COLUMN, driver_key]; correlation_results_dict[driver_key] = corr_value if not pd.isna(corr_value) else \"N/A (Calc NaN)\"\n                    else: correlation_results_dict[driver_key] = \"N/A (Insufficient Data)\"\n                results[\"correlation\"] = correlation_results_dict\n            else: results[\"correlation\"] = {\"message\": \"No valid drivers selected/available in active data.\"}\n        except Exception as e: node.error(f\"API - Correlation Error: {e}\\\\n{traceback.format_exc()}\"); results[\"correlation\"] = {\"error\": f\"Corr error: {str(e)}\"}\n    else: results[\"correlation\"] = {\"message\": f\"No activity found (Power > {ACTIVE_POWER_THRESHOLD}W) for Correlation\"}\n\n    if df_active is not None and not df_active.empty:\n        node.log(f\"API - Starting Regression on ACTIVE data for selected drivers: {selected_driver_keys}\")\n        # ... (Existing Regression logic - needs df_active) ...\n        try:\n            valid_drivers_for_regr = [key for key in selected_driver_keys if key in df_active.columns and key != TARGET_COLUMN]\n            if valid_drivers_for_regr:\n                regr_df = df_active[[TARGET_COLUMN] + valid_drivers_for_regr].copy().dropna()\n                if len(regr_df) >= len(valid_drivers_for_regr) + 2:\n                    X_regr = regr_df[valid_drivers_for_regr]; y_regr = regr_df[TARGET_COLUMN]\n                    regr_model = LinearRegression(); regr_model.fit(X_regr, y_regr)\n                    results[\"regression\"] = { \"drivers\": valid_drivers_for_regr, \"coefficients\": dict(zip(valid_drivers_for_regr, np.round(regr_model.coef_, 3))), \"intercept\": round(regr_model.intercept_, 3), \"r_squared\": round(regr_model.score(X_regr, y_regr), 3), \"n_samples\": len(regr_df) }\n                    del X_regr, y_regr, regr_model, regr_df\n                else: results[\"regression\"] = {\"message\": f\"Not enough valid points after NaNs dropped ({len(regr_df)} points).\"}\n            else: results[\"regression\"] = {\"message\": \"No valid drivers selected/available for Regression.\"}\n        except Exception as e: node.error(f\"API - Regression Error: {e}\\\\n{traceback.format_exc()}\"); results[\"regression\"] = {\"error\": f\"Regr error: {str(e)}\"}\n    else: results[\"regression\"] = {\"message\": f\"No activity found (Power > {ACTIVE_POWER_THRESHOLD}W) for Regression\"}\n\n    # --- 7. Generate Final Summary ---\n    total_points = len(df) if df is not None else 'unknown'; active_points = len(df_active) if df_active is not None else 0\n    summary_parts = [f\"Analysis complete for {total_points} total data points ({active_points} considered active with Power > {ACTIVE_POWER_THRESHOLD}W).\"]\n    if results[\"new_metrics\"].get(\"total_kwh\") is not None: summary_parts.append(f\"Energy: {results['new_metrics']['total_kwh']:.3f} kWh.\")\n    if not results[\"ml_prediction\"].get(\"error\"): pred_count = len(results['ml_prediction'].get('predicted',[])); summary_parts.append(f\"ML Pred({pred_count} pts).\")\n    else: summary_parts.append(\"ML Pred failed.\")\n    if not results[\"ml_feature_importance\"].get(\"error\") and not results[\"ml_feature_importance\"].get(\"message\"): summary_parts.append(\"FI calculated.\")\n    if results[\"correlation\"] and not results[\"correlation\"].get(\"error\") and not results[\"correlation\"].get(\"message\"): num_corr_drivers = len([k for k in results[\"correlation\"] if not str(results[\"correlation\"].get(k,'N/A')).startswith('N/A')]);\n    if num_corr_drivers > 0: summary_parts.append(f\"Corr({num_corr_drivers} drivers).\")\n    if results[\"regression\"] and results[\"regression\"].get(\"r_squared\") is not None: summary_parts.append(f\"Regr R²:{results['regression']['r_squared']:.2f}.\")\n    if results.get(\"error\"): summary_parts.append(f\"ERR:{results['error']}\")\n    results[\"summary\"] = \" \".join(summary_parts)\n\n    node.log(\"API - perform_analysis function finished.\")\n    if 'df' in locals(): del df;\n    if 'df_active' in locals(): del df_active;\n    if 'df_processed' in locals(): del df_processed;\n    gc.collect()\n    \n    node.log(f\"API - Returning from perform_analysis. results['device_info'] is: {results.get('device_info')}\")\n\n\n    return results\n# --- End of perform_analysis Function Definition ---\n\n\n# === Main Execution Block (Called by Node-RED) ===\nif essential_components_missing:\n    final_response_results = { \"summary\": \"Analysis failed: Critical model components could not be loaded.\", \"error\": \"Model component loading error.\", # ... other error fields ...\n                              \"ml_evaluation_metrics\": evaluation_metrics }\n    predictions_to_store = []\nelse:\n    input_data = msg.get('payload', [])\n    selected_keys = msg.get('analysisInputs', {}).get('selectedDriverKeys', [])\n    analysis_results = perform_analysis( input_data, selected_keys, model, scaler, SCALER_COLUMNS, MODEL_FEATURES )\n    \n    node.log(f\"API - analysis_results['device_info'] after function call: {analysis_results.get('device_info')}\")\n    \n    \n    predictions_to_store = []\n    ml_pred_results = analysis_results.get(\"ml_prediction\", {})\n    if isinstance(ml_pred_results, dict) and not ml_pred_results.get(\"error\"):\n        timestamps = ml_pred_results.get(\"timestamps\", []); predicted_values = ml_pred_results.get(\"predicted\", [])\n        if isinstance(timestamps, list) and isinstance(predicted_values, list) and len(timestamps) == len(predicted_values):\n            node.log(f\"API - Preparing {len(timestamps)} predictions for storage.\")\n            device_id = msg.get('analysisInputs', {}).get('deviceId', 'unknown'); model_version = evaluation_metrics.get('model_type', 'unknown_model')\n            for i in range(len(timestamps)):\n                 pred_val = predicted_values[i]\n                 if isinstance(pred_val, (int, float)) and not np.isnan(pred_val): predictions_to_store.append({ \"timestamp\": timestamps[i], \"device_id\": device_id, \"predicted_power_watts\": float(pred_val), \"model_version\": model_version })\n                 else: node.warn(f\"API - Skipping prediction storage index {i}, invalid value: {pred_val}\")\n        else: node.error(f\"Timestamp/prediction counts mismatch or not lists.\")\n    else: node.warn(f\"ML Prediction results invalid/errored. Skipping storage.\")\n\n    # Prepare final results, converting numpy types\n    final_response_results = {\n        \"summary\": analysis_results.get(\"summary\", \"Summary unavailable.\"),\n        \"new_metrics\": analysis_results.get(\"new_metrics\", {\"error\": \"Metrics unavailable\"}),\n        \"device_info\": analysis_results.get(\"device_info\", {}),\n        \"correlation\": analysis_results.get(\"correlation\", {}),\n        \"correlation\": analysis_results.get(\"correlation\", {}),\n        \"regression\": analysis_results.get(\"regression\", {}),\n        \"ml_evaluation_metrics\": evaluation_metrics,\n        \"ml_prediction_summary\": analysis_results.get(\"ml_prediction\",{}).get(\"error\") or f\"{len(predictions_to_store)} points processed.\",\n        \"ml_feature_importance\": analysis_results.get(\"ml_feature_importance\", {}),\n        \"ml_top_drivers\": analysis_results.get(\"ml_top_drivers\", [])\n    }\n    if analysis_results.get(\"error\"): final_response_results[\"error\"] = analysis_results.get(\"error\")\n\n    # --- Convert NumPy types to standard Python types for JSON ---\n    def convert_numpy_types(obj):\n        if isinstance(obj, dict):\n            return {k: convert_numpy_types(v) for k, v in obj.items()}\n        elif isinstance(obj, list):\n            return [convert_numpy_types(i) for i in obj]\n        # --- Use np.floating and np.integer for broader compatibility ---\n        elif isinstance(obj, np.floating):\n            if np.isnan(obj): return None\n            if np.isinf(obj): return None # Or 'Infinity' string\n            return float(obj)\n        elif isinstance(obj, np.integer):\n            return int(obj)\n        # --- End NumPy specific types ---\n        elif isinstance(obj, (np.ndarray,)): # Handle arrays\n             return convert_numpy_types(obj.tolist())\n        elif isinstance(obj, np.bool_):\n             return bool(obj)\n        elif pd.isna(obj): # Handle Pandas NaT or other nulls\n             return None\n        return obj\n\n    final_response_results = convert_numpy_types(final_response_results)\n    # --- END TYPE CONVERSION ---\n\n# --- Set Node-RED message outputs ---\nresponse_payload = final_response_results; predictions_list = predictions_to_store\nkeys_to_keep = ['analysisInputs', '_msgid']; original_msg_keys = list(msg.keys())\nfor key in original_msg_keys:\n     if key not in keys_to_keep: del msg[key]\nmsg['payload'] = response_payload; msg['predictions'] = predictions_list\n\n# Logging before return\nnode.log(f\"API - Final Python Output Payload Type: {type(msg['payload'])}\")\nif isinstance(msg['payload'], dict): node.log(f\"API - Final Python Output Keys: {list(msg['payload'].keys())}\")\n\n# Cleanup and Return\nif 'analysis_results' in locals(): del analysis_results\nif 'final_response_results' in locals(): del final_response_results\nif 'input_data' in locals(): del input_data; gc.collect()\nreturn msg",
        "outputs": 1,
        "x": 820,
        "y": 220,
        "wires": [
            [
                "fc3e800f7322b583"
            ]
        ],
        "info": "**Purpose:** The main \"brain\" of the analysis. It takes the large dataset from the database and performs all the statistical and machine learning calculations requested by the user.\r\n\r\n**Logic:**\r\n1.  **Prediction:** Runs the pre-trained ML model over the entire dataset to generate \"Predicted vs. Actual\" power values.\r\n2.  **Metrics Calculation:** Computes key metrics like Total kWh, Average Power, and performs a detailed phase analysis (time/energy spent Printing vs. Idle vs. Active).\r\n3.  **Statistical Analysis:** Calculates the correlation and a simple linear regression between the user-selected \"drivers\" (e.g., nozzle temperature) and the power consumption.\r\n4.  **Feature Importance:** Extracts the feature importances from the ML model to identify the top three most influential factors.\r\n\r\n**Outputs:**\r\n- **Output 1 (`msg.payload`):** A large JSON object containing all the calculated results, ready to be sent to the frontend.\r\n- **Output 2 (`msg.predictions`):** An array of all the predictions made, which is sent to a separate branch to be saved in the database."
    },
    {
        "id": "3592a09331fdbdbd",
        "type": "function",
        "z": "ac9683af7e82fb53",
        "g": "4080a0de8969fa04",
        "name": "Format API Response",
        "func": "// Node-RED Function Node: Format API Response\n// --- Updated: 2024-07-XX (Handle 'all' time range for Grafana, include new metrics/drivers) ---\n\n// --- Add this log at the START ---\nnode.log(`Format Response - Received msg.payload type: ${typeof msg.payload}`);\nif (typeof msg.payload === 'object' && msg.payload !== null) {\n    node.log(`Format Response - Received payload keys: ${Object.keys(msg.payload)}`);\n    const receivedMetrics = msg.payload.new_metrics;\n    node.log(`Format Response - Received new_metrics type: ${typeof receivedMetrics}`);\n    // Limit stringify length for potentially large phase data\n    // node.log(`Format Response - Received new_metrics content: ${JSON.stringify(receivedMetrics)?.substring(0, 500)}...`);\n}\n// --- End Log ---\n\n// msg.payload contains the analysis results from Python node\n// msg.analysisInputs contains deviceId, startTime, selectedDriverKeys\nconst results = msg.payload; // These are the results calculated by Python\nconst analysisInputs = msg.analysisInputs; // These are the original inputs to the analysis\n\n// Initialize default payload for error cases or missing inputs\nlet responsePayload = { success: false, error: \"Unknown error occurred before formatting.\" };\nmsg.statusCode = 500; // Default to Internal Server Error\n\n// Check if analysis seems to have run and required inputs are available\nconst deviceId = analysisInputs?.deviceId;\nconst startTime = analysisInputs?.startTime; // Can be ISO string or '1970-01-01T00:00:00Z'\n\nif (results && typeof results === 'object' && !results.error && deviceId && startTime) {\n    // Proceed if Python didn't return a top-level error and we have device/start info\n    try {\n        node.log(`Format Response: Formatting for device: ${deviceId}, startTime marker: ${startTime}`);\n\n        // --- Generate Grafana Panel URLs ---\n        const grafanaBaseUrl = \"https://lauds.intel50001.com\"; // Your Grafana public URL\n        const dashboardUID = \"dej62anu0b3swf\";             // Your Dashboard UID\n        const dashboardName = \"prusa\";                     // Your Dashboard Name/Slug\n\n        // --- Determine Correct Panel ID ---\n        let panel1Id = \"1\"; // Default Panel ID for Actual vs Predicted\n        if (deviceId === 'PrusaMK4-1') {\n            panel1Id = \"3\";\n            node.log(`Format Response: Using Panel ID ${panel1Id} for PrusaMK4-1`);\n        } else {\n            node.log(`Format Response: Using default Panel ID ${panel1Id} for ${deviceId}`);\n        }\n\n        // --- Determine Grafana 'from' timestamp ---\n        let fromMs = null; // Use null to indicate invalid/missing time\n        const toMs = new Date().getTime(); // Use current time for 'to'\n\n        // Get the minimum timestamp fetched by Python (might be null)\n        const minTimestampIso = results?.device_info?.min_timestamp_iso; // Use optional chaining\n\n        if (startTime) { // Check if startTime marker exists\n            if (startTime === '1970-01-01T00:00:00Z') {\n                // Handle the 'all time' marker\n                if (minTimestampIso) { // If we successfully fetched the actual min timestamp\n                    const minDate = new Date(minTimestampIso);\n                    if (!isNaN(minDate)) {\n                        fromMs = minDate.getTime();\n                        node.log(`Format Response: 'All Time' range - using actual min_timestamp, fromMs: ${fromMs}`);\n                    } else {\n                        node.warn(`Format Response: Could not parse min_timestamp_iso: ${minTimestampIso}. Defaulting 'from' to epoch.`);\n                        fromMs = 0; // Fallback to epoch if min ts parsing fails\n                    }\n                } else {\n                    // Fallback if min_timestamp couldn't be fetched (e.g., no data for device)\n                    node.warn(\"Format Response: 'All Time' range - min_timestamp not available. Defaulting 'from' to epoch.\");\n                    fromMs = 0; // Default to epoch start if no actual min timestamp found\n                }\n            } else {\n                // Handle specific time ranges (1h, 6h, etc.)\n                const startDate = new Date(startTime);\n                if (!isNaN(startDate)) {\n                    fromMs = startDate.getTime();\n                    // node.log(`Format Response: Specific startTime parsed: ${startTime}, fromMs: ${fromMs}`); // Optional log\n                } else {\n                    node.error(`Format Response: Invalid non-'all' startTime format: ${startTime}.`);\n                    // fromMs remains null\n                }\n            }\n        } else {\n            // startTime itself was missing\n            node.error(`Format Response: Missing startTime in analysisInputs.`);\n            // fromMs remains null\n        }\n    // --- END Determine Grafana 'from' timestamp ---\n\n    // --- Construct URLs ONLY if fromMs is valid (not null) ---\n\n        let urlPanel1 = null;\n        if (fromMs !== null) {\n            urlPanel1 = `${grafanaBaseUrl}/d-solo/${dashboardUID}/${dashboardName}?orgId=1&theme=light&panelId=${panel1Id}&from=${fromMs}&to=${toMs}&var-deviceId=${encodeURIComponent(deviceId)}`;\n            node.log(`Format Response: Generated Panel 1 URL: ${urlPanel1}`);\n        } else {\n            node.log(\"Format Response: Skipping Grafana URL generation due to invalid 'from' time.\");\n        }\n\n        // --- Prepare final success payload ---\n        // Ensure ALL expected keys from the Python output (results) are included here\n        responsePayload = {\n            success: true,\n            error: null, // No top-level error from Python node\n            results: {\n                summary: results.summary || \"Summary unavailable.\",\n                new_metrics: results.new_metrics || { \"error\": \"Metrics missing from backend\" }, // Include new metrics\n                correlation: results.correlation || {},\n                regression: results.regression || {},\n                ml_prediction_summary: results.ml_prediction_summary || \"Prediction status unknown.\",\n                ml_evaluation_metrics: results.ml_evaluation_metrics || { status: \"Metrics could not be loaded.\" }, // Use correct key\n                ml_feature_importance: results.ml_feature_importance || {},\n                ml_top_drivers: results.ml_top_drivers || [], // Include top drivers\n                grafanaUrls: {\n                    panel1: urlPanel1 // Pass the potentially null URL\n                    // panel2: urlPanel2 // Add panel 2 URL here if used\n                }\n            }\n        };\n        msg.statusCode = 200; // OK\n\n    } catch (e) {\n        // Catch errors during the formatting process itself\n        node.error(`Format Response: Error during formatting: ${e}\\n${e.stack}`, msg);\n        responsePayload = { success: false, error: `Internal formatting error: ${e.message}` };\n        msg.statusCode = 500;\n    }\n\n} else {\n    // Handle cases where Python node failed or required inputs were missing before formatting\n    let errorReason = results?.error || \"Analysis failed or inputs missing.\";\n    if (!deviceId) errorReason += \" Missing deviceId.\";\n    if (!startTime) errorReason += \" Missing startTime.\";\n    node.error(`Format Response: Pre-check failed. Reason: ${errorReason}`, msg);\n    responsePayload = { success: false, error: errorReason }; // Use more specific error\n    // msg.statusCode remains 500 (default)\n}\n\n// Set the final payload to be sent back to the UI\nmsg.payload = responsePayload;\n\n// Clean up intermediate properties from the message object\ndelete msg.analysisInputs;\ndelete msg.predictions;\ndelete msg.topic;\ndelete msg.params;\n// delete msg.dbParams; // Usually safe to delete\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 380,
        "wires": [
            [
                "2dc8f0c00c0dd79f"
            ]
        ],
        "info": "**Purpose:** The final step before sending the data back to the user. It formats the raw results from the Python script into the final, clean JSON structure that the `analysis_page.html` frontend expects.\r\n**Logic:** It builds the final response object, including the summary text, metrics, correlation results, and dynamically generated Grafana URLs."
    },
    {
        "id": "2dc8f0c00c0dd79f",
        "type": "http response",
        "z": "ac9683af7e82fb53",
        "g": "4080a0de8969fa04",
        "name": "Send API Response",
        "statusCode": "",
        "headers": {},
        "x": 1900,
        "y": 500,
        "wires": [],
        "info": "**Purpose:** Sends the final, formatted JSON response back to the `analysis_page.html` frontend.\r\n**Logic:** Sets the HTTP status code to `200 OK` and sends the `msg.payload`."
    },
    {
        "id": "de086ea3e0127637",
        "type": "http in",
        "z": "ac9683af7e82fb53",
        "name": "GET /api/devices",
        "url": "/api/devices",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1520,
        "y": 40,
        "wires": [
            [
                "27a2e876613b93a9"
            ]
        ]
    },
    {
        "id": "27a2e876613b93a9",
        "type": "postgresql",
        "z": "ac9683af7e82fb53",
        "name": "Get Devices for UI",
        "query": "-- Fetch devices formatted for the dropdown\nSELECT friendly_name AS label, device_id AS value\nFROM devices\nORDER BY friendly_name;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1570,
        "y": 100,
        "wires": [
            [
                "61eb43d26e318c36"
            ]
        ]
    },
    {
        "id": "61eb43d26e318c36",
        "type": "http response",
        "z": "ac9683af7e82fb53",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1650,
        "y": 160,
        "wires": []
    },
    {
        "id": "3dad15f0c8d11ced",
        "type": "postgresql",
        "z": "ac9683af7e82fb53",
        "g": "4080a0de8969fa04",
        "name": "Insert Prediction",
        "query": "INSERT INTO ml_predictions (\n    timestamp, device_id, predicted_power_watts, model_version\n)\nSELECT\n    ts, -- Alias from UNNEST\n    dev, -- Alias from UNNEST\n    pwr, -- Alias from UNNEST\n    ver  -- Alias from UNNEST\nFROM UNNEST(\n    $1::TIMESTAMPTZ[], -- Parameter 1: Array of timestamps\n    $2::TEXT[],        -- Parameter 2: Array of device IDs\n    $3::FLOAT[],       -- Parameter 3: Array of predictions\n    $4::TEXT[]         -- Parameter 4: Array of model versions\n) AS t(ts, dev, pwr, ver) -- Define aliases for columns from UNNEST\nON CONFLICT DO NOTHING;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1260,
        "y": 460,
        "wires": [
            []
        ],
        "info": "**Purpose:** Saves the historical predictions generated during the analysis into the `ml_predictions` table. This allows the data to be used later without re-running the analysis.\r\n**Logic:** Uses the `UNNEST` function to efficiently insert a large number of rows in a single query."
    },
    {
        "id": "fc3e800f7322b583",
        "type": "function",
        "z": "ac9683af7e82fb53",
        "g": "4080a0de8969fa04",
        "name": "Prepare Batched Params for UNNEST",
        "func": "// msg.payload = main analysis results\n// msg.predictions = full array of prediction objects {ts, dev_id, pred_pwr, model_ver}\n\nconst predictions = msg.predictions;\nconst batchSize = 100; // Process in chunks within this function\nlet allParams = []; // Array to hold all parameters for potentially multiple DB calls\n\nif (!Array.isArray(predictions) || predictions.length === 0) {\n    node.warn(\"No predictions array found or empty, skipping insert preparation.\");\n    // Send the original payload along the main path, but stop this insert path\n    // To do this, we need two outputs from this function node.\n    // Output 1: Main payload (passthrough)\n    // Output 2: Database parameters (or null if no predictions)\n    return [msg, null]; // Send original msg out output 1, null out output 2\n}\n\nnode.log(`Preparing ${predictions.length} predictions for batched UNNEST insert...`);\n\nlet currentBatchParams = {\n    timestamps: [],\n    device_ids: [],\n    predicted_watts: [],\n    model_versions: []\n};\nlet batchCount = 0;\n\nfor (const pred of predictions) {\n    // Basic validation for each object\n    if (pred && pred.timestamp && pred.device_id && typeof pred.predicted_power_watts === 'number' && !isNaN(pred.predicted_power_watts) && pred.model_version) {\n        currentBatchParams.timestamps.push(pred.timestamp);\n        currentBatchParams.device_ids.push(pred.device_id);\n        currentBatchParams.predicted_watts.push(pred.predicted_power_watts);\n        currentBatchParams.model_versions.push(pred.model_version);\n        batchCount++;\n\n        // If batch size reached, prepare parameters for this batch\n        if (batchCount >= batchSize) {\n            // Create parameters array FOR ONE DB CALL for this batch\n            allParams.push({\n                params: [\n                    currentBatchParams.timestamps,\n                    currentBatchParams.device_ids,\n                    currentBatchParams.predicted_watts,\n                    currentBatchParams.model_versions\n                ],\n                // Include _msgid context if needed for debugging, but params is key\n                 _msgid_batch_start: msg._msgid + \"_batch_\" + (allParams.length * batchSize)\n            });\n            // Reset for next batch\n            currentBatchParams = { timestamps: [], device_ids: [], predicted_watts: [], model_versions: [] };\n            batchCount = 0;\n        }\n    } else {\n         node.warn(`Skipping invalid prediction object in batch: ${JSON.stringify(pred)}`);\n    }\n}\n\n// Add any remaining predictions in the last partial batch\nif (batchCount > 0) {\n     allParams.push({\n         params: [\n             currentBatchParams.timestamps,\n             currentBatchParams.device_ids,\n             currentBatchParams.predicted_watts,\n             currentBatchParams.model_versions\n         ],\n          _msgid_batch_start: msg._msgid + \"_batch_\" + (allParams.length * batchSize)\n     });\n}\n\nnode.log(`Prepared ${allParams.length} batches for insert.`);\n\n// --- IMPORTANT ---\n// Keep the original msg.payload for the main response path (Output 1)\n// Create a *new* message object containing the array of parameter batches for the DB path (Output 2)\nlet dbMsg = {\n    payload: allParams, // Array of {params: [...]} objects\n     _msgid: msg._msgid // Can reuse original msgid for this branch\n};\n\n// Output 1: Original message (minus predictions) for the HTTP response path\n// Output 2: New message with batched parameters for the DB insert path\ndelete msg.predictions; // Clean original message\nreturn [ msg, dbMsg ];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 280,
        "wires": [
            [
                "3592a09331fdbdbd"
            ],
            [
                "d69fce717cce3024"
            ]
        ],
        "info": "**Purpose:** Prepares the large array of predictions from the Python script for efficient insertion into the database.\r\n**Logic:** It transforms the array of prediction objects into four separate arrays (timestamps, device_ids, predicted_watts, model_versions), which is the format required for PostgreSQL's efficient `UNNEST` function. It also splits the data into batches to avoid sending a single massive query."
    },
    {
        "id": "d69fce717cce3024",
        "type": "split",
        "z": "ac9683af7e82fb53",
        "g": "4080a0de8969fa04",
        "name": "Split Parameter Batches",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 1270,
        "y": 340,
        "wires": [
            [
                "c998f79c73ca0cda"
            ]
        ]
    },
    {
        "id": "c998f79c73ca0cda",
        "type": "change",
        "z": "ac9683af7e82fb53",
        "g": "4080a0de8969fa04",
        "name": "Set Batch Params",
        "rules": [
            {
                "t": "set",
                "p": "params",
                "pt": "msg",
                "to": "payload.params",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 400,
        "wires": [
            [
                "3dad15f0c8d11ced"
            ]
        ]
    },
    {
        "id": "766af32f4fe6ef26",
        "type": "inject",
        "z": "3248d6a231f4e9d0",
        "g": "97c76169fe166c15",
        "name": "Trigger Predict Every 10s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 160,
        "wires": [
            [
                "fb200dd03d87ca0a"
            ]
        ],
        "info": "**Purpose:** The entry point for the flow. It triggers the entire prediction sequence at a fixed interval.\r\n**Frequency:** Runs every 10 seconds."
    },
    {
        "id": "fb200dd03d87ca0a",
        "type": "postgresql",
        "z": "3248d6a231f4e9d0",
        "g": "97c76169fe166c15",
        "name": "Get Device List for UI",
        "query": "SELECT device_id, api_ip, api_key\nFROM devices\nWHERE api_ip IS NOT NULL AND api_ip <> ''\n  AND api_key IS NOT NULL AND api_key <> '';",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 240,
        "y": 220,
        "wires": [
            [
                "727ae746539a786d"
            ]
        ],
        "info": "**Purpose:** Fetches the list of all devices that are configured to use the local PrusaLink API (i.e., they have an `api_ip` and `api_key`).\r\n**Output:** An array of device objects."
    },
    {
        "id": "727ae746539a786d",
        "type": "split",
        "z": "3248d6a231f4e9d0",
        "g": "97c76169fe166c15",
        "name": "Split Devices",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 230,
        "y": 280,
        "wires": [
            [
                "5e276bfbbd3f9bb6"
            ]
        ],
        "info": "**Purpose:** Takes the array of devices from the previous node and splits it into a sequence of individual messages, one for each device. This allows the rest of the flow to process one printer at a time."
    },
    {
        "id": "5e276bfbbd3f9bb6",
        "type": "function",
        "z": "3248d6a231f4e9d0",
        "g": "9c69214ff198d9d8",
        "name": "Prepare Latest Data Query",
        "func": "// msg.payload contains a single printer object from the split node\n// e.g., { device_id: 'PrusaMK4-1', api_ip: '...', ... }\nconst printerInfo = msg.payload;\nconst deviceId = printerInfo.device_id;\n\nif (!deviceId) {\n    node.error(\"Missing device_id after split\", msg);\n    return null;\n}\n\n// Prepare parameters for the static SQL query in the next node\nmsg.params = [deviceId]; // Parameter $1 will be deviceId\n\n// Pass along device_id for later use when inserting prediction\nmsg.device_id = deviceId;\n\n// Clear unnecessary properties\nmsg.payload = {};\nmsg.topic = \"\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 280,
        "wires": [
            [
                "f3cf04893924fa13"
            ]
        ],
        "info": "**Purpose:** Prepares the `msg` object for the database query.\r\n**Logic:** It takes the `device_id` from the incoming message and places it into `msg.params`, which is the format required by the `postgresql` node."
    },
    {
        "id": "f3cf04893924fa13",
        "type": "postgresql",
        "z": "3248d6a231f4e9d0",
        "g": "9c69214ff198d9d8",
        "name": "Get Latest Data",
        "query": "-- Static Query to get latest data for one device ($1)\nWITH LatestStatus AS (\n    SELECT * FROM printer_status\n    WHERE device_id = $1 -- Use parameter\n    ORDER BY timestamp DESC\n    LIMIT 1\n), LatestEnergy AS (\n    SELECT * FROM energy_data\n    WHERE device_id = $1 -- Use parameter\n    ORDER BY timestamp DESC\n    LIMIT 1\n)\nSELECT\n    COALESCE(ls.timestamp, le.timestamp) as latest_timestamp,\n    $1 as device_id, -- Explicitly select the device_id passed as parameter\n    ls.state_text, ls.is_operational, ls.is_printing, ls.is_paused, ls.is_error,\n    ls.is_busy, ls.is_sd_ready, ls.nozzle_temp_actual, ls.nozzle_temp_target,\n    ls.bed_temp_actual, ls.bed_temp_target, ls.z_height_mm, ls.speed_multiplier_percent,\n    le.voltage, le.current_amps, le.plug_temp_c\nFROM LatestStatus ls\nFULL OUTER JOIN LatestEnergy le ON ls.device_id = le.device_id;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 600,
        "y": 340,
        "wires": [
            [
                "ebffcd036e7af362"
            ]
        ],
        "info": "**Purpose:** Gathers the single most recent sensor reading from both the `printer_status` and `energy_data` tables for the specific device being processed.\r\n**Output:** A single row of combined data containing all the features needed for the model."
    },
    {
        "id": "ebffcd036e7af362",
        "type": "function",
        "z": "3248d6a231f4e9d0",
        "g": "9c69214ff198d9d8",
        "name": "Prepare Features",
        "func": "// msg.payload should be an array containing 0 or 1 row\n// with combined latest status and energy data.\nif (!msg.payload || !Array.isArray(msg.payload) || msg.payload.length === 0) {\n    node.warn(`No recent combined data found for device ${msg.original_payload?.device_id}. Skipping prediction.`);\n    return null; // Stop if no data\n}\n\nconst latestData = msg.payload[0];\n\n// Prepare the feature object required by the Python node\n// This structure MUST match what the Python prediction part expects\n\n// Handle boolean conversion (DB returns 0/1 after our preprocessing)\nconst isPrinting = latestData.is_printing === 1 || latestData.is_printing === true;\n\n// Create the feature object - use null if data is missing\nlet features = {\n    'voltage': latestData.voltage ?? null,\n    'current_amps': latestData.current_amps ?? null,\n    'plug_temp_c': latestData.plug_temp_c ?? null,\n    'is_printing': isPrinting ? 1 : 0, // Ensure 0/1 for model\n    'nozzle_temp_actual': latestData.nozzle_temp_actual ?? null,\n    'bed_temp_actual': latestData.bed_temp_actual ?? null,\n    'z_height_mm': latestData.z_height_mm ?? null,\n    'speed_multiplier_percent': latestData.speed_multiplier_percent ?? null\n     // Add other features if your model uses them\n};\n\n// Store device_id for inserting prediction later\nmsg.device_id = latestData.device_id || msg.original_payload?.device_id;\n// Use latest timestamp from data if available\nmsg.prediction_timestamp = latestData.latest_timestamp || new Date().toISOString();\n\n// Pass ONLY the features object as payload to Python node\nmsg.payload = features;\n\n// Clear unneeded properties\ndelete msg.topic;\ndelete msg.params;\ndelete msg.original_payload;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 400,
        "wires": [
            [
                "3be8ddb37a93844d"
            ]
        ],
        "info": "**Purpose:** Transforms the raw data from the database into the exact JSON format that the Python ML model expects.\r\n**Logic:** It renames keys, handles `null` values, and ensures the structure matches the model's input requirements."
    },
    {
        "id": "3be8ddb37a93844d",
        "type": "python-function",
        "z": "3248d6a231f4e9d0",
        "g": "9c69214ff198d9d8",
        "name": "Generate Prediction",
        "func": "# Node-RED Python Function Node: Generate Prediction (Live Predictor Flow)\n# --- Final Version: XGBoost, 7 Features, Post-processing ---\n\n# --- Imports & Environment ---\nimport sys\nimport os\n# --- Add venv path ---\nvenv_path = '/home/ubuntu/monitor_ml/venv/lib/python3.12/site-packages'\nif venv_path not in sys.path:\n    sys.path.append(venv_path)\n\nimport pandas as pd\nimport numpy as np\nimport joblib\nimport traceback\nimport warnings\n\n# --- Suppress Warnings ---\nwarnings.filterwarnings(\"ignore\", category=UserWarning, message=\"X does not have valid feature names\")\nwarnings.filterwarnings(\"ignore\", category=FutureWarning) # Broader future warning ignore\n\n# --- Configuration ---\nMODEL_DIR = '/home/ubuntu/monitor_ml/models'\nIMPUTE_VALUE_WHEN_API_MISSING = 0\n\n# --- Dynamic Model Selection ---\n# Get deviceId from the input message\ndevice_id = msg.get('device_id', '')\n\n# Default to Prusa model files\nMODEL_FILENAME = 'best_model.joblib'\nSCALER_FILENAME = 'scaler.joblib'\nSCALER_COLS_FILENAME = 'scaler_columns.joblib'\nMODEL_FEATURES_FILENAME = 'model_features.joblib'\nMODEL_TYPE_FOR_LOG = 'Prusa (XGBoost)'\n\n# If it's an Ender 3, switch to the Ender 3 model files\nif 'Ender-3' in device_id:\n    node.log(f\"Predictor - Ender 3 device ({device_id}) selected. Switching models.\")\n    MODEL_FILENAME = 'ender3_randomforest_model.joblib'\n    SCALER_FILENAME = 'ender3_scaler.joblib'\n    SCALER_COLS_FILENAME = 'ender3_scaler_columns.joblib'\n    MODEL_FEATURES_FILENAME = 'ender3_model_features.joblib'\n    MODEL_TYPE_FOR_LOG = 'Ender 3 (RandomForest)'\n\n# No log here to reduce noise in live predictor, unless needed for debugging\n# node.log(f\"Predictor - Using Model Type: {MODEL_TYPE_FOR_LOG}\")\n\n# Build final paths based on the selected filenames\nSCALER_PATH = os.path.join(MODEL_DIR, SCALER_FILENAME)\nMODEL_PATH = os.path.join(MODEL_DIR, MODEL_FILENAME)\nSCALER_COLS_PATH = os.path.join(MODEL_DIR, SCALER_COLS_FILENAME)\nMODEL_FEATURES_PATH = os.path.join(MODEL_DIR, MODEL_FEATURES_FILENAME)\n\n# --- Pre-load Model, Scaler, and Feature Lists ---\n# (Loads the latest artifacts saved by train_model.py)\nscaler = None; model = None; loading_error = None\nSCALER_COLUMNS = None; MODEL_FEATURES = None\nloading_error_details = {}\ntry: scaler = joblib.load(SCALER_PATH); node.log(\"Predictor - Loaded scaler.\")\nexcept Exception as e: loading_error_details[\"scaler\"] = f\"Scaler load error: {str(e)}\"; node.error(f\"Predictor - {loading_error_details['scaler']}\")\ntry: SCALER_COLUMNS = joblib.load(SCALER_COLS_PATH); node.log(f\"Predictor - Loaded scaler columns ({len(SCALER_COLUMNS) if SCALER_COLUMNS else 'None'}).\")\nexcept Exception as e: loading_error_details[\"scaler_cols\"] = f\"Scaler columns load error: {str(e)}\"; node.error(f\"Predictor - {loading_error_details['scaler_cols']}\")\ntry: model = joblib.load(MODEL_PATH); node.log(f\"Predictor - Loaded model from {MODEL_FILENAME}.\")\nexcept Exception as e: loading_error_details[\"model\"] = f\"Model load error: {str(e)}\"; node.error(f\"Predictor - {loading_error_details['model']}\")\ntry: MODEL_FEATURES = joblib.load(MODEL_FEATURES_PATH); node.log(f\"Predictor - Loaded model features ({len(MODEL_FEATURES) if MODEL_FEATURES else 'None'}).\")\nexcept Exception as e: loading_error_details[\"model_features\"] = f\"Model features load error: {str(e)}\"; node.error(f\"Predictor - {loading_error_details['model_features']}\")\n\nessential_components_missing = False\nif scaler is None or SCALER_COLUMNS is None or model is None or MODEL_FEATURES is None:\n    node.error(f\"Predictor - CRITICAL: One or more ML assets failed to load. Errors: {loading_error_details}\")\n    essential_components_missing = True\nloading_error = \"; \".join([f\"{k}: {v}\" for k, v in loading_error_details.items()]) if loading_error_details else None\n\n# === Main Execution Block (Called by Node-RED) ===\noutput_msg = None\n\nif essential_components_missing:\n    node.error(f\"Predictor - Aborting prediction due to essential component load failure: {loading_error}\")\nelse:\n    feature_dict = msg.get('payload', {}) # Input is a dictionary\n    device_id_from_input = msg.get('device_id', 'unknown_live_predictor')\n\n    if not isinstance(feature_dict, dict) or not feature_dict:\n        node.error(f\"Predictor - Input payload not a valid dictionary or empty for {device_id_from_input}.\")\n    else:\n        # node.log(f\"Predictor - Received features for {device_id_from_input}: {feature_dict}\")\n        try:\n            # --- Preprocessing for ML Model (7 Features) ---\n            # Create a single-row DataFrame from the input dictionary\n            # Ensure all expected model features exist as keys, even if value is None\n            input_data_with_all_keys = {f: feature_dict.get(f) for f in MODEL_FEATURES}\n            predict_df_processed = pd.DataFrame([input_data_with_all_keys], index=[0]) # Use index 0\n\n            # 1. Clean z_height_mm\n            if 'z_height_mm' in predict_df_processed.columns:\n                # Use .loc to modify the DataFrame slice correctly\n                predict_df_processed.loc[0, 'z_height_mm'] = pd.to_numeric(predict_df_processed.loc[0, 'z_height_mm'], errors='coerce')\n                if pd.notna(predict_df_processed.loc[0, 'z_height_mm']) and predict_df_processed.loc[0, 'z_height_mm'] < 0:\n                    predict_df_processed.loc[0, 'z_height_mm'] = IMPUTE_VALUE_WHEN_API_MISSING\n\n            # 2. Process 'is_printing'\n            if 'is_printing' in predict_df_processed.columns:\n                 processed_val = pd.to_numeric(predict_df_processed.loc[0, 'is_printing'], errors='coerce')\n                 predict_df_processed.loc[0, 'is_printing'] = int(processed_val) if pd.notna(processed_val) else IMPUTE_VALUE_WHEN_API_MISSING\n            elif 'is_printing' in MODEL_FEATURES: # Should be present now\n                 predict_df_processed['is_printing'] = IMPUTE_VALUE_WHEN_API_MISSING\n\n            # 3. Process and Impute other FINAL_MODEL_FEATURES\n            features_to_process = ['plug_temp_c', 'nozzle_temp_actual', 'bed_temp_actual', 'z_height_mm', 'nozzle_temp_target', 'bed_temp_target']\n            for col in features_to_process:\n                 if col in predict_df_processed.columns:\n                     # Impute NaNs (which includes None from .get() earlier)\n                     if pd.isna(predict_df_processed.loc[0, col]):\n                          predict_df_processed.loc[0, col] = IMPUTE_VALUE_WHEN_API_MISSING\n                 elif col in MODEL_FEATURES: # Expected but somehow still missing\n                      predict_df_processed[col] = IMPUTE_VALUE_WHEN_API_MISSING\n\n            # 4. Final checks and column ordering for scaler\n            missing_scaler_cols = [f for f in SCALER_COLUMNS if f not in predict_df_processed.columns]\n            if missing_scaler_cols:\n                 raise ValueError(f\"Scaler features missing after processing: {missing_scaler_cols}\")\n\n            # Reorder columns to match scaler order before scaling\n            X_predict = predict_df_processed[SCALER_COLUMNS]\n\n            # Final NaN check before scaling\n            if X_predict.isnull().values.any():\n                 nan_cols = X_predict.columns[X_predict.isnull().any()].tolist()\n                 node.error(f\"Predictor - CRITICAL: NaNs found before scaling in {nan_cols}! Filling with 0.\")\n                 X_predict = X_predict.fillna(0)\n\n            # --- Scaling & Prediction ---\n            # node.log(f\"Predictor - Data ready for scaling for {device_id_from_input}: {X_predict.iloc[0].to_dict()}\")\n            X_predict_scaled = scaler.transform(X_predict)\n            raw_prediction = model.predict(X_predict_scaled)[0]\n            # node.log(f\"Predictor - Raw prediction for {device_id_from_input}: {raw_prediction:.4f}\")\n\n            # --- Post-Processing Rule for Idle State ---\n            final_prediction = 0.0 # Default\n            # Check if the conditions for idle are met using the *processed* data\n            try:\n                # Retrieve processed values safely, defaulting to the imputed value if column somehow missing\n                is_printing_val = int(X_predict.get('is_printing', IMPUTE_VALUE_WHEN_API_MISSING).iloc[0])\n                nozzle_actual_val = X_predict.get('nozzle_temp_actual', IMPUTE_VALUE_WHEN_API_MISSING).iloc[0]\n                bed_actual_val = X_predict.get('bed_temp_actual', IMPUTE_VALUE_WHEN_API_MISSING).iloc[0]\n                nozzle_target_val = X_predict.get('nozzle_temp_target', IMPUTE_VALUE_WHEN_API_MISSING).iloc[0]\n                bed_target_val = X_predict.get('bed_temp_target', IMPUTE_VALUE_WHEN_API_MISSING).iloc[0]\n\n                # Check if all relevant conditions indicate idle/off\n                is_idle = (is_printing_val == 0 and\n                           nozzle_actual_val == IMPUTE_VALUE_WHEN_API_MISSING and\n                           bed_actual_val == IMPUTE_VALUE_WHEN_API_MISSING and\n                           nozzle_target_val == IMPUTE_VALUE_WHEN_API_MISSING and\n                           bed_target_val == IMPUTE_VALUE_WHEN_API_MISSING)\n\n                if is_idle:\n                    final_prediction = 0.0\n                    # node.log(f\"Predictor - Post-processing: Setting prediction to 0 for {device_id_from_input} based on idle conditions.\")\n                else:\n                    # Use model prediction, ensuring non-negative\n                    final_prediction = max(0.0, float(raw_prediction) if not np.isnan(raw_prediction) else 0.0)\n                    # node.log(f\"Predictor - Post-processing: Using model prediction {final_prediction:.4f} for {device_id_from_input}.\")\n\n            except Exception as post_proc_e:\n                 node.error(f\"Predictor - Error during post-processing logic for {device_id_from_input}: {post_proc_e}\")\n                 # Fallback to raw (non-negative) prediction if post-processing logic fails\n                 final_prediction = max(0.0, float(raw_prediction) if not np.isnan(raw_prediction) else 0.0)\n\n            # --- Format Output ---\n            output_payload = { \"predicted_power_watts\": final_prediction }\n            output_msg = {'payload': output_payload, 'device_id': device_id_from_input}\n\n        except ValueError as ve: node.error(f\"Predictor - Value error for {device_id_from_input}: {ve}\\\\n{traceback.format_exc()}\"); output_msg = None\n        except Exception as e: node.error(f\"Predictor - General error for {device_id_from_input}: {e}\\\\n{traceback.format_exc()}\"); output_msg = None\n\n# Return the final message object (or None if errors)\nreturn output_msg",
        "outputs": 1,
        "x": 640,
        "y": 460,
        "wires": [
            [
                "fb9f1203b23b0fbc"
            ]
        ],
        "info": "**Purpose:** The core of the flow. It uses a pre-trained machine learning model to predict the printer's power consumption based on its live sensor readings.\r\n\r\n**Logic:**\r\n1.  **Dynamic Model Selection:** Selects the correct model file (e.g., `best_model.joblib` for Prusa, `ender3_...` for Ender 3) based on the `device_id`.\r\n2.  **Load Artifacts:** Loads the corresponding scaler, feature list, and trained model from the `/home/ubuntu/monitor_ml/models` directory.\r\n3.  **Preprocessing:** Cleans the input features from Node-RED to match the format the model was trained on (e.g., imputing missing values with 0).\r\n4.  **Prediction:** Uses the loaded model to make the `predict()` call.\r\n5.  **Post-processing:** Applies a rule to set the prediction to `0.0` if the features indicate the printer is in an idle or off state.\r\n\r\n**Output:** A `msg.payload` object containing the final prediction, e.g., `{ \"predicted_power_watts\": 85.5 }`."
    },
    {
        "id": "fb9f1203b23b0fbc",
        "type": "function",
        "z": "3248d6a231f4e9d0",
        "g": "ac90879e0d7b329f",
        "name": "Prepare Prediction Insert",
        "func": "// msg.payload = { predicted_power_watts: ... } from Python node\n// msg.device_id = \"PrusaMK4-1\" (passed along from before Python node)\n\nconst predictionResult = msg.payload;\nconst deviceId = msg.device_id; // Get device_id passed along\nconst predictionValue = predictionResult?.predicted_power_watts; // Use optional chaining\nconst model_version = 'XGBoost'; // Hardcoded for now\nconst timestamp = new Date().toISOString(); // Use current time for prediction timestamp\n\n// Validation\nif (!deviceId || typeof predictionValue !== 'number' || isNaN(predictionValue)) {\n    node.error(`Invalid data for prediction insert. Device: ${deviceId}, Prediction: ${predictionValue}`, msg);\n    return null; // Stop if data is invalid\n}\n\n// Prepare parameters for the static query in the postgres node\n// Order: timestamp, device_id, predicted_power_watts, model_version\nmsg.params = [\n    timestamp,         // $1\n    deviceId,          // $2\n    predictionValue,   // $3\n    model_version      // $4\n];\n\n// Clean up message\nmsg.payload = {};\nmsg.topic = \"\";\n// delete msg.device_id; // Optional cleanup\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 460,
        "wires": [
            [
                "c67612e2cda72292"
            ]
        ],
        "info": "**Purpose:** Formats the prediction result into the correct structure for saving to the database.\r\n**Logic:** It creates the `msg.params` array with the `timestamp`, `device_id`, `predicted_power_watts`, and `model_version` in the correct order for the final `INSERT` query."
    },
    {
        "id": "c67612e2cda72292",
        "type": "postgresql",
        "z": "3248d6a231f4e9d0",
        "g": "ac90879e0d7b329f",
        "name": "Insert Prediction",
        "query": "INSERT INTO ml_predictions (\n    timestamp, device_id, predicted_power_watts, model_version\n)\nVALUES ($1, $2, $3, $4)\nON CONFLICT DO NOTHING;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 980,
        "y": 520,
        "wires": [
            []
        ],
        "info": "**Purpose:** Inserts the new power prediction into the `ml_predictions` table.\r\n**Logic:** Executes the final `INSERT` query. `ON CONFLICT DO NOTHING` prevents errors from duplicate timestamps."
    },
    {
        "id": "fa8886be6b4eac09",
        "type": "function",
        "z": "fa2590c7f7889790",
        "name": "Prepare Env Insert",
        "func": "const weatherData = msg.payload;\n\nif (!weatherData || !weatherData.main || !weatherData.weather || !weatherData.name) {\n    node.error(\"Invalid or incomplete weather data received\", msg);\n    return null;\n}\n\nconst timestamp = new Date().toISOString(); // Using JS timestamp for now\nconst locationId = `${weatherData.name}_${weatherData.sys?.country || 'DE'}`;\nconst temperature = weatherData.main.temp ?? null;\nconst humidity = weatherData.main.humidity ?? null; // Value for humidity_pct\nconst condition = weatherData.weather.length > 0 ? weatherData.weather[0].main : null;\nconst source = \"DHT22_Sensor\";\n// Add dummy/placeholder values for columns we don't get from API (or fix table later)\nconst deviceIdForEnv = \"environment\"; // Use a fixed dummy ID\nconst pressure = weatherData.main.pressure ?? null; // Get pressure if available\n\n// Prepare parameters for the ACTUAL table structure\n// Order MUST match the INSERT statement's columns\n// timestamp, device_id, location_id, temperature_c, humidity_pct, pressure_hpa, weather_condition, source\nmsg.params = [\n    timestamp,          // $1 (Using JS timestamp now)\n    deviceIdForEnv,     // $2\n    locationId,         // $3\n    temperature,        // $4\n    humidity,           // $5 (Goes into humidity_pct)\n    pressure,           // $6 (Goes into pressure_hpa)\n    condition,          // $7 (Need to add weather_condition column to INSERT)\n    source              // $8 (Need to add source column to INSERT)\n];\n\nmsg.payload = {};\nmsg.topic = \"\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 500,
        "wires": [
            [
                "6c84bf4c3a68e698"
            ]
        ]
    },
    {
        "id": "6c84bf4c3a68e698",
        "type": "postgresql",
        "z": "fa2590c7f7889790",
        "name": "Insert Env Data",
        "query": "INSERT INTO environment_data (\n    -- List columns EXACTLY as in the table from \\d\n    timestamp,\n    device_id,\n    location_id,\n    temperature_c,\n    humidity_pct, -- Use correct column name\n    pressure_hpa, -- Include this column\n    weather_condition, -- Add this column\n    source -- Add this column\n)\nVALUES ($1, $2, $3, $4, $5, $6, $7, $8) -- Match parameter count\nON CONFLICT (timestamp, device_id) DO NOTHING; -- Use ACTUAL primary key",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1400,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "aacf049e0513607a",
        "type": "function",
        "z": "fa2590c7f7889790",
        "name": "Adapt Combined DHT22 Data",
        "func": "// Node-RED Function: Adapt Combined DHT22 Data\n\nconst dhtData = msg.payload; // Now receives { temperature: X, humidity: Y }\n\nif (dhtData === null || typeof dhtData !== 'object' ||\n    typeof dhtData.temperature !== 'number' ||\n    typeof dhtData.humidity !== 'number') {\n    node.error(\"Invalid or incomplete combined DHT22 data received: \" + JSON.stringify(dhtData), msg);\n    return null;\n}\n\nconst temperature_c = dhtData.temperature;\nconst humidity_pct = dhtData.humidity;\n\n// Create the structure expected by 'Prepare Env Insert'\nmsg.payload = {\n    main: {\n        temp: temperature_c,\n        humidity: humidity_pct,\n        pressure: null\n    },\n    weather: [{ main: \"Local Sensor\" }],\n    name: \"LabSensor\", // Or specific location ID for your lab\n    sys: {\n        country: \"DE\" // Or your country code\n    }\n};\n\nnode.log(\"Adapted Combined DHT22 data: Temp=\" + temperature_c + \"C, Hum=\" + humidity_pct + \"%\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 500,
        "wires": [
            [
                "fa8886be6b4eac09"
            ]
        ]
    },
    {
        "id": "efaf2866c11c6fcd",
        "type": "mqtt in",
        "z": "fa2590c7f7889790",
        "name": "",
        "topic": "esp32/raptorblingx/dht22/humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 370,
        "y": 540,
        "wires": [
            [
                "2c546d0e9506ae67"
            ]
        ]
    },
    {
        "id": "6361f5586683574f",
        "type": "mqtt in",
        "z": "fa2590c7f7889790",
        "name": "",
        "topic": "esp32/raptorblingx/dht22/temperature_c",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 460,
        "wires": [
            [
                "2c546d0e9506ae67"
            ]
        ]
    },
    {
        "id": "2c546d0e9506ae67",
        "type": "function",
        "z": "fa2590c7f7889790",
        "name": "Combine Temp & Humidity",
        "func": "// Node-RED Function: Combine Temperature & Humidity\n\nconst topic = msg.topic;\nconst payloadValue = parseFloat(msg.payload); // Assuming payload is just the number\n\nif (isNaN(payloadValue)) {\n    node.warn(\"Received non-numeric payload on topic: \" + topic + \" - Payload: \" + msg.payload);\n    return null; // Ignore invalid data\n}\n\n// Use flow context to store the latest readings\n// The context keys should be unique to this specific sensor if you have multiple DHT22s\nconst tempContextKey = \"dht22_temperature_c\";\nconst humContextKey = \"dht22_humidity_pct\";\n\nlet temperature = flow.get(tempContextKey);\nlet humidity = flow.get(humContextKey);\n\nif (topic.endsWith(\"temperature_c\")) {\n    temperature = payloadValue;\n    flow.set(tempContextKey, temperature);\n    // node.log(\"Stored temperature: \" + temperature);\n} else if (topic.endsWith(\"humidity\")) {\n    humidity = payloadValue;\n    flow.set(humContextKey, humidity);\n    // node.log(\"Stored humidity: \" + humidity);\n} else {\n    node.warn(\"Received message on unexpected DHT22 topic: \" + topic);\n    return null;\n}\n\n// Check if both values have been received\nif (typeof temperature === 'number' && typeof humidity === 'number') {\n    node.log(`Combining: Temp=${temperature}, Hum=${humidity}`);\n\n    // Create the payload expected by the \"Adapt DHT22 Data\" node\n    msg.payload = {\n        temperature: temperature,\n        humidity: humidity\n    };\n\n    // Reset context for the next pair of readings\n    flow.set(tempContextKey, undefined); // Or null\n    flow.set(humContextKey, undefined); // Or null\n\n    msg.topic = \"dht22/combined\"; // Set a new topic for the combined message\n    return msg; // Send the combined message\n} else {\n    // One of the values is still missing, wait for the other\n    // node.log(\"Waiting for other DHT22 value...\");\n    return null; // Don't send anything yet\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 500,
        "wires": [
            [
                "aacf049e0513607a"
            ]
        ]
    },
    {
        "id": "da83c0553e3afc18",
        "type": "http in",
        "z": "249c21de5a8d56e0",
        "name": "GET /api/dpp_summary",
        "url": "/api/dpp_summary",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "749a57547b06df04"
            ]
        ],
        "info": "**Purpose:** Defines a public HTTP endpoint to provide a comprehensive summary of all printers for the Digital Product Passport (DPP) frontend.\n\n**Endpoint:** `GET /api/dpp_summary`\n\n**Logic:**\n- Listens for incoming GET requests.\n- Can optionally accept a `?scenario=` query parameter to trigger mock or dynamic simulation data for testing purposes. If no scenario is provided, it defaults to \"live\".\n\n**Output:**\n- Passes the `http` request object to the `exec` node."
    },
    {
        "id": "a096c3c3bc0cadfa",
        "type": "http response",
        "z": "249c21de5a8d56e0",
        "name": "Send DPP Summary",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1020,
        "y": 260,
        "wires": [],
        "info": "**Purpose:** Sends the JSON data generated by the Python script back to the client (the DPP frontend).\n\n**Logic:**\n- Takes the JSON string from the previous node's `msg.payload`.\n- Sets the HTTP `Content-Type` header to `application/json` to ensure the browser interprets the response correctly.\n- Sends the payload with a `200 OK` status code."
    },
    {
        "id": "467711c80608b20c",
        "type": "debug",
        "z": "249c21de5a8d56e0",
        "name": "debug 43",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 220,
        "wires": []
    },
    {
        "id": "749a57547b06df04",
        "type": "exec",
        "z": "249c21de5a8d56e0",
        "command": "/home/ubuntu/monitor_ml/venv/bin/python",
        "addpay": "",
        "append": "/home/ubuntu/monitor_ml/dpp_simulator.py --scenario live",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 520,
        "y": 260,
        "wires": [
            [
                "a096c3c3bc0cadfa",
                "467711c80608b20c"
            ],
            [
                "b95aceeec407ac3b"
            ],
            [
                "a717652788b078f6"
            ]
        ],
        "info": "**Purpose:** Executes the main Python script responsible for gathering, processing, and formatting all the data for the DPP.\n\n**Command:** `/home/ubuntu/monitor_ml/dpp_simulator.py --scenario live`\n\n**Logic:**\n1.  Calls the Python interpreter from the project's virtual environment.\n2.  Runs the `dpp_simulator.py` script.\n3.  The `--scenario live` argument tells the script to fetch real-time data from the PostgreSQL database.\n4.  The script's output (a single line of JSON) is passed to `stdout` (the first output of this node).\n\n**Output:**\n- `msg.payload`: A string containing the JSON summary of all printers."
    },
    {
        "id": "b95aceeec407ac3b",
        "type": "debug",
        "z": "249c21de5a8d56e0",
        "name": "debug 45",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 280,
        "wires": []
    },
    {
        "id": "a717652788b078f6",
        "type": "debug",
        "z": "249c21de5a8d56e0",
        "name": "debug 46",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 360,
        "wires": []
    },
    {
        "id": "f77d140fdd22352b",
        "type": "mqtt in",
        "z": "44c225e855f817f8",
        "g": "5e9c772230c2d4b1",
        "name": "",
        "topic": "esp32/raptorblingx/mpu6050/accel/x",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 400,
        "wires": [
            [
                "0c59e6a6c648cb94"
            ]
        ]
    },
    {
        "id": "2d183ac8c2d9dfd3",
        "type": "mqtt in",
        "z": "44c225e855f817f8",
        "g": "5e9c772230c2d4b1",
        "name": "",
        "topic": "esp32/raptorblingx/mpu6050/accel/y",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 460,
        "wires": [
            [
                "2fd609f72fb77e4b"
            ]
        ]
    },
    {
        "id": "3fecf642c398afec",
        "type": "mqtt in",
        "z": "44c225e855f817f8",
        "g": "5e9c772230c2d4b1",
        "name": "",
        "topic": "esp32/raptorblingx/mpu6050/accel/z",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 520,
        "wires": [
            [
                "2b0a996e7caaa58d"
            ]
        ]
    },
    {
        "id": "8950e05ca866624d",
        "type": "mqtt in",
        "z": "44c225e855f817f8",
        "g": "fc75ba5343df4163",
        "name": "",
        "topic": "esp32/raptorblingx/mpu6050/gyro/x",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 720,
        "wires": [
            [
                "f72a1cf8c3a8820c"
            ]
        ]
    },
    {
        "id": "7dc2945d2e4ddd8b",
        "type": "mqtt in",
        "z": "44c225e855f817f8",
        "g": "fc75ba5343df4163",
        "name": "",
        "topic": "esp32/raptorblingx/mpu6050/gyro/y",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 780,
        "wires": [
            [
                "60e80e7a6e1a6906"
            ]
        ]
    },
    {
        "id": "52fdc90785b7a1d7",
        "type": "mqtt in",
        "z": "44c225e855f817f8",
        "g": "fc75ba5343df4163",
        "name": "",
        "topic": "esp32/raptorblingx/mpu6050/gyro/z",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 840,
        "wires": [
            [
                "5396a4653d7c0e57"
            ]
        ]
    },
    {
        "id": "1fa08ed00a895506",
        "type": "mqtt in",
        "z": "44c225e855f817f8",
        "g": "93d1043233d62247",
        "name": "",
        "topic": "esp32/raptorblingx/mpu6050/temperature_c",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1000,
        "wires": [
            [
                "4816faa0ed4ee79e",
                "a397a019ff154ae9"
            ]
        ]
    },
    {
        "id": "024bf21a6248a91b",
        "type": "mqtt in",
        "z": "44c225e855f817f8",
        "g": "ce458d19dac54c24",
        "name": "",
        "topic": "esp32/raptorblingx/max6675/temperature_c",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 1200,
        "wires": [
            [
                "8cc82821c9778c40"
            ]
        ]
    },
    {
        "id": "77f68480bd37ebd6",
        "type": "mqtt in",
        "z": "44c225e855f817f8",
        "g": "3227026642a6ed7d",
        "name": "",
        "topic": "esp32/raptorblingx/dht22/temperature_c",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 450,
        "y": 100,
        "wires": [
            [
                "3e01886783462c76",
                "ada47b8b28f15571"
            ]
        ]
    },
    {
        "id": "4fb96e9054bdf405",
        "type": "mqtt in",
        "z": "44c225e855f817f8",
        "g": "3227026642a6ed7d",
        "name": "",
        "topic": "esp32/raptorblingx/dht22/humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 160,
        "wires": [
            [
                "777b7e75e17f5c70",
                "eb13bac943346fd7"
            ]
        ]
    },
    {
        "id": "3e01886783462c76",
        "type": "change",
        "z": "44c225e855f817f8",
        "g": "3227026642a6ed7d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "temperature_c",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 100,
        "wires": [
            [
                "2d1a2e9c46e83e5e"
            ]
        ]
    },
    {
        "id": "777b7e75e17f5c70",
        "type": "change",
        "z": "44c225e855f817f8",
        "g": "3227026642a6ed7d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "humidity_pct",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 160,
        "wires": [
            [
                "2d1a2e9c46e83e5e"
            ]
        ]
    },
    {
        "id": "0c59e6a6c648cb94",
        "type": "change",
        "z": "44c225e855f817f8",
        "g": "5e9c772230c2d4b1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ax",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 400,
        "wires": [
            [
                "341fbee8495b1bd8"
            ]
        ]
    },
    {
        "id": "2fd609f72fb77e4b",
        "type": "change",
        "z": "44c225e855f817f8",
        "g": "5e9c772230c2d4b1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ay",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 460,
        "wires": [
            [
                "341fbee8495b1bd8"
            ]
        ]
    },
    {
        "id": "2b0a996e7caaa58d",
        "type": "change",
        "z": "44c225e855f817f8",
        "g": "5e9c772230c2d4b1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "az",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 520,
        "wires": [
            [
                "341fbee8495b1bd8"
            ]
        ]
    },
    {
        "id": "f72a1cf8c3a8820c",
        "type": "change",
        "z": "44c225e855f817f8",
        "g": "fc75ba5343df4163",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "gx",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 720,
        "wires": [
            [
                "c7e3549eb6f42dda"
            ]
        ]
    },
    {
        "id": "60e80e7a6e1a6906",
        "type": "change",
        "z": "44c225e855f817f8",
        "g": "fc75ba5343df4163",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "gy",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 780,
        "wires": [
            [
                "c7e3549eb6f42dda"
            ]
        ]
    },
    {
        "id": "5396a4653d7c0e57",
        "type": "change",
        "z": "44c225e855f817f8",
        "g": "fc75ba5343df4163",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "gz",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 840,
        "wires": [
            [
                "c7e3549eb6f42dda"
            ]
        ]
    },
    {
        "id": "4816faa0ed4ee79e",
        "type": "change",
        "z": "44c225e855f817f8",
        "g": "93d1043233d62247",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1000,
        "wires": [
            [
                "d23eed6a980f1398"
            ]
        ]
    },
    {
        "id": "8cc82821c9778c40",
        "type": "change",
        "z": "44c225e855f817f8",
        "g": "ce458d19dac54c24",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1200,
        "wires": [
            [
                "1be94df15edd18b0"
            ]
        ]
    },
    {
        "id": "7a4b6bd3f341238a",
        "type": "mqtt in",
        "z": "44c225e855f817f8",
        "g": "75074842157a7df5",
        "name": "",
        "topic": "tele/smartplug_1/SENSOR",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "becc22b8f4461a4d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 1360,
        "wires": [
            [
                "d3de12f14d0f6a67",
                "2e2665c651268a2b"
            ]
        ]
    },
    {
        "id": "b04fbf43fa8829ce",
        "type": "function",
        "z": "44c225e855f817f8",
        "g": "3227026642a6ed7d",
        "name": "Prepare DHT22 Insert",
        "func": "// Input msg.payload is { \"temperature_c\": \"26.2\", \"humidity_pct\": \"58.7\" } (strings)\nconst dhtStringData = msg.payload;\n\nif (!dhtStringData || typeof dhtStringData.temperature_c === 'undefined' || typeof dhtStringData.humidity_pct === 'undefined') {\n    node.error(\"Invalid or incomplete DHT22 string data received from Join\", msg);\n    return null;\n}\n\n// Convert to numbers here\nconst temp_c_num = parseFloat(dhtStringData.temperature_c);\nconst humidity_pct_num = parseFloat(dhtStringData.humidity_pct);\n\n// Check if conversion was successful and they are numbers\nif (isNaN(temp_c_num) || isNaN(humidity_pct_num)) {\n    node.error(\"Failed to convert DHT22 string values to numbers\", msg);\n    return null;\n}\n\nconst timestamp = new Date().toISOString();\nconst deviceId = \"ESP32_SensorHub_Raptor\";\nconst printerId = \"PRUSA_MK3_Test_TR\";\n\nmsg.params = [\n    timestamp,           // $1\n    deviceId,            // $2\n    printerId,           // $3\n    temp_c_num,          // $4 (use the converted number)\n    humidity_pct_num     // $5 (use the converted number)\n];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 100,
        "wires": [
            [
                "7ef660eb1fcdad18",
                "883aea39948696ea"
            ]
        ]
    },
    {
        "id": "7ef660eb1fcdad18",
        "type": "postgresql",
        "z": "44c225e855f817f8",
        "g": "3227026642a6ed7d",
        "name": "",
        "query": "INSERT INTO dht22_data (\n    timestamp, device_id, printer_id, temperature_c, humidity_pct\n)\nVALUES ($1, $2, $3, $4, $5)\nON CONFLICT (timestamp, device_id) DO NOTHING;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1250,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "30ea1788a5f64e85",
        "type": "function",
        "z": "44c225e855f817f8",
        "g": "fc75ba5343df4163",
        "name": "Prepare MPU Gyro Insert",
        "func": "const gyroData = msg.payload; // Should be { gx: ..., gy: ..., gz: ... }\n\nif (!gyroData || typeof gyroData.gx !== 'number' || typeof gyroData.gy !== 'number' || typeof gyroData.gz !== 'number') {\n    node.error(\"Invalid or incomplete MPU gyroscope data\", msg);\n    return null;\n}\nconst timestamp = new Date().toISOString();\nconst deviceId = \"ESP32_SensorHub_Raptor\";\nconst printerId = \"PRUSA_MK3_Test_TR\";\n\nmsg.params = [\n    timestamp,   // $1\n    deviceId,    // $2\n    printerId,   // $3\n    gyroData.gx, // $4\n    gyroData.gy, // $5\n    gyroData.gz  // $6\n];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 720,
        "wires": [
            [
                "8e0e73e8a1d28b6f",
                "34f84b9d88038512"
            ]
        ]
    },
    {
        "id": "8e0e73e8a1d28b6f",
        "type": "postgresql",
        "z": "44c225e855f817f8",
        "g": "fc75ba5343df4163",
        "name": "",
        "query": "INSERT INTO mpu6050_gyroscope_data (\n    timestamp, device_id, printer_id, gyro_x, gyro_y, gyro_z\n)\nVALUES ($1, $2, $3, $4, $5, $6)\nON CONFLICT (timestamp, device_id) DO NOTHING;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1070,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "d23eed6a980f1398",
        "type": "function",
        "z": "44c225e855f817f8",
        "g": "93d1043233d62247",
        "name": "Prepare MPU Temp Insert",
        "func": "const tempValue = msg.payload; // Numeric temperature\n\nif (typeof tempValue !== 'number' || isNaN(tempValue)) {\n    node.error(\"Invalid MPU temperature value\", msg);\n    return null;\n}\nconst timestamp = new Date().toISOString();\nconst deviceId = \"ESP32_SensorHub_Raptor\";\nconst printerId = \"PRUSA_MK3_Test_TR\";\n\nmsg.params = [\n    timestamp,    // $1\n    deviceId,     // $2\n    printerId,    // $3\n    tempValue     // $4\n];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1000,
        "wires": [
            [
                "857d777ce2057c48",
                "ca5aa4b3df152834"
            ]
        ]
    },
    {
        "id": "857d777ce2057c48",
        "type": "postgresql",
        "z": "44c225e855f817f8",
        "g": "93d1043233d62247",
        "name": "",
        "query": "INSERT INTO mpu6050_temperature_data (\n    timestamp, device_id, printer_id, temperature_c\n)\nVALUES ($1, $2, $3, $4)\nON CONFLICT (timestamp, device_id) DO NOTHING;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "1be94df15edd18b0",
        "type": "function",
        "z": "44c225e855f817f8",
        "g": "ce458d19dac54c24",
        "name": "Prepare MAX6675 Temp Insert",
        "func": "const tempValue = msg.payload; // Numeric temperature\n\nif (typeof tempValue !== 'number' || isNaN(tempValue)) {\n    node.error(\"Invalid MAX6675 temperature value\", msg);\n    return null;\n}\nconst timestamp = new Date().toISOString();\nconst deviceId = \"ESP32_SensorHub_Raptor\";\nconst printerId = \"PRUSA_MK3_Test_TR\";\n\nmsg.params = [\n    timestamp,    // $1\n    deviceId,     // $2\n    printerId,    // $3\n    tempValue     // $4\n];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1200,
        "wires": [
            [
                "3a967bc486f43c82",
                "cdf20cc9119bd677"
            ]
        ]
    },
    {
        "id": "3a967bc486f43c82",
        "type": "postgresql",
        "z": "44c225e855f817f8",
        "g": "ce458d19dac54c24",
        "name": "",
        "query": "INSERT INTO max6675_temperature_data (\n    timestamp, device_id, printer_id, temperature_c\n)\nVALUES ($1, $2, $3, $4)\nON CONFLICT (timestamp, device_id) DO NOTHING;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1010,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "d3de12f14d0f6a67",
        "type": "function",
        "z": "44c225e855f817f8",
        "g": "75074842157a7df5",
        "name": "Prepare Smart Plug Insert",
        "func": "const tasmotaData = msg.payload; // Assumes MQTT In node outputs parsed JSON\n\nif (!tasmotaData || !tasmotaData.Time || !tasmotaData.ENERGY) {\n    node.error(\"Invalid or incomplete Tasmota SENSOR data\", msg);\n    return null;\n}\n\nconst timestamp = new Date(tasmotaData.Time).toISOString();\nconst topicParts = msg.topic.split('/');\nconst deviceId = topicParts.length > 1 ? topicParts[1] : \"unknown_smartplug\";\n\nconst energy = tasmotaData.ENERGY;\nconst power_w = energy.Power ?? null;\nconst energy_total_kwh = energy.Total ?? null;\nconst energy_today_kwh = energy.Today ?? null;\nconst voltage_v = energy.Voltage ?? null;\nconst current_a = energy.Current ?? null;\nconst power_factor = energy.Factor ?? null;\nconst apparent_power_va = energy.ApparentPower ?? null;\nconst reactive_power_var = energy.ReactivePower ?? null;\n\nnode.warn(`Power data missing for device ${deviceId} at ${timestamp}: ${JSON.stringify(msg)}`);\n\nmsg.params = [\n    timestamp,             // $1\n    deviceId,              // $2\n    power_w,               // $3\n    energy_total_kwh,      // $4\n    energy_today_kwh,      // $5\n    voltage_v,             // $6\n    current_a,             // $7\n    power_factor,          // $8\n    apparent_power_va,     // $9\n    reactive_power_var     // $10\n];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1360,
        "wires": [
            [
                "3549f4574b9800c8"
            ]
        ]
    },
    {
        "id": "3549f4574b9800c8",
        "type": "postgresql",
        "z": "44c225e855f817f8",
        "g": "75074842157a7df5",
        "name": "",
        "query": "INSERT INTO smartplug_data (\n    timestamp, device_id, power_w, energy_total_kwh, energy_today_kwh,\n    voltage_v, current_a, power_factor, apparent_power_va, reactive_power_var\n)\nVALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)\nON CONFLICT (timestamp, device_id) DO UPDATE SET\n    power_w = EXCLUDED.power_w,\n    energy_total_kwh = EXCLUDED.energy_total_kwh,\n    energy_today_kwh = EXCLUDED.energy_today_kwh,\n    voltage_v = EXCLUDED.voltage_v,\n    current_a = EXCLUDED.current_a,\n    power_factor = EXCLUDED.power_factor,\n    apparent_power_va = EXCLUDED.apparent_power_va,\n    reactive_power_var = EXCLUDED.reactive_power_var;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 630,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "c7e3549eb6f42dda",
        "type": "join",
        "z": "44c225e855f817f8",
        "g": "fc75ba5343df4163",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "1",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 650,
        "y": 780,
        "wires": [
            [
                "30ea1788a5f64e85"
            ]
        ]
    },
    {
        "id": "2d1a2e9c46e83e5e",
        "type": "join",
        "z": "44c225e855f817f8",
        "g": "3227026642a6ed7d",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "1",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 140,
        "wires": [
            [
                "b04fbf43fa8829ce"
            ]
        ]
    },
    {
        "id": "883aea39948696ea",
        "type": "debug",
        "z": "44c225e855f817f8",
        "g": "3227026642a6ed7d",
        "name": "debug 31",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 60,
        "wires": []
    },
    {
        "id": "a397a019ff154ae9",
        "type": "debug",
        "z": "44c225e855f817f8",
        "g": "93d1043233d62247",
        "name": "debug 41",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 1040,
        "wires": []
    },
    {
        "id": "ca5aa4b3df152834",
        "type": "debug",
        "z": "44c225e855f817f8",
        "g": "93d1043233d62247",
        "name": "debug 43",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1040,
        "wires": []
    },
    {
        "id": "cdf20cc9119bd677",
        "type": "debug",
        "z": "44c225e855f817f8",
        "g": "ce458d19dac54c24",
        "name": "debug 44",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 1240,
        "wires": []
    },
    {
        "id": "01929e1883714b74",
        "type": "postgresql",
        "z": "44c225e855f817f8",
        "g": "5e9c772230c2d4b1",
        "name": "",
        "query": "INSERT INTO mpu6050_accelerometer_data (\n    timestamp, device_id, printer_id, accel_x, accel_y, accel_z\n)\nVALUES ($1, $2, $3, $4, $5, $6)\nON CONFLICT (timestamp, device_id) DO NOTHING;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1350,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "aa107ae95410814c",
        "type": "debug",
        "z": "44c225e855f817f8",
        "g": "5e9c772230c2d4b1",
        "name": "debug 34",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 340,
        "wires": []
    },
    {
        "id": "341fbee8495b1bd8",
        "type": "join",
        "z": "44c225e855f817f8",
        "g": "5e9c772230c2d4b1",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "1",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 630,
        "y": 460,
        "wires": [
            [
                "0abcfd1a02f4a19a",
                "642a28ac55077c32"
            ]
        ]
    },
    {
        "id": "0abcfd1a02f4a19a",
        "type": "function",
        "z": "44c225e855f817f8",
        "g": "5e9c772230c2d4b1",
        "name": "Prepare MPU Accel Insert",
        "func": "const accelData = msg.payload; // Should be { ax: ..., ay: ..., az: ... }\n\nif (!accelData || typeof accelData.ax !== 'number' || typeof accelData.ay !== 'number' || typeof accelData.az !== 'number') {\n    node.error(\"Invalid or incomplete MPU accelerometer data\", msg);\n    return null;\n}\n\nconst timestamp = new Date().toISOString();\nconst deviceId = \"ESP32_SensorHub_Raptor\";\nconst printerId = \"PRUSA_MK3_Test_TR\"; // Or null\n\nmsg.params = [\n    timestamp,    // $1\n    deviceId,     // $2\n    printerId,    // $3\n    accelData.ax, // $4\n    accelData.ay, // $5\n    accelData.az  // $6\n];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 400,
        "wires": [
            [
                "01929e1883714b74",
                "aa107ae95410814c"
            ]
        ]
    },
    {
        "id": "642a28ac55077c32",
        "type": "function",
        "z": "44c225e855f817f8",
        "g": "5e9c772230c2d4b1",
        "name": "Calculate MPU RMS & Apply Manual Threshold",
        "func": "const accelData = msg.payload; // Expects { ax: ..., ay: ..., az: ... }\n\nif (!accelData || typeof accelData.ax !== 'number' || typeof accelData.ay !== 'number' || typeof accelData.az !== 'number') {\n    node.error(\"RMS Calc: Invalid MPU accelerometer data received from Join\", msg);\n    return null;\n}\n\n// Calculate magnitude of acceleration vector\nconst magnitude = Math.sqrt(\n    accelData.ax * accelData.ax +\n    accelData.ay * accelData.ay +\n    accelData.az * accelData.az\n);\n\n// Subtract 1g for gravity (approximate). \n// Assumes MPU6050 gives readings around 1g for static Z-axis due to gravity.\n// This value might need slight tuning if your baseline 'g' is consistently off from 1.0\nconst vibration = Math.abs(magnitude - 9.81); // Or Math.abs(magnitude - 1.0) if your MPU outputs in 'g's directly\n// If your MPU already outputs m/s^2 and z is ~9.8 when still, this is fine.\n// If your MPU is outputting raw ADC values, this math needs to be scaled.\n// Given your previous debug values (-0.9, -9.9, -4.5), it seems like Z is not isolated gravity.\n// A simpler RMS without gravity subtraction might be better initially if orientation is not fixed.\n\n// --- Simpler RMS Approach (less sensitive to orientation, good for general vibration) ---\n// Calculate RMS of the changes or just the raw values if consistently oriented.\n// For now, let's use a simpler approach that looks at overall G-force magnitude change.\n// The AI's original: const g = Math.sqrt(ax*ax + ay*ay + az*az) - 1; const rms = Math.sqrt(g*g);\n// This is | |vector_a| - 1g | which is good if 1g is perfectly along one axis when idle.\n\n// Let's use the AI's simplified RMS for now:\nconst g_force_magnitude = Math.sqrt(accelData.ax * accelData.ax + accelData.ay * accelData.ay + accelData.az * accelData.az);\n\n// Assuming your accelerometer is outputting in m/s^2, and '1g' is approx 9.81 m/s^2.\n// If it's outputting in 'g's directly, use 1.0 instead of 9.81.\n// For simplicity, let's assume you want to detect any significant deviation from a stable state.\n// The AI's suggestion for RMS was:\n// const g_val = Math.sqrt(ax*ax + ay*ay + az*az) - 1; // if output is in 'g'\n// const rms_val = Math.sqrt(g_val*g_val); // This is just Math.abs(g_val)\n\n// Let's calculate the magnitude of the AC component (vibration) assuming gravity is somewhat stable.\n// A true RMS over a window is better, but for MVP let's do a simpler \"activity level\".\n// We need a baseline 'still' magnitude. For now, let's just use magnitude.\n// For MVP, a simpler \"activity\" metric might be just the magnitude if it changes enough.\n\n// Let's refine the RMS calculation for the sliding window as discussed in the AI plan (Phase 0, step 2)\n// but implement it simply here for now. The key is the thresholding.\n\n// For this MVP, let's use the magnitude of the vector and assume '1g' is the baseline.\n// This is a simplification. A proper RMS over a window of (magnitude - average_idle_magnitude) is better.\n// The AI suggested: const g = Math.sqrt(ax*ax + ay*ay + az*az) - 1; // (if '1' is 1g)\n//                     const rms = Math.sqrt(g*g); // which is effectively Math.abs(g)\n\n// Let's assume your MPU6050 output for ax, ay, az is in m/s^2.\n// And when stationary, one axis (e.g., az) shows ~9.81 m/s^2 (or -9.81).\n// A simple \"activity\" can be the change from this.\n// For now, to match AI's simple RMS for the MVP:\nconst current_rms_value = Math.abs(g_force_magnitude - 9.81); // Adjust 9.81 if your 'g' units are different or if baseline is different\n\n// Get the manual threshold from flow context (set by a dashboard input)\nconst manual_threshold = flow.get(\"manual_mpu_threshold\") || 0.05; // Default if not set\n\nconst isMoving = (current_rms_value > manual_threshold) ? 1 : 0;\n\nmsg.payload = {\n    is_moving: isMoving,\n    moving_rms: parseFloat(current_rms_value.toFixed(3)), // Store the calculated RMS\n    moving_threshold: manual_threshold\n    // We'll add process_phase: null here later, or it will be handled by another function\n};\n// We will prepare params for PostgreSQL in the next function node\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 480,
        "wires": [
            [
                "03ba2dc03bc7ac47"
            ]
        ]
    },
    {
        "id": "03ba2dc03bc7ac47",
        "type": "function",
        "z": "44c225e855f817f8",
        "g": "5e9c772230c2d4b1",
        "name": "Prepare Derived Status Insert",
        "func": "const derivedData = msg.payload; // Expects { is_moving: ..., moving_rms: ..., moving_threshold: ... }\n\nif (typeof derivedData.is_moving === 'undefined') { // Basic check\n    node.error(\"Derived Status: Incomplete data received\", msg);\n    return null;\n}\n\nconst timestamp = new Date().toISOString();\nconst deviceId = \"ESP32_SensorHub_Raptor\";\nconst printerId = \"PRUSA_MK3_Test_TR\";\n\n// For table: printer_derived_status \n// (timestamp, device_id, printer_id, is_moving, moving_rms, moving_threshold, process_phase)\nmsg.params = [\n    timestamp,                  // $1\n    deviceId,                   // $2\n    printerId,                  // $3\n    derivedData.is_moving,      // $4\n    derivedData.moving_rms,     // $5\n    derivedData.moving_threshold, // $6\n    null                        // $7 (process_phase will be updated later)\n];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 520,
        "wires": [
            [
                "d6ac7d1660c10d16",
                "c76f96030d02bb57"
            ]
        ]
    },
    {
        "id": "d6ac7d1660c10d16",
        "type": "ui_numeric",
        "z": "44c225e855f817f8",
        "g": "5e9c772230c2d4b1",
        "name": "Set MPU Threshold",
        "label": "MPU Moving Threshold",
        "tooltip": "Vibration RMS threshold to detect movement",
        "group": "2b76591607efec25",
        "order": 0,
        "width": "3",
        "height": "1",
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "step": "0.01",
        "className": "",
        "x": 1170,
        "y": 540,
        "wires": [
            [
                "4d42faa80d69d4e3"
            ]
        ]
    },
    {
        "id": "4d42faa80d69d4e3",
        "type": "change",
        "z": "44c225e855f817f8",
        "g": "5e9c772230c2d4b1",
        "name": "Store MPU Threshold",
        "rules": [
            {
                "t": "set",
                "p": "manual_mpu_threshold",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "c76f96030d02bb57",
        "type": "postgresql",
        "z": "44c225e855f817f8",
        "g": "5e9c772230c2d4b1",
        "name": "Prepare Derived Status Insert",
        "query": "INSERT INTO printer_derived_status (\n    timestamp, device_id, printer_id, is_moving, moving_rms, moving_threshold, process_phase\n)\nVALUES ($1, $2, $3, $4, $5, $6, $7)\nON CONFLICT (timestamp, device_id) DO UPDATE SET\n    is_moving = EXCLUDED.is_moving,\n    moving_rms = EXCLUDED.moving_rms,\n    moving_threshold = EXCLUDED.moving_threshold;\n    -- Don't update process_phase here if it's being set by another flow later",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1240,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "34f84b9d88038512",
        "type": "debug",
        "z": "44c225e855f817f8",
        "g": "fc75ba5343df4163",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 780,
        "wires": []
    },
    {
        "id": "ada47b8b28f15571",
        "type": "debug",
        "z": "44c225e855f817f8",
        "g": "3227026642a6ed7d",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 60,
        "wires": []
    },
    {
        "id": "eb13bac943346fd7",
        "type": "debug",
        "z": "44c225e855f817f8",
        "g": "3227026642a6ed7d",
        "name": "debug 37",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 200,
        "wires": []
    },
    {
        "id": "2e2665c651268a2b",
        "type": "function",
        "z": "44c225e855f817f8",
        "g": "75074842157a7df5",
        "name": "Format for energy_data",
        "func": "const tasmotaData = msg.payload;\n\nif (!tasmotaData || !tasmotaData.Time || !tasmotaData.ENERGY) {\n    node.error(\"Tasmota SENSOR data for energy_data table is invalid.\", msg);\n    return null;\n}\n\n// Hardcode the device ID for the printer this plug is attached to\nconst deviceId = 'Ender-3-Pro-1';\n\nconst energy = tasmotaData.ENERGY;\nconst power_watts = energy.Power ?? null;\nconst total_wh = (energy.Total * 1000) ?? null; // Tasmota reports kWh, convert to Wh\nconst voltage = energy.Voltage ?? null;\nconst current_amps = energy.Current ?? null;\nconst plug_temp_c = null; // Tasmota ENERGY payload doesn't have plug temp\nconst energy_today_kwh = energy.Today ?? null;\n\n\nmsg.params = [\n    new Date(tasmotaData.Time).toISOString(), // $1: timestamp\n    deviceId,                                 // $2: device_id\n    power_watts,                              // $3: power_watts\n    total_wh,                                 // $4: energy_total_wh\n    voltage,                                  // $5: voltage\n    current_amps,                             // $6: current_amps\n    plug_temp_c,\n    energy_today_kwh                              \n];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1460,
        "wires": [
            [
                "567460cf38ab8b90",
                "b8b9fa1094ca6c9c"
            ]
        ]
    },
    {
        "id": "567460cf38ab8b90",
        "type": "postgresql",
        "z": "44c225e855f817f8",
        "g": "75074842157a7df5",
        "name": "Insert into energy_data",
        "query": "INSERT INTO energy_data (\n    timestamp, device_id, power_watts, energy_total_wh,\n    voltage, current_amps, plug_temp_c, energy_today_kwh\n)\nVALUES ($1, $2, $3, $4, $5, $6, $7, $8)\nON CONFLICT (timestamp, device_id) DO NOTHING;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 620,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "b8b9fa1094ca6c9c",
        "type": "debug",
        "z": "44c225e855f817f8",
        "g": "75074842157a7df5",
        "name": "debug 52",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 1500,
        "wires": []
    },
    {
        "id": "798789cfc80de203",
        "type": "comment",
        "z": "44c225e855f817f8",
        "g": "ce458d19dac54c24",
        "name": "",
        "info": "**Purpose:** Adapts and standardizes the data from a Tasmota-flashed smart plug to match the schema of the main `energy_data` table.\n\n**Logic:**\n1.  Receives the Tasmota `SENSOR` JSON payload.\n2.  Extracts the `Power`, `Total` (energy), `Voltage`, and `Current` values.\n3.  **Important:** It hardcodes the `device_id` to `'Ender-3-Pro-1'`, correctly associating this specific plug's data with the Ender 3 Pro printer.\n4.  Converts the energy from kWh (Tasmota's format) to Wh to match the `energy_data` table's standard unit.\n\n**Output:**\n- `msg.params`: A correctly formatted array ready for insertion into the `energy_data` table.",
        "x": 300,
        "y": 1260,
        "wires": []
    },
    {
        "id": "a7242811e93e7be7",
        "type": "inject",
        "z": "28ad1cc5547cbab4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 540,
        "wires": [
            [
                "1ee47b8c409b842a"
            ]
        ]
    },
    {
        "id": "1ee47b8c409b842a",
        "type": "function",
        "z": "28ad1cc5547cbab4",
        "name": "Prepare Get Our Devices",
        "func": "msg.params = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 580,
        "wires": [
            [
                "593361445b476de3"
            ]
        ]
    },
    {
        "id": "593361445b476de3",
        "type": "postgresql",
        "z": "28ad1cc5547cbab4",
        "name": "Get Device List",
        "query": "SELECT\n    device_id,\n    simplyprint_id,\n    sp_company_id,\n    sp_api_key\nFROM devices\nWHERE simplyprint_id IS NOT NULL\n  AND sp_company_id IS NOT NULL\n  AND sp_api_key IS NOT NULL;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 500,
        "y": 640,
        "wires": [
            [
                "942803aaca3750ef"
            ]
        ]
    },
    {
        "id": "942803aaca3750ef",
        "type": "function",
        "z": "28ad1cc5547cbab4",
        "name": "Prepare Job History Request",
        "func": "// msg.payload contains the array of devices from the database.\nconst devices = msg.payload;\n\nif (!Array.isArray(devices) || devices.length === 0) {\n    node.warn(\"No SimplyPrint devices with full credentials found in database.\");\n    return null; // Stop the flow\n}\n\nconst requestMessages = []; // Array to hold all messages to be sent\n\nfor (const device of devices) {\n    if (!device.simplyprint_id || !device.sp_company_id || !device.sp_api_key) {\n        node.warn(`Skipping device with incomplete SimplyPrint credentials: ${device.device_id}`);\n        continue;\n    }\n\n    // Create a new message object for this device's API call\n    const newMsg = {\n        method: \"POST\",\n        headers: {\n            'X-API-KEY': device.sp_api_key,       // <-- DYNAMIC from DB\n            'Content-Type': 'application/json'\n        },\n        url: `https://api.simplyprint.io/${device.sp_company_id}/printers/Get`, // <-- DYNAMIC from DB\n        payload: { \"pid\": parseInt(device.simplyprint_id, 10) },\n        internal_device_id: device.device_id // Pass our internal ID along\n    };\n\n    requestMessages.push(newMsg);\n}\n\n// Return the entire array of messages. Node-RED will send them one by one.\nreturn [requestMessages];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 700,
        "wires": [
            [
                "4fd21579aa625bbd"
            ]
        ]
    },
    {
        "id": "4fd21579aa625bbd",
        "type": "http request",
        "z": "28ad1cc5547cbab4",
        "name": "Get Printer Data",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 900,
        "y": 760,
        "wires": [
            [
                "b5cf5822bf59d0bb"
            ]
        ]
    },
    {
        "id": "b5cf5822bf59d0bb",
        "type": "function",
        "z": "28ad1cc5547cbab4",
        "name": "Process & Prepare Insert",
        "func": "// Node: Process Printer Data & Prepare Insert (Corrected Single-Message Pattern)\n\nconst apiResponse = msg.payload;\nconst internalDeviceId = msg.internal_device_id;\n\n\n// --- Validate the API response structure ---\nif (!apiResponse || !apiResponse.status || !Array.isArray(apiResponse.data) || apiResponse.data.length === 0) {\n    // FIX: Combine message and object into a single string argument for node.warn()\n    node.warn(`Invalid API response or empty data array received. Original message: ${JSON.stringify(msg)}`);\n    return null;\n}\n\nconst printerData = apiResponse.data[0];\nconst job = printerData.job;\n\nif (!job || !job.id) {\n    node.warn(\"No job information in API response for \" + internalDeviceId);\n    return null;\n}\n\nconst simplyprintJobId = job.id.toString();\nconst filename = job.file;\nconst status = job.state;\nconst endTime = job.ended;\nconst durationSeconds = job.time ? Math.round(job.time) : null;\nconst filamentGrams = null; // Placeholder\n\nlet startTime = null;\nif (endTime && typeof durationSeconds === 'number') {\n    try {\n        const endDate = new Date(endTime);\n        const startDate = new Date(endDate.getTime() - (durationSeconds * 1000));\n        startTime = startDate.toISOString();\n    } catch (e) {\n        node.error(`Could not calculate start time for job ${simplyprintJobId}: ${e}`);\n    }\n}\n\n// Overwrite msg.params with the array for the next node\nmsg.params = [\n    simplyprintJobId,\n    internalDeviceId,\n    startTime,\n    endTime,\n    durationSeconds,\n    status,\n    filename,\n    filamentGrams\n];\n\n// Clear the payload as it's not needed by the postgres node\nmsg.payload = {};\n\n// Return the single, prepared message\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 840,
        "wires": [
            [
                "2e03ce18e7b43a0e"
            ]
        ]
    },
    {
        "id": "2e03ce18e7b43a0e",
        "type": "postgresql",
        "z": "28ad1cc5547cbab4",
        "name": "Insert/Update Job Data",
        "query": "INSERT INTO print_jobs (\n    simplyprint_job_id, device_id, start_time, end_time,\n    duration_seconds, status, filename, filament_used_g\n)\nVALUES ($1, $2, $3, $4, $5, $6, $7, $8)\nON CONFLICT (simplyprint_job_id) DO UPDATE SET\n    end_time = EXCLUDED.end_time,\n    duration_seconds = EXCLUDED.duration_seconds,\n    status = EXCLUDED.status;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1350,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "02ea663491d7ef4b",
        "type": "inject",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Poll All Printers Every 30s",
        "props": [],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "d6bbc141d674690b"
            ]
        ]
    },
    {
        "id": "d6bbc141d674690b",
        "type": "postgresql",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Get All Devices Config",
        "query": "SELECT * FROM devices WHERE device_id != 'environment';",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 220,
        "y": 260,
        "wires": [
            [
                "3bf69c618d3771ca"
            ]
        ],
        "info": "**Purpose:** Fetches the configuration for all active 3D printers from the `devices` table in the database.\r\n\r\n**Trigger:** Fired every 30 seconds by the \"Poll All Printers\" inject node.\r\n\r\n**Output:**\r\n- `msg.payload`: An array of objects, where each object is a row from the `devices` table.\r\n\r\n**Next Step:** The payload is passed to a `split` node to process each device individually."
    },
    {
        "id": "3bf69c618d3771ca",
        "type": "split",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "For Each Device",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 250,
        "y": 320,
        "wires": [
            [
                "f3858a8857ffde13"
            ]
        ]
    },
    {
        "id": "b27da203e5c23ee9",
        "type": "function",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Prepare SimplyPrint Request",
        "func": "const device = msg.payload;\n// Save the full config for later enrichment steps\nmsg.original_device_config = device; \n\nmsg.method = \"POST\";\nmsg.headers = {\n    'X-API-KEY': device.sp_api_key, // Use the key from this specific device's row\n    'Content-Type': 'application/json'\n};\nmsg.url = `https://api.simplyprint.io/${device.sp_company_id}/printers/Get`;\nmsg.payload = { \"pid\": parseInt(device.simplyprint_id, 10) };\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 600,
        "wires": [
            [
                "ea15470d20a551d0",
                "b9a4c25e40aeeef0"
            ]
        ]
    },
    {
        "id": "f4ec324598c62401",
        "type": "function",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Prepare PrusaLink Request",
        "func": "const device = msg.payload;\n\n// Save the full device config so we can use it again in the next step\nmsg.original_device_config = device;\n\n// Prepare the FIRST API call to the /printer endpoint\nmsg.url = `http://${device.api_ip}/api/printer`;\nmsg.headers = { 'X-Api-Key': device.api_key };\nmsg.payload = {}; // This is a GET request, so payload is empty\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 240,
        "wires": [
            [
                "2ad6a970bba49d5f",
                "e4a60772850676ff"
            ]
        ]
    },
    {
        "id": "ea15470d20a551d0",
        "type": "http request",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Call SimplyPrint API",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "x": 680,
        "y": 660,
        "wires": [
            [
                "5dda7fb58e2cb2a2",
                "d43ff076a1a9a7bf"
            ]
        ]
    },
    {
        "id": "2ad6a970bba49d5f",
        "type": "http request",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Call Prusa /printer API",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 1080,
        "y": 240,
        "wires": [
            [
                "153a9432435bf76b",
                "574260bbc0dc2b2f"
            ]
        ]
    },
    {
        "id": "153a9432435bf76b",
        "type": "function",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Prepare Prusa /job Request",
        "func": "// Store the response from the first API call (/printer)\nmsg.printer_api_response = msg.payload;\n\n// Retrieve the saved device config from the first step\nconst device = msg.original_device_config;\n\n// Prepare the SECOND API call to the /job endpoint\nmsg.url = `http://${device.api_ip}/api/job`;\n\n// Re-apply the authentication headers for this second request\nmsg.headers = { 'X-Api-Key': device.api_key };\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 360,
        "wires": [
            [
                "23ca3a3983ca05ef",
                "7633245e76a0f219"
            ]
        ]
    },
    {
        "id": "23ca3a3983ca05ef",
        "type": "http request",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Call Prusa /job API",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 1510,
        "y": 500,
        "wires": [
            [
                "bfb231c8765823a8",
                "18c9e99643ee6bcd"
            ]
        ]
    },
    {
        "id": "bfb231c8765823a8",
        "type": "function",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Parse PrusaLink Data",
        "func": "// --- Get data from previous nodes ---\nconst printer_response = msg.printer_api_response;\nconst job_response = msg.payload;\nconst device = msg.original_device_config;\nconst last_status = flow.get('printer_status_' + device.device_id) || {};\n\n// --- Safety Check ---\nif (!printer_response || !printer_response.state) {\n    node.warn(`No valid /printer response for ${device.friendly_name}. Skipping.`);\n    return null;\n}\n\n// --- Parse Current and Previous States ---\nconst stateFlags = printer_response.state?.flags ?? {};\nconst is_printing_now = stateFlags.printing ?? false;\nconst was_printing = last_status.is_printing ?? false;\nconst current_filename = job_response?.job?.file?.name ?? null;\n\n// --- NEW: Smart Job Creation/Update Logic ---\n// This logic handles the creation of new jobs for reprints.\nif (is_printing_now && !was_printing && current_filename) {\n    // This is a \"Job Start\" event. A print has just begun.\n    // We will create a NEW job record every time this happens.\n    const new_job_msg = {\n        topic: \"CREATE_NEW_PRUSA_JOB\",\n        query: `\n            INSERT INTO print_jobs (device_id, filename, status, start_time)\n            VALUES ($1, $2, 'printing', NOW());\n        `,\n        params: [device.device_id, current_filename]\n    };\n    // Use node.send to fire this off as a separate action.\n    // The main flow will continue in parallel.\n    node.send([null, null, new_job_msg]); // Sending to a NEW 3rd output\n}\n// --- END of NEW Logic ---\n\n// --- Store the current status in memory for the next cycle ---\nflow.set('printer_status_' + device.device_id, {\n    is_printing: is_printing_now,\n    filename: current_filename,\n    device_id: device.device_id\n});\n\n// --- Job Completion Detection (Existing Logic) ---\nif (was_printing && !is_printing_now) {\n    const end_of_job_msg = {\n        topic: \"CALCULATE_FINAL_ENERGY\",\n        params: [last_status.device_id, last_status.filename]\n    };\n    \n    // --- NEW: Add logic to update the job status to 'done' ---\n    const update_job_status_msg = {\n        topic: \"UPDATE_PRUSA_JOB_STATUS\",\n        query: `\n            UPDATE print_jobs \n            SET status = 'done', end_time = NOW(), duration_seconds = EXTRACT(EPOCH FROM (NOW() - start_time))\n            WHERE device_id = $1 AND filename = $2 AND status = 'printing';\n        `,\n        params: [last_status.device_id, last_status.filename]\n    };\n    node.send([null, end_of_job_msg, update_job_status_msg]); // Send to outputs 2 and 3\n}\n\n// --- Prepare the original status insert message for Output 1 ---\n// --- Prepare the main status insert message for Output 1 ---\nconst params = [\n    new Date().toISOString(), // 1\n    device.device_id, // 2\n    printer_response.state?.text ?? 'Unknown', // 3\n    stateFlags.operational ?? false, // 4\n    is_printing_now, // 5\n    stateFlags.paused ?? false, // 6\n    stateFlags.error ?? false, // 7\n    stateFlags.busy ?? false, // 8\n    printer_response.temperature?.tool0?.actual ?? null, // 9\n    printer_response.temperature?.tool0?.target ?? null, // 10\n    printer_response.temperature?.bed?.actual ?? null, // 11\n    printer_response.temperature?.bed?.target ?? null, // 12\n    printer_response.telemetry?.material ?? null, // 13\n    current_filename, // 14\n    (job_response?.progress?.completion ?? 0) * 100, // 15\n    job_response?.progress?.printTimeLeft ?? null, // 16\n    // --- THIS IS THE FIX ---\n    // Add a null placeholder for ambient_temp_c, which PrusaLink does not provide.\n    null // 17\n];\nmsg.params = params;",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 640,
        "wires": [
            [
                "76faa27c3f22fa95",
                "cda295997d384d1b",
                "3bc77aad3c1f970d"
            ],
            [
                "81d3cb6157d204a7",
                "853372a55c401c65"
            ],
            [
                "3893c4f9f6dfef59",
                "1a68329a7809840d"
            ]
        ]
    },
    {
        "id": "f297e1970a6e9404",
        "type": "function",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Route by Data Source Strategy",
        "func": "const device = msg.payload;\n\n// If it has an api_ip, it's a PrusaLink device.\nif (device.api_ip && device.api_ip !== '') {\n    // Send to Output 1\n    return [msg, null];\n}\n// Otherwise, if it has a simplyprint_id, it's a SimplyPrint device.\nelse if (device.simplyprint_id) {\n    // Send to Output 2\n    return [null, msg];\n}\n// Ignore devices that don't match.\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 440,
        "wires": [
            [
                "f4ec324598c62401",
                "d72cfa8a09b4ac1a"
            ],
            [
                "9745ef2b3e3aa7e2",
                "b27da203e5c23ee9"
            ]
        ]
    },
    {
        "id": "76faa27c3f22fa95",
        "type": "link out",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Send Prusa Data to DB",
        "mode": "link",
        "links": [
            "af2f0b8c71e0ef6c"
        ],
        "x": 2590,
        "y": 480,
        "wires": [],
        "l": true
    },
    {
        "id": "5dda7fb58e2cb2a2",
        "type": "link out",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Call Job Detail Subflow",
        "mode": "link",
        "links": [
            "31749266865874cf"
        ],
        "x": 710,
        "y": 720,
        "wires": [],
        "l": true
    },
    {
        "id": "bf152e33e1198b2b",
        "type": "link in",
        "z": "c4582a5c3c4d6d09",
        "g": "5f3f1baac114fb7c",
        "name": "Receive Job Upsert Data",
        "links": [
            "566c89287199eab1"
        ],
        "x": 2930,
        "y": 340,
        "wires": [
            [
                "2686e15ef3e6984e"
            ]
        ],
        "l": true
    },
    {
        "id": "2686e15ef3e6984e",
        "type": "postgresql",
        "z": "c4582a5c3c4d6d09",
        "g": "5f3f1baac114fb7c",
        "name": "Upsert Job Details",
        "query": "INSERT INTO print_jobs (\n    simplyprint_job_id, device_id, start_time, end_time, duration_seconds,\n    status, filename, filament_used_g, gcode_analysis_data, part_metadata,\n    nozzle_diameter, filament_diameter\n) \nVALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)\nON CONFLICT (simplyprint_job_id) \nDO UPDATE SET \n    status = EXCLUDED.status,\n    end_time = EXCLUDED.end_time,\n    duration_seconds = EXCLUDED.duration_seconds,\n    filament_used_g = EXCLUDED.filament_used_g,\n    gcode_analysis_data = EXCLUDED.gcode_analysis_data,\n    part_metadata = EXCLUDED.part_metadata,\n    nozzle_diameter = EXCLUDED.nozzle_diameter,\n    filament_diameter = EXCLUDED.filament_diameter;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 3150,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "af2f0b8c71e0ef6c",
        "type": "link in",
        "z": "c4582a5c3c4d6d09",
        "g": "5f3f1baac114fb7c",
        "name": "Receive Status Insert Data",
        "links": [
            "76faa27c3f22fa95",
            "d980d78960bfd999"
        ],
        "x": 2910,
        "y": 200,
        "wires": [
            [
                "434602b76f18b34a"
            ]
        ],
        "l": true
    },
    {
        "id": "434602b76f18b34a",
        "type": "postgresql",
        "z": "c4582a5c3c4d6d09",
        "g": "5f3f1baac114fb7c",
        "name": "Insert Standardized Status",
        "query": "INSERT INTO printer_status (\n    timestamp, device_id, state_text, is_operational, is_printing, \n    is_paused, is_error, is_busy, nozzle_temp_actual, nozzle_temp_target, \n    bed_temp_actual, bed_temp_target, material, filename, progress_percent, \n    time_left_seconds, ambient_temp_c\n) \nVALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17)\nON CONFLICT (device_id, timestamp) \nDO UPDATE SET \n    state_text = EXCLUDED.state_text, \n    is_operational = EXCLUDED.is_operational, \n    is_printing = EXCLUDED.is_printing, \n    is_paused = EXCLUDED.is_paused, \n    is_error = EXCLUDED.is_error, \n    is_busy = EXCLUDED.is_busy, \n    nozzle_temp_actual = EXCLUDED.nozzle_temp_actual, \n    nozzle_temp_target = EXCLUDED.nozzle_temp_target, \n    bed_temp_actual = EXCLUDED.bed_temp_actual, \n    bed_temp_target = EXCLUDED.bed_temp_target, \n    material = EXCLUDED.material, \n    filename = EXCLUDED.filename, \n    progress_percent = EXCLUDED.progress_percent, \n    time_left_seconds = EXCLUDED.time_left_seconds,\n    ambient_temp_c = EXCLUDED.ambient_temp_c;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 3160,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "9745ef2b3e3aa7e2",
        "type": "debug",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Output 2: Route by Data Source Strategy",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 460,
        "wires": []
    },
    {
        "id": "e4a60772850676ff",
        "type": "debug",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Prepare PrusaLink Request output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 320,
        "wires": []
    },
    {
        "id": "574260bbc0dc2b2f",
        "type": "debug",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Call Prusa /printer API output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 240,
        "wires": []
    },
    {
        "id": "7633245e76a0f219",
        "type": "debug",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Prepare Prusa /job Request",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 320,
        "wires": []
    },
    {
        "id": "18c9e99643ee6bcd",
        "type": "debug",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Call Prusa /job API",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 460,
        "wires": []
    },
    {
        "id": "3bc77aad3c1f970d",
        "type": "switch",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Is Prusa Printing?",
        "property": "params[4]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2410,
        "y": 640,
        "wires": [
            [
                "38850782ee90eabb",
                "075caf0daf376cc6",
                "95202ab5fa233a47"
            ]
        ]
    },
    {
        "id": "38850782ee90eabb",
        "type": "function",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Set Params for Energy Subflow",
        "func": "// msg.params[1] is device_id, msg.params[13] is filename\nmsg.params = [msg.params[1], msg.params[13]];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 560,
        "wires": [
            [
                "6f5a6bdde6455ef0"
            ]
        ]
    },
    {
        "id": "6f5a6bdde6455ef0",
        "type": "link out",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "878bdfc6b43e57cb"
        ],
        "x": 3000,
        "y": 560,
        "wires": [],
        "l": true
    },
    {
        "id": "5a0b6ccc23334296",
        "type": "postgresql",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Check if Job Analyzed",
        "query": "SELECT gcode_analysis_data FROM print_jobs WHERE device_id = $1 AND filename = $2;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 2980,
        "y": 660,
        "wires": [
            [
                "6d7486e2afc97f13"
            ]
        ]
    },
    {
        "id": "6d7486e2afc97f13",
        "type": "switch",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Is Analysis Missing?",
        "property": "payload[0].gcode_analysis_data",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3220,
        "y": 660,
        "wires": [
            [
                "9fb13978446f7b8a"
            ]
        ]
    },
    {
        "id": "9fb13978446f7b8a",
        "type": "function",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Prepare G-code Download",
        "func": "const device = msg.original_device_config;\nconst filename = msg.params[13];\n\n// Store these for the final database update\nmsg.device_id_for_update = msg.params[1];\nmsg.filename_for_update = filename;\n\nmsg.headers = { 'X-Api-Key': device.api_key };\nmsg.url = `http://${device.api_ip}/api/files/local/${filename}`;\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3280,
        "y": 700,
        "wires": [
            [
                "8b6805e59ca0e048"
            ]
        ]
    },
    {
        "id": "8b6805e59ca0e048",
        "type": "http request",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Download G-code File",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3300,
        "y": 740,
        "wires": [
            [
                "e5f04ef6f5bc94fc"
            ]
        ]
    },
    {
        "id": "e5f04ef6f5bc94fc",
        "type": "function",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Parse G-code & Prep DB",
        "func": "const gcodeText = msg.payload;\nif (typeof gcodeText !== 'string' || gcodeText.length === 0) {\n    node.warn(\"G-code content was empty, skipping analysis.\");\n    return null;\n}\n\n// --- JavaScript version of your Python parser ---\nconst metadata = {};\nconst pattern_equals = /^;\\s*([^=]+?)\\s*=\\s*(.*)/;\nconst lines = gcodeText.split('\\\\n');\n\nfor (const line of lines) {\n    const match = line.match(pattern_equals);\n    if (match) {\n        const key = match[1].trim();\n        const value = match[2].trim();\n        metadata[key] = value;\n    }\n}\n\nconst analysis_data = {};\nif (metadata.layer_height) {\n    analysis_data.layerHeight = parseFloat(metadata.layer_height);\n}\nif (metadata.model_size) {\n    const dims = metadata.model_size.split(',');\n    if (dims.length === 3) {\n        analysis_data.modelSize = {\n            x: parseFloat(dims[0]),\n            y: parseFloat(dims[1]),\n            z: parseFloat(dims[2])\n        };\n    }\n}\n// --- End of parser ---\n\n// Prepare parameters for the final database update\nmsg.params = [\n    JSON.stringify(analysis_data), // The new analysis object\n    msg.device_id_for_update,\n    msg.filename_for_update\n];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3330,
        "y": 780,
        "wires": [
            [
                "060a8b27d87f8bf9"
            ]
        ]
    },
    {
        "id": "060a8b27d87f8bf9",
        "type": "postgresql",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "UPDATE print_jobs with Analysis",
        "query": "UPDATE print_jobs SET gcode_analysis_data = $1 WHERE device_id = $2 AND filename = $3;\n",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 3380,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "f3858a8857ffde13",
        "type": "function",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Get Previous State",
        "func": "// Get the device_id from the incoming message\nconst deviceId = msg.payload.device_id;\n\n// Retrieve the last known status for this specific device from flow-level memory.\n// The '|| {}' provides a safe default if nothing is stored yet.\nconst lastStatus = flow.get('printer_status_' + deviceId) || {};\n\n// Attach the retrieved last_status to the message so subsequent nodes can access it\nmsg.last_status = lastStatus;\n\n// Pass the message along the flow\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 380,
        "wires": [
            [
                "f297e1970a6e9404"
            ]
        ]
    },
    {
        "id": "81d3cb6157d204a7",
        "type": "function",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Prepare Final Energy Query",
        "func": "// This function will receive a message with device_id and filename\nconst device_id = msg.params[0];\nconst filename = msg.params[1];\n\n// This query will calculate and update the session_energy_wh in one go\nmsg.topic = \"UPDATE_FINAL_ENERGY\";\nmsg.query = `\n    WITH final_energy AS (\n        SELECT energy_total_wh\n        FROM energy_data\n        WHERE device_id = $1\n        ORDER BY timestamp DESC\n        LIMIT 1\n    )\n    UPDATE print_jobs\n    SET session_energy_wh = final_energy.energy_total_wh - print_jobs.start_energy_wh\n    FROM final_energy\n    WHERE print_jobs.device_id = $1\n    AND print_jobs.filename = $2\n    AND print_jobs.start_energy_wh IS NOT NULL;\n`;\nmsg.params = [device_id, filename]; // Parameters for the query\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 700,
        "wires": [
            [
                "76e36f5c70691ad5"
            ]
        ]
    },
    {
        "id": "76e36f5c70691ad5",
        "type": "link out",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Trigger Final Energy Calc",
        "mode": "link",
        "links": [
            "b882adb136a0e909"
        ],
        "x": 1930,
        "y": 760,
        "wires": [],
        "l": true,
        "info": "This node triggers the separate Historical Enrichment Flow, which is a major processing step"
    },
    {
        "id": "d43ff076a1a9a7bf",
        "type": "debug",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Call SimplyPrint API output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 660,
        "wires": []
    },
    {
        "id": "b9a4c25e40aeeef0",
        "type": "debug",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Prepare SimplyPrint Request output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 600,
        "wires": []
    },
    {
        "id": "d72cfa8a09b4ac1a",
        "type": "debug",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Output 1: Route by Data Source Strategy",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 420,
        "wires": []
    },
    {
        "id": "8df1e9e0aa3c3d82",
        "type": "comment",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Group 1: Data Input & Routing",
        "info": "This group's responsibility is to fetch the raw data from its source (the database for configuration, and then the printer APIs).",
        "x": 300,
        "y": 100,
        "wires": []
    },
    {
        "id": "abc0bca12f6f89e4",
        "type": "comment",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Group 2: Data Processing & Enrichment",
        "info": "    This group takes the raw API data, parses it, standardizes it, detects job state changes, and triggers further enrichment processes.",
        "x": 2310,
        "y": 460,
        "wires": []
    },
    {
        "id": "711e7c68cc8edf38",
        "type": "comment",
        "z": "c4582a5c3c4d6d09",
        "g": "5f3f1baac114fb7c",
        "name": "Group 3: Data Output",
        "info": "This group's sole responsibility is to take the fully processed and standardized data and save it to the database. It is primarily composed of your \"database sink\" nodes.\n",
        "x": 2900,
        "y": 100,
        "wires": []
    },
    {
        "id": "7e24e1bcd17d804e",
        "type": "comment",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "DB: Get Device Configurations",
        "info": "**Purpose:** Fetches the configuration for all active 3D printers from the `devices` table in the database.\n\n**Trigger:** Fired every 30 seconds by the \"Poll All Printers\" inject node.\n\n**Output:**\n- `msg.payload`: An array of objects, where each object is a row from the `devices` table.\n\n**Next Step:** The payload is passed to a `split` node to process each device individually.",
        "x": 490,
        "y": 260,
        "wires": [],
        "icon": "font-awesome/fa-database"
    },
    {
        "id": "fa5fe3526a66b815",
        "type": "comment",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "Route: PrusaLink or SimplyPrint?",
        "info": "**Purpose:** Inspects the configuration for a single device and routes the flow based on the data source available.\n\n**Inputs:**\n- `msg.payload`: A single device object from the database.\n\n**Logic:**\n- If `api_ip` exists, the device uses the local PrusaLink API. The message is sent to **Output 1**.\n- If `simplyprint_id` exists, the device is managed via the SimplyPrint cloud service. The message is sent to **Output 2**.\n- If neither exists, the message is dropped.\n\n**Outputs:**\n- **Output 1:** For PrusaLink devices.\n- **Output 2:** For SimplyPrint devices.",
        "x": 370,
        "y": 480,
        "wires": []
    },
    {
        "id": "ad0abf33e2e61735",
        "type": "comment",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "API: Get Prusa Printer State",
        "info": "**Purpose:** Makes an HTTP GET request to the `/api/printer` endpoint of a local PrusaLink-enabled printer.\n\n**Inputs:**\n- `msg.url`: The target URL (e.g., http://192.168.1.10/api/printer).\n- `msg.headers`: Contains the `X-Api-Key` for authentication.\n- `msg.original_device_config`: The full database row for this device is preserved for later use.\n\n**Output:**\n- `msg.payload`: The JSON response from the printer, containing state, temperatures, and flags.\n- `msg.original_device_config`: The original device config is passed through.\n\n**Next Step:** The response is passed to the \"Prepare Prusa /job Request\" node to make the second required API call.",
        "x": 1080,
        "y": 200,
        "wires": []
    },
    {
        "id": "721f5a33a2061419",
        "type": "comment",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Process: Parse PrusaLink Response & Detect Job State",
        "info": "**Purpose:** This is the main processing hub for PrusaLink devices. It combines the `/printer` and `/job` API responses, standardizes the data, and detects if a print job has just started or finished.\n\n**Inputs:**\n- `msg.printer_api_response`: The JSON response from the `/printer` endpoint.\n- `msg.payload`: The JSON response from the `/job` endpoint.\n- `msg.original_device_config`: The full database config for the device.\n- `msg.last_status`: The previous state of the printer (is_printing, filename) retrieved from flow memory.\n\n**Logic:**\n1.  Compares `is_printing_now` with `was_printing` from the previous cycle.\n2.  **Job Start Detection:** If `!was_printing && is_printing_now`, it triggers the \"Record Start Energy\" subflow.\n3.  **Job End Detection:** If `was_printing && !is_printing_now`, it triggers the \"Calculate Final Energy\" subflow.\n4.  Formats the combined data into a standardized structure for the `printer_status` database table.\n\n**Outputs:**\n- **Output 1:** A message with standardized `params` for inserting into the `printer_status` table. Sent on every poll.\n- **Output 2:** A trigger message (`CALCULATE_FINAL_ENERGY`) sent *only* when a job has just finished.",
        "x": 2000,
        "y": 520,
        "wires": []
    },
    {
        "id": "f81e90cc3d42a0f9",
        "type": "comment",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Trigger: Enrich SimplyPrint Job",
        "info": "**Purpose:** For SimplyPrint devices, this node triggers the \"Historical Enrichment Flow\".\n\n**Logic:**\n- It passes the live API response and the device's database configuration to the subflow.\n- The subflow is responsible for making additional API calls to SimplyPrint to get rich details about the current job (e.g., filament usage, start/end times, G-code analysis data).\n- This separation keeps the main flow clean, delegating the complex enrichment logic to a dedicated subflow.\n\n**Next Step:** The \"Historical Enrichment Flow\" will execute and eventually send messages to the \"Data Output\" link-in nodes (`Upsert to print_jobs`, `Insert to printer_status`, etc.).",
        "x": 3030,
        "y": 520,
        "wires": []
    },
    {
        "id": "52a6268367a8d644",
        "type": "comment",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "DB: Is G-code Analyzed?",
        "info": "**Purpose:** Prevents re-analyzing the G-code for a print job that is already in progress and has been analyzed.\n\n**Inputs:**\n- `msg.params`: Contains the `device_id` and `filename`.\n\n**Logic:**\n- Queries the `print_jobs` table to check if the `gcode_analysis_data` column is `NULL` for the current job.\n- If the column is `NULL` (meaning it needs analysis), the message is passed to the \"Is Analysis Missing?\" switch.\n\n**Next Step:** If analysis is needed, the flow proceeds to download and parse the G-code file.",
        "x": 2890,
        "y": 620,
        "wires": [],
        "icon": "font-awesome/fa-database"
    },
    {
        "id": "af3255605d249b0d",
        "type": "comment",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Process: Parse G-code Metadata",
        "info": "**Purpose:** Parses the downloaded G-code file text to extract key metadata left by the slicer (e.g., PrusaSlicer).\n\n**Inputs:**\n- `msg.payload`: The raw text content of the `.gcode` file.\n\n**Logic:**\n- Uses regular expressions to find and extract key-value pairs from the G-code comments (lines starting with `;`).\n- It specifically looks for metadata like `layer_height`, `model_size`, etc.\n- The extracted metadata is formatted into a JSON object.\n\n**Output:**\n- `msg.params`: An array containing the JSON analysis data, `device_id`, and `filename`, ready for the final database `UPDATE` query.",
        "x": 3670,
        "y": 820,
        "wires": []
    },
    {
        "id": "f571406301ee9470",
        "type": "comment",
        "z": "c4582a5c3c4d6d09",
        "g": "5f3f1baac114fb7c",
        "name": "DB: Insert/Update Printer Status",
        "info": "**Purpose:** Inserts a new row into the `printer_status` time-series table. This serves as a log of the printer's state at a specific point in time.\n\n**Triggered By:**\n- The \"Parse PrusaLink Data\" node for Prusa printers.\n- The \"Historical Enrichment Flow\" for SimplyPrint printers.\n\n**Logic:**\n- The incoming message contains `msg.params`, an array with all the required data points (timestamp, device_id, temps, state, etc.) in a standardized format.\n- An `INSERT` query is executed. It uses `ON CONFLICT DO UPDATE` to handle rare cases of duplicate timestamps, ensuring the latest data is always present.",
        "x": 3170,
        "y": 160,
        "wires": [],
        "icon": "font-awesome/fa-database"
    },
    {
        "id": "526fc8f040df3cba",
        "type": "comment",
        "z": "c4582a5c3c4d6d09",
        "g": "5f3f1baac114fb7c",
        "name": "DB: Upsert Print Job",
        "info": "**Purpose:** Inserts a new record into the `print_jobs` table when a job is first detected, or updates an existing record as more details become available (e.g., final status, filament usage).\n\n**Triggered By:**\n- The \"Historical Enrichment Flow\" after fetching job details from the SimplyPrint API.\n\n**Logic:**\n- Uses `INSERT ... ON CONFLICT (simplyprint_job_id) DO UPDATE`.\n- This allows the flow to create the job record once and then enrich it over time without creating duplicates.",
        "x": 3130,
        "y": 300,
        "wires": [],
        "icon": "font-awesome/fa-database"
    },
    {
        "id": "c59b3ae72ac4073a",
        "type": "postgresql",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Check if Prusa Job is Analyzed",
        "query": "-- Check if analysis data already exists for this job\nSELECT gcode_analysis_data FROM print_jobs WHERE device_id = $1 AND filename = $2;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 2610,
        "y": 780,
        "wires": [
            [
                "de12c14d1a3c57d5"
            ]
        ]
    },
    {
        "id": "075caf0daf376cc6",
        "type": "function",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Prepare Job Analysis Check",
        "func": "const device_id = msg.params[1];\nconst filename = msg.params[13];\n\n// --- THIS IS THE FIX ---\n// Overwrite msg.params with a NEW array containing ONLY the 2 parameters\n// that the \"Check if Job Analyzed\" node is expecting.\nmsg.params = [device_id, filename];\n\n// We also need to preserve the original device configuration from the start of the flow\n// so that we can use it later to get the api_ip and api_key for downloading the G-code.\nmsg.preserved_device_config = msg.original_device_config;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2540,
        "y": 740,
        "wires": [
            [
                "c59b3ae72ac4073a"
            ]
        ]
    },
    {
        "id": "de12c14d1a3c57d5",
        "type": "switch",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Is Analysis Missing?",
        "property": "payload[0].gcode_analysis_data",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2640,
        "y": 820,
        "wires": [
            [
                "f56cc50a4481ddce"
            ]
        ]
    },
    {
        "id": "f56cc50a4481ddce",
        "type": "function",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Build PrusaLink G-code URL",
        "func": "// The device config was preserved in the \"Prepare Analysis Check\" node.\nconst device = msg.preserved_device_config;\n// The filename was the second parameter we set.\nconst filename = msg.params[1];\n\n// Preserve the device_id and filename for the final database update.\nmsg.device_id_for_update = msg.params[0];\nmsg.filename_for_update = msg.params[1];\n\n// PrusaLink API endpoint for downloading a file from the local SD card.\nmsg.url = `http://${device.api_ip}/api/files/local/${encodeURIComponent(filename)}`;\n\nmsg.headers = {\n    'X-Api-Key': device.api_key\n};\n\n// Clear payload for the GET request.\nmsg.payload = {};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 860,
        "wires": [
            [
                "31b1ea47700de376"
            ]
        ]
    },
    {
        "id": "31b1ea47700de376",
        "type": "http request",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "API: Download G-code",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2740,
        "y": 900,
        "wires": [
            [
                "4958a8c7f64eaabd"
            ]
        ]
    },
    {
        "id": "4958a8c7f64eaabd",
        "type": "file",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Save to /tmp/prusa_gcode.gcode",
        "filename": "/tmp/prusa_gcode.gcode",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2820,
        "y": 940,
        "wires": [
            [
                "af950d41f1c8252e"
            ]
        ]
    },
    {
        "id": "af950d41f1c8252e",
        "type": "function",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Build Prusa Analyzer Command",
        "func": "// We need a unique job ID for the analyzer script.\n// PrusaLink jobs don't have a numeric ID like SimplyPrint,\n// so we will create a unique identifier from the device and filename.\nconst unique_job_id = msg.device_id_for_update + '_' + msg.filename_for_update;\n\n// The main python command is in the exec node.\n// This payload contains only the arguments for the script.\nmsg.payload = `/home/ubuntu/monitor_ml/gcode_analyzer.py --file /tmp/prusa_gcode.gcode --jobid '${unique_job_id}'`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2870,
        "y": 980,
        "wires": [
            [
                "b8edd70e91510d03"
            ]
        ]
    },
    {
        "id": "b8edd70e91510d03",
        "type": "exec",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "command": "/home/ubuntu/monitor_ml/venv/bin/python",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run G-code Analyzer",
        "x": 2880,
        "y": 1020,
        "wires": [
            [
                "19af9013e2ec06d3"
            ],
            [],
            []
        ]
    },
    {
        "id": "19af9013e2ec06d3",
        "type": "json",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Parse Analyzer Output",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2940,
        "y": 1060,
        "wires": [
            [
                "cb5a40c591c23af4"
            ]
        ]
    },
    {
        "id": "cb5a40c591c23af4",
        "type": "function",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Prepare Prusa Analysis for DB",
        "func": "const analysisResult = msg.payload;\n\n// Stop if the script failed to produce a thumbnail.\nif (!analysisResult || !analysisResult.thumbnail_url) {\n    node.warn(\"Prusa G-code analysis did not return a thumbnail. Stopping.\");\n    return null;\n}\n\n// Prepare parameters for the final SQL UPDATE query.\n// [$1: analysis_data, $2: thumbnail_url, $3: device_id, $4: filename]\nmsg.params = [\n    JSON.stringify(analysisResult),\n    analysisResult.thumbnail_url,\n    msg.device_id_for_update,\n    msg.filename_for_update\n];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3010,
        "y": 1100,
        "wires": [
            [
                "c4637953a58714ae"
            ]
        ]
    },
    {
        "id": "c4637953a58714ae",
        "type": "postgresql",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "DB: UPDATE Job with Analysis",
        "query": "UPDATE print_jobs\nSET\n  gcode_analysis_data = $1,\n  thumbnail_url = $2\nWHERE\n  device_id = $3 AND filename = $4;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 3040,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "08941a4001c4ec9a",
        "type": "inject",
        "z": "c4582a5c3c4d6d09",
        "g": "b1bed7a2a4a4d39a",
        "name": "3389466",
        "props": [
            {
                "p": "original_device_config",
                "v": "{\"device_id\":\"prusa_i3_mk2_virtuell_schreibtisch\",\"device_model\":\"i3 MK2\",\"shelly_id\":null,\"api_ip\":null,\"api_key\":null,\"friendly_name\":\"Prusa i3 MK2 virtuell Schreibtisch\",\"location\":\"Fab Lab Fabulous St. Pauli\",\"notes\":null,\"printer_size_category\":\"Unknown\",\"simplyprint_id\":\"35675\",\"last_seen\":\"2025-07-18T06:26:34.482Z\",\"sp_company_id\":\"17378\",\"sp_api_key\":\"a012f5a8-4046-4fb5-98fe-a95d977fa3c5\",\"gcode_preview_host\":null,\"gcode_preview_api_key\":null,\"bed_width\":250,\"bed_depth\":210}",
                "vt": "json"
            },
            {
                "p": "payload"
            },
            {
                "p": "live_data",
                "v": "{\"data\":[{\"id\":35675,\"job\":{\"uid\":\"4f200e18-2230-4425-96cc-c1c5eec3e820\"},\"printer\":{\"state\":\"operational\"}}]}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"data\":[{\"id\":35675,\"job\":{\"uid\":\"4f200e18-2230-4425-96cc-c1c5eec3e820\"},\"printer\":{\"state\":\"operational\"}}]}",
        "payloadType": "json",
        "x": 360,
        "y": 720,
        "wires": [
            [
                "5dda7fb58e2cb2a2"
            ]
        ]
    },
    {
        "id": "95202ab5fa233a47",
        "type": "function",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Format Params for Analysis Check",
        "func": "// This function receives the full message with 16 parameters from the main status update.\n// It correctly extracts only the two parameters needed for the next database node.\n\n// Preserve the original device config for the download step later in the chain.\nmsg.preserved_device_config = msg.original_device_config;\n\n// Overwrite msg.params with a new array containing only device_id and filename.\nmsg.params = [\n    msg.params[1], // device_id\n    msg.params[13] // filename\n];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2720,
        "y": 660,
        "wires": [
            [
                "5a0b6ccc23334296"
            ]
        ]
    },
    {
        "id": "cda295997d384d1b",
        "type": "debug",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1970,
        "y": 580,
        "wires": []
    },
    {
        "id": "3893c4f9f6dfef59",
        "type": "postgresql",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "Prusa Job State Handler",
        "query": "",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 2200,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "1a68329a7809840d",
        "type": "debug",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2170,
        "y": 780,
        "wires": []
    },
    {
        "id": "853372a55c401c65",
        "type": "debug",
        "z": "c4582a5c3c4d6d09",
        "g": "39cad17b39cec1d1",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2250,
        "y": 600,
        "wires": []
    },
    {
        "id": "31749266865874cf",
        "type": "link in",
        "z": "088fab733419c707",
        "g": "d46e71e1a4ec093a",
        "name": "Get Rich Details for Job1",
        "links": [
            "5dda7fb58e2cb2a2"
        ],
        "x": 370,
        "y": 460,
        "wires": [
            [
                "9253f90316936f73"
            ]
        ],
        "l": true,
        "info": "**Purpose:** The entry point for this sub-flow. It listens for trigger messages from the main `Master Ingestion Flow`.\r\n\r\n**Input:** A `msg` object containing `msg.original_device_config` and `msg.payload` (with the live data from the initial poll)."
    },
    {
        "id": "9253f90316936f73",
        "type": "function",
        "z": "088fab733419c707",
        "g": "d46e71e1a4ec093a",
        "name": "Prepare Single Job Request",
        "func": "const live_data = msg.payload;\nconst device = msg.original_device_config;\n\n// --- DYNAMICALLY FIND THE CORRECT PRINTER ---\nconst target_printer_id = parseInt(device.simplyprint_id, 10);\nconst printer_data = live_data.data?.find(p => p.id === target_printer_id);\n\nif (!printer_data) {\n    node.error(`Prepare Request Error: Did not find printer with ID ${target_printer_id} in API response.`, msg);\n    return null;\n}\n\nmsg.live_data = live_data;\n\n// --- CHECK FOR JOB UID ---\nconst job_uid = printer_data?.job?.uid;\n\nif (!job_uid) {\n    msg.payload = {};\n    return [null, msg]; // Bypass to output 2\n}\n\n// --- PREPARE THE JOB DETAILS REQUEST ---\nconst url = `https://api.simplyprint.io/${device.sp_company_id}/jobs/GetDetails?id=${job_uid}`;\n\n// --- NEW LOGGING ---\nnode.log(\"-----------------------------------------\");\nnode.log(`Found job_uid: ${job_uid}`);\nnode.log(`Preparing to call URL: ${url}`);\nnode.log(\"-----------------------------------------\");\n// --- END NEW LOGGING ---\n\nmsg.method = \"GET\";\nmsg.headers = { 'X-API-KEY': device.sp_api_key };\nmsg.url = url;\nmsg.payload = {};\n\nreturn [msg, null]; // Continue to HTTP Request node",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 460,
        "wires": [
            [
                "4582f5ee6c82a831",
                "856d2b19e2a0d021"
            ],
            [
                "4abf6ef935ae28bb",
                "bc7506c79a70c5d8"
            ]
        ],
        "info": "**Purpose:** Prepares the API call to fetch detailed information for the currently active print job.\r\n\r\n**Logic:**\r\n1.  Finds the specific printer's data within the `live_data` payload.\r\n2.  Extracts the unique job identifier (`job_uid`). If no job is active, the flow is bypassed.\r\n3.  Constructs the specific URL for the SimplyPrint `/jobs/GetDetails` API endpoint using the `job_uid`.\r\n\r\n**Output:** A correctly formatted `msg` object with `msg.url` and `msg.headers` ready for the `http request` node."
    },
    {
        "id": "4abf6ef935ae28bb",
        "type": "function",
        "z": "088fab733419c707",
        "g": "2406f1dc5d32b76a",
        "name": "Parse and Merge All Data",
        "func": "// --- Get data from previous nodes --- \nconst job_details = msg.payload.job;\nconst live_data = msg.live_data;\nconst device = msg.original_device_config;\nconst last_status = flow.get('printer_status_' + device.device_id) || {};\n\n// --- Find the correct printer ---\nconst target_printer_id = parseInt(device.simplyprint_id, 10);\nconst api_response_data = live_data.data?.find(p => p.id === target_printer_id);\n\nif (!api_response_data) {\n    node.error(`Parse/Merge Error: Did not find printer with ID ${target_printer_id}.`, msg);\n    return null;\n}\n\n// --- Unify the Filename and State ---\nconst current_filename = job_details?.file || api_response_data.job?.file || null;\nconst stateText = api_response_data.printer?.state?.charAt(0).toUpperCase() + api_response_data.printer.state.slice(1) || 'Unknown';\nconst is_printing_now = ['printing', 'heating'].includes(stateText.toLowerCase());\nconst was_printing = last_status.is_printing ?? false;\n\n// --- Initialize all outgoing messages ---\nlet msg_job_upsert = null;\nlet msg_status_update = null;\nlet msg_end_of_job = null;\nlet msg_start_energy_trigger = null;\nlet msg_gcode_analysis_trigger = null;\n\n// --- Job Completion Detection ---\nif (was_printing && !is_printing_now && last_status.filename) {\n    msg_end_of_job = {\n        topic: \"CALCULATE_FINAL_ENERGY\",\n        params: [last_status.device_id, last_status.filename]\n    };\n}\n\n// --- Update flow memory for the NEXT cycle ---\nflow.set('printer_status_' + device.device_id, {\n    is_printing: is_printing_now,\n    filename: current_filename,\n    device_id: device.device_id\n});\n\n// --- Prepare Status Update ---\n// --- Prepare Status Update ---\nmsg_status_update = {\n    topic: \"INSERT_PRINTER_STATUS\",\n    params: [\n        new Date().toISOString(), // 1\n        device.device_id, // 2\n        stateText, // 3\n        stateText.toLowerCase() !== 'offline', // 4\n        is_printing_now, // 5\n        stateText.toLowerCase() === 'paused', // 6\n        stateText.toLowerCase() === 'error', // 7\n        ['printing', 'paused', 'heating'].includes(stateText.toLowerCase()), // 8\n        api_response_data.printer.temps?.current?.tool?.[0] ?? null, // 9\n        api_response_data.printer.temps?.target?.tool?.[0] ?? null, // 10\n        api_response_data.printer.temps?.current?.bed ?? null, // 11\n        api_response_data.printer.temps?.target?.bed ?? null, // 12\n        api_response_data.filament?.[0]?.type?.name ?? null, // 13\n        current_filename, // 14\n        api_response_data.job?.percentage ?? null, // 15\n        api_response_data.job?.time ?? null, // 16\n        // THE NEW PARAMETER\n        api_response_data.printer.temps?.ambient ?? null // 17\n    ]\n};\n\n// --- Prepare Job Upsert, Triggers, and NEW Part Metadata Logic ---\nif (job_details && job_details.id) {\n    const gcodeAnalysis = job_details.analysis ? JSON.stringify(job_details.analysis) : null;\n    let filamentGrams = null;\n    if (job_details.filament?.e0?.fil?.[0]?.gram) {\n        filamentGrams = job_details.filament.e0.fil[0].gram;\n    }\n\n// ================== NEW LOGIC START ==================\nlet partMetadata = null;\nif (Array.isArray(job_details.customFields) && job_details.customFields.length > 0) {\n    const modelDataField = job_details.customFields.find(field => field.id === 'modeldata');\n    \n    if (modelDataField && modelDataField.value && typeof modelDataField.value.string === 'string') {\n        let rawString = modelDataField.value.string;\n        \n        try {\n            // Find the first occurrence of '['\n            const startIndex = rawString.indexOf('[');\n            // Find the last occurrence of ']'\n            const endIndex = rawString.lastIndexOf(']');\n            \n            if (startIndex !== -1 && endIndex !== -1 && endIndex > startIndex) {\n                // Extract the substring between the first '[' and last ']'\n                let jsonArrayString = rawString.substring(startIndex, endIndex + 1);\n                \n                // Replace all single quotes with double quotes\n                jsonArrayString = jsonArrayString.replace(/'/g, '\"');\n                \n                // Parse the clean string\n                partMetadata = JSON.parse(jsonArrayString);\n            } else {\n                node.warn(`Could not find a JSON array '[...]' in modelData string: ${rawString}`);\n            }\n\n        } catch (e) {\n            node.warn(`Could not parse cleaned modelData for job ${job_details.id}. Error: ${e.message}`);\n        }\n    }\n}\n// =================== NEW LOGIC END ===================\n    msg_job_upsert = {\n        topic: \"UPSERT_PRINT_JOB\",\n        params: [\n            job_details.id.toString(), // 1\n            device.device_id, // 2\n            job_details.started, // 3\n            job_details.ended, // 4\n            job_details.totalPrintTime, // 5\n\n            // CORRECTED: Use the detailed state from the job_details\n            job_details.state, // 6\n\n            current_filename, // 7\n            filamentGrams, // 8\n            gcodeAnalysis, // 9\n            partMetadata ? JSON.stringify(partMetadata) : null, // 10\n\n            // NEW PARAMETERS\n            job_details.analysis?.nozzleSize ?? null, // 11 - Get nozzle size from analysis\n            msg.payload.filament?.[0]?.dia ?? null // 12 - Get filament diameter from main payload\n        ]\n    };\n\n    if (is_printing_now && !was_printing && current_filename) {\n        msg_start_energy_trigger = {\n            topic: \"RECORD_START_ENERGY\",\n            params: [device.device_id, current_filename]\n        };\n    }\n\n    if (current_filename && device.gcode_preview_host && device.gcode_preview_api_key) {\n        msg_gcode_analysis_trigger = {\n            topic: \"ANALYZE_GCODE\",\n            job_id: job_details.id.toString(),\n            filename: current_filename,\n            gcode_host: device.gcode_preview_host,\n            gcode_api_key: device.gcode_preview_api_key,\n            job_details: job_details,\n            original_device_config: device\n        };\n    }\n}\n\nreturn [msg_job_upsert, msg_status_update, msg_end_of_job, msg_start_energy_trigger, msg_gcode_analysis_trigger];",
        "outputs": 5,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 460,
        "wires": [
            [
                "566c89287199eab1"
            ],
            [
                "d980d78960bfd999"
            ],
            [
                "235f4c81c8825e75"
            ],
            [
                "11be79141838bc02"
            ],
            [
                "548b0a238325e0b8"
            ]
        ],
        "info": "**Purpose:** The central processing hub of this entire flow. It merges all available data sources (live poll, detailed job API) and determines what actions need to be taken.\r\n\r\n**Logic:**\r\n1.  Detects job start/end transitions and prepares trigger messages for energy calculations.\r\n2.  Standardizes the printer status data for insertion into the `printer_status` table.\r\n3.  Parses the `modelData` from the `customFields` array.\r\n4.  Prepares a complete message with all job details (`filament_used_g`, `part_metadata`, etc.) for insertion into the `print_jobs` table.\r\n5.  Prepares a trigger message for the G-code analysis pipeline if a job is active.\r\n\r\n**Outputs:** This node has 5 outputs, each sending a different, specialized message to a `link out` node to trigger a specific action in the main flow or other subflows."
    },
    {
        "id": "566c89287199eab1",
        "type": "link out",
        "z": "088fab733419c707",
        "g": "2406f1dc5d32b76a",
        "name": "Upsert to print_jobs",
        "mode": "link",
        "links": [
            "bf152e33e1198b2b"
        ],
        "x": 1570,
        "y": 360,
        "wires": [],
        "l": true,
        "info": "**Purpose:** Acts as a named portal to send a fully prepared message back to the `Data Output` section of the `Master Ingestion Flow`. This keeps the flow diagram clean by avoiding long wires. This specific link sends the message to update the `print_jobs` table."
    },
    {
        "id": "d980d78960bfd999",
        "type": "link out",
        "z": "088fab733419c707",
        "g": "2406f1dc5d32b76a",
        "name": "Insert to printer_status",
        "mode": "link",
        "links": [
            "af2f0b8c71e0ef6c"
        ],
        "x": 1580,
        "y": 420,
        "wires": [],
        "l": true
    },
    {
        "id": "4582f5ee6c82a831",
        "type": "http request",
        "z": "088fab733419c707",
        "g": "d46e71e1a4ec093a",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 890,
        "y": 400,
        "wires": [
            [
                "4abf6ef935ae28bb"
            ]
        ],
        "info": "**Purpose:** Executes the API call to SimplyPrint to get the rich, detailed data for the specific job.\r\n\r\n**Output:** `msg.payload` will contain the full JSON response from the SimplyPrint API for that job, including start/end times, filament usage, and any `customFields`."
    },
    {
        "id": "235f4c81c8825e75",
        "type": "link out",
        "z": "088fab733419c707",
        "g": "2406f1dc5d32b76a",
        "name": "Trigger Final Energy Calc",
        "mode": "link",
        "links": [
            "b882adb136a0e909"
        ],
        "x": 1590,
        "y": 480,
        "wires": [],
        "l": true
    },
    {
        "id": "11be79141838bc02",
        "type": "link out",
        "z": "088fab733419c707",
        "g": "2406f1dc5d32b76a",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "878bdfc6b43e57cb"
        ],
        "x": 1540,
        "y": 520,
        "wires": [],
        "l": true
    },
    {
        "id": "548b0a238325e0b8",
        "type": "function",
        "z": "088fab733419c707",
        "g": "ec87e2210a0fba2e",
        "name": "Build G-code Download URL",
        "func": "// This node now builds the direct API call and PRESERVES critical data for later nodes.\n\n// --- PRESERVE DATA ---\n// We are copying the data we need into new 'preserved_' properties.\n// This protects them from being overwritten by the http request or exec nodes.\nmsg.preserved_job_id = msg.job_id;\nmsg.preserved_device_config = msg.original_device_config;\nmsg.preserved_job_details = msg.job_details;\n// -------------------\n\nconst device = msg.original_device_config;\n\nmsg.url = `https://api.simplyprint.io/${device.sp_company_id}/printers/DownloadGcode?job_uid=${msg.job_details.uid}`;\n\nmsg.headers = {\n    'X-API-KEY': device.sp_api_key\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 660,
        "wires": [
            [
                "70cdf05dcd27462d"
            ]
        ],
        "info": "**Purpose:** Constructs the correct API URL to download the G-code file for the current job from SimplyPrint.\r\n**Important:** This node was recently fixed to use the correct `/jobs/{uid}/gcode` endpoint. It also preserves key information like the `job_id` for later steps."
    },
    {
        "id": "70cdf05dcd27462d",
        "type": "http request",
        "z": "088fab733419c707",
        "g": "ec87e2210a0fba2e",
        "name": "Download G-code",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1630,
        "y": 720,
        "wires": [
            [
                "7ac7a420743ace0c"
            ]
        ]
    },
    {
        "id": "7ac7a420743ace0c",
        "type": "file",
        "z": "088fab733419c707",
        "g": "ec87e2210a0fba2e",
        "name": "Save G-code to /tmp",
        "filename": "/tmp/temp_gcode.gcode",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1660,
        "y": 780,
        "wires": [
            [
                "a6a79f6ee9526497"
            ]
        ]
    },
    {
        "id": "a6a79f6ee9526497",
        "type": "change",
        "z": "088fab733419c707",
        "g": "ec87e2210a0fba2e",
        "name": "Build Analyzer Command",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "'/home/ubuntu/monitor_ml/gcode_analyzer.py --file /tmp/temp_gcode.gcode --jobid ' & preserved_job_id",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 840,
        "wires": [
            [
                "1895161b40f4b2c6"
            ]
        ]
    },
    {
        "id": "1895161b40f4b2c6",
        "type": "exec",
        "z": "088fab733419c707",
        "g": "ec87e2210a0fba2e",
        "command": "/home/ubuntu/monitor_ml/venv/bin/python",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run G-code Analyzer",
        "x": 1680,
        "y": 900,
        "wires": [
            [
                "637017bc129598ca"
            ],
            [],
            []
        ],
        "info": "**Purpose:** Executes the `gcode_analyzer.py` script to extract the thumbnail and perform per-part volume analysis.\r\n**Logic:** It passes the path to the temporarily saved G-code file (`/tmp/temp_gcode.gcode`) and the `job_id` to the script."
    },
    {
        "id": "a849c171e8e54fe4",
        "type": "change",
        "z": "088fab733419c707",
        "g": "ec87e2210a0fba2e",
        "name": "Prepare Analysis for DB",
        "rules": [
            {
                "t": "set",
                "p": "params",
                "pt": "msg",
                "to": "[payload.thumbnail_url, payload.per_part_analysis, preserved_job_id]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 940,
        "wires": [
            [
                "fa016904d46e14e2"
            ]
        ]
    },
    {
        "id": "fa016904d46e14e2",
        "type": "postgresql",
        "z": "088fab733419c707",
        "g": "ec87e2210a0fba2e",
        "name": "UPDATE Job with Analysis",
        "query": "UPDATE print_jobs \nSET thumbnail_url = $1, per_part_analysis = $2 \nWHERE simplyprint_job_id = $3;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 2040,
        "y": 980,
        "wires": [
            []
        ],
        "info": "**Purpose:** The final step of the analysis pipeline. It takes the results from the Python script and saves them to the correct record in the `print_jobs` table.\r\n**Logic:** Updates the `thumbnail_url` and `per_part_analysis` columns for the specific `simplyprint_job_id`."
    },
    {
        "id": "637017bc129598ca",
        "type": "json",
        "z": "088fab733419c707",
        "g": "ec87e2210a0fba2e",
        "name": "Parse Analyzer Output",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1960,
        "y": 900,
        "wires": [
            [
                "a849c171e8e54fe4"
            ]
        ]
    },
    {
        "id": "856d2b19e2a0d021",
        "type": "debug",
        "z": "088fab733419c707",
        "g": "d46e71e1a4ec093a",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 280,
        "wires": []
    },
    {
        "id": "bc7506c79a70c5d8",
        "type": "debug",
        "z": "088fab733419c707",
        "g": "d46e71e1a4ec093a",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 560,
        "wires": []
    },
    {
        "id": "878bdfc6b43e57cb",
        "type": "link in",
        "z": "efc63501e85537ea",
        "name": "Trigger Record Start Energy",
        "links": [
            "11be79141838bc02",
            "6f5a6bdde6455ef0"
        ],
        "x": 300,
        "y": 100,
        "wires": [
            [
                "7f9f2abe039b6633"
            ]
        ],
        "l": true,
        "info": "**Purpose:** The entry point for this sub-flow. It listens for trigger messages from the main ingestion flows when a new job is detected.\r\n**Input:** `msg.params` containing `[device_id, filename]`."
    },
    {
        "id": "201a4d3f3c3c73d1",
        "type": "postgresql",
        "z": "efc63501e85537ea",
        "name": "Get Job from DB",
        "query": "SELECT start_energy_wh FROM print_jobs WHERE device_id = $1 AND filename = $2;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 530,
        "y": 200,
        "wires": [
            [
                "35af4e085770ab9f"
            ]
        ],
        "info": "**Purpose:** Checks the `print_jobs` table to see if a `start_energy_wh` value has already been recorded for this specific job.\r\n**Logic:** This prevents the flow from accidentally overwriting the start energy value if it is triggered multiple times for the same job."
    },
    {
        "id": "0833afc4d50143f8",
        "type": "postgresql",
        "z": "efc63501e85537ea",
        "name": "Get Latest energy_total_wh",
        "query": "SELECT energy_total_wh FROM energy_data WHERE device_id = $1 ORDER BY timestamp DESC LIMIT 1;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1340,
        "y": 380,
        "wires": [
            [
                "f2f0c199278d9bcc"
            ]
        ],
        "info": "**Purpose:** Fetches the single most recent `energy_total_wh` value from the `energy_data` table for the specific device.\r\n**Logic:** Queries the `energy_data` hypertable, ordering by `timestamp DESC` and taking the `LIMIT 1` result. This provides the cumulative energy reading at the exact moment the print started."
    },
    {
        "id": "018fb6adb54d8369",
        "type": "postgresql",
        "z": "efc63501e85537ea",
        "name": "UPDATE print_jobs",
        "query": "UPDATE print_jobs SET start_energy_wh = $1 WHERE device_id = $2 AND filename = $3;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1730,
        "y": 480,
        "wires": [
            [
                "2bc4e3d36526ced3"
            ]
        ],
        "info": "**Purpose:** Updates the `print_jobs` table to store the cumulative energy reading at the beginning of a job.\r\n\r\n**Inputs:**\r\n- `msg.params`: Contains `[energy_total_wh, device_id, filename]`.\r\n\r\n**Logic:**\r\n- Executes an `UPDATE` query to set the `start_energy_wh` column for the specific job that was just started.\r\n- This stored value is crucial for calculating the total energy consumed by the session (`session_energy_wh`) when the job is finished."
    },
    {
        "id": "35af4e085770ab9f",
        "type": "switch",
        "z": "efc63501e85537ea",
        "name": "Did We Find a Job?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 690,
        "y": 240,
        "wires": [
            [
                "8e598ed1e28066d2"
            ]
        ]
    },
    {
        "id": "8e598ed1e28066d2",
        "type": "switch",
        "z": "efc63501e85537ea",
        "name": "Is Start Energy Missing?",
        "property": "payload.0.start_energy_wh",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 300,
        "wires": [
            [
                "081319de22b6fc8c"
            ]
        ],
        "info": "**Purpose:** The main control gate for this flow.\r\n**Logic:** It checks if the `start_energy_wh` from the previous query is `null`. If it is `null`, it means we need to record the start energy, and the message is passed through. If it is not `null`, the flow stops here, preventing duplicate writes."
    },
    {
        "id": "7f9f2abe039b6633",
        "type": "delay",
        "z": "efc63501e85537ea",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 160,
        "wires": [
            [
                "201a4d3f3c3c73d1"
            ]
        ],
        "info": "**Purpose:** Pauses the flow for a very short, random interval (1-5 seconds).\r\n**Logic:** This is a defensive measure to prevent a race condition. It ensures that if the \"job started\" signal arrives at the exact same moment as an energy reading, we wait a second to make sure the latest energy data has been committed to the database before we query it."
    },
    {
        "id": "2bc4e3d36526ced3",
        "type": "debug",
        "z": "efc63501e85537ea",
        "name": "debug 49",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1760,
        "y": 540,
        "wires": []
    },
    {
        "id": "9634d11f263187fe",
        "type": "debug",
        "z": "efc63501e85537ea",
        "name": "debug 53",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1700,
        "y": 360,
        "wires": []
    },
    {
        "id": "f2f0c199278d9bcc",
        "type": "change",
        "z": "efc63501e85537ea",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "params",
                "pt": "msg",
                "to": "[payload[0].energy_total_wh, params[0], filename]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 420,
        "wires": [
            [
                "018fb6adb54d8369",
                "9634d11f263187fe"
            ]
        ]
    },
    {
        "id": "081319de22b6fc8c",
        "type": "change",
        "z": "efc63501e85537ea",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "params[1]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "params",
                "pt": "msg",
                "to": "[ msg. params[0] ]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 340,
        "wires": [
            [
                "0833afc4d50143f8"
            ]
        ]
    },
    {
        "id": "0b07c1f972d0a066",
        "type": "comment",
        "z": "efc63501e85537ea",
        "name": "DB: Get Latest Energy Reading",
        "info": "**Purpose:** Fetches the single most recent `energy_total_wh` value from the `energy_data` table for a specific device.\n\n**Trigger:** Fired when a new print job is detected to record the starting energy value.\n\n**Logic:**\n- It queries the `energy_data` hypertable, ordering by `timestamp DESC` and taking the `LIMIT 1` result.\n- This provides the cumulative energy reading at the exact moment the print started.",
        "x": 1370,
        "y": 340,
        "wires": [],
        "icon": "font-awesome/fa-database"
    },
    {
        "id": "754dba38ed3317aa",
        "type": "comment",
        "z": "efc63501e85537ea",
        "name": "DB: Set Job Start Energy",
        "info": "**Purpose:** Fetches the single most recent `energy_total_wh` value from the `energy_data` table for a specific device.\n\n**Trigger:** Fired when a new print job is detected to record the starting energy value.\n\n**Logic:**\n- It queries the `energy_data` hypertable, ordering by `timestamp DESC` and taking the `LIMIT 1` result.\n- This provides the cumulative energy reading at the exact moment the print started.",
        "x": 1770,
        "y": 440,
        "wires": [],
        "icon": "font-awesome/fa-database"
    },
    {
        "id": "b882adb136a0e909",
        "type": "link in",
        "z": "f7f46f6cd7efe35e",
        "name": "",
        "links": [
            "235f4c81c8825e75",
            "76e36f5c70691ad5"
        ],
        "x": 290,
        "y": 400,
        "wires": [
            [
                "9fa1aa8f2135c4fb",
                "68ed7d4c1d4b2e52"
            ]
        ],
        "l": true,
        "info": "**Purpose:** The entry point for this sub-flow. It listens for trigger messages from the main ingestion flows when a job has finished.\r\n**Input:** `msg.params` containing `[device_id, filename]`."
    },
    {
        "id": "9fa1aa8f2135c4fb",
        "type": "function",
        "z": "f7f46f6cd7efe35e",
        "d": true,
        "name": "Prepare Final Energy Query",
        "func": "const device_id = msg.params[0];\nconst filename = msg.params[1];\n\n// If for some reason the filename is missing from the previous state, we cannot proceed.\nif (!filename) {\n    node.warn(`Cannot calculate final energy for device ${device_id} because filename is missing.`);\n    return null;\n}\n\n// This powerful query does the entire calculation and update in one atomic database step.\nmsg.query = `\n    WITH final_energy AS (\n        -- First, get the absolute latest total energy reading for this device\n        SELECT energy_total_wh\n        FROM energy_data\n        WHERE device_id = $1\n        ORDER BY timestamp DESC\n        LIMIT 1\n    )\n    -- Now, update the corresponding record in the print_jobs table\n    UPDATE print_jobs\n    -- Set our existing column to the difference between the final energy and the stored start energy\n    SET session_energy_wh = final_energy.energy_total_wh - print_jobs.start_energy_wh\n    FROM final_energy\n    -- We only do this for the specific job that just finished\n    WHERE print_jobs.device_id = $1\n    AND print_jobs.filename = $2\n    -- Crucially, only do this if we have a start_energy_wh to calculate from\n    AND print_jobs.start_energy_wh IS NOT NULL\n    -- And only if we haven't already calculated it (prevents running twice)\n    AND print_jobs.session_energy_wh IS NULL;\n`;\n\n// The parameters for the SQL query\nmsg.params = [device_id, filename];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 340,
        "wires": [
            [
                "68ed7d4c1d4b2e52"
            ]
        ]
    },
    {
        "id": "68ed7d4c1d4b2e52",
        "type": "postgresql",
        "z": "f7f46f6cd7efe35e",
        "name": "Save Final Energy",
        "query": "WITH final_energy AS (\n    -- First, get the absolute latest total energy reading for this device\n    SELECT energy_total_wh\n    FROM energy_data\n    WHERE device_id = $1 -- Corresponds to msg.params[0]\n    ORDER BY timestamp DESC\n    LIMIT 1\n)\n-- Now, update the corresponding record in the print_jobs table\nUPDATE print_jobs\n-- Set our existing column to the difference between the final energy and the stored start energy\nSET session_energy_wh = final_energy.energy_total_wh - print_jobs.start_energy_wh\nFROM final_energy\n-- We only do this for the specific job that just finished\nWHERE print_jobs.device_id = $1      -- Corresponds to msg.params[0]\nAND print_jobs.filename = $2         -- Corresponds to msg.params[1]\n-- Crucially, only do this if we have a start_energy_wh to calculate from\nAND print_jobs.start_energy_wh IS NOT NULL\n-- And only if we haven't already calculated it (prevents running twice)\nAND print_jobs.session_energy_wh IS NULL;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 810,
        "y": 400,
        "wires": [
            []
        ],
        "info": "**Purpose:** Atomically calculates and saves the final energy consumption for a completed print job.\r\n\r\n**Inputs:**\r\n- `msg.params`: An array `[device_id, filename]`.\r\n\r\n**Logic:**\r\n- The query uses a Common Table Expression (CTE) to get the *latest* `energy_total_wh` for the device.\r\n- It then performs an `UPDATE` on the `print_jobs` table.\r\n- It calculates `session_energy_wh` by subtracting the job's `start_energy_wh` from the latest reading.\r\n- The entire operation is atomic, ensuring accuracy and efficiency. Conditions prevent it from running twice on the same job."
    },
    {
        "id": "b5c22f4fd7650821",
        "type": "comment",
        "z": "f7f46f6cd7efe35e",
        "name": "Process: Build Final Energy Query",
        "info": "**Purpose:** Constructs a single, powerful SQL query to calculate and save the final energy consumption for a completed print job.\n\n**Triggered By:** The job completion detection logic in the main flows.\n\n**Logic:**\n- The query uses a Common Table Expression (CTE) to get the *latest* `energy_total_wh` for the device.\n- It then performs an `UPDATE` on the `print_jobs` table.\n- It calculates `session_energy_wh` by subtracting the job's `start_energy_wh` (stored at the beginning of the print) from the latest `energy_total_wh`.\n- This atomic operation ensures the calculation is accurate and efficient.",
        "x": 560,
        "y": 280,
        "wires": []
    },
    {
        "id": "9f49ca2d5d3895fa",
        "type": "inject",
        "z": "38745ad5e3fcf018",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "caa3d15fef413be0"
            ]
        ]
    },
    {
        "id": "04970d8d213ac0be",
        "type": "debug",
        "z": "38745ad5e3fcf018",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 320,
        "wires": []
    },
    {
        "id": "caa3d15fef413be0",
        "type": "http request",
        "z": "38745ad5e3fcf018",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.simplyprint.io/17378/jobs/get?printer=35675",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "a012f5a8-4046-4fb5-98fe-a95d977fa3c5"
            }
        ],
        "x": 190,
        "y": 240,
        "wires": [
            [
                "04970d8d213ac0be"
            ]
        ]
    },
    {
        "id": "ddbc22b2fcdb60da",
        "type": "inject",
        "z": "ed507ef4772f051f",
        "name": "Backfill Job 3389466",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "job_id_to_backfill",
                "v": "3389466",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "; generated by PrusaSlicer 2.9.2 on 2025-07-25 at 16:36:29 UTC   ; ; thumbnail begin 100x100 10124 ; iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAdcElEQVR4Ac1d6ZIbOXKuB1rtjPcFrG ; 4efUqjm0eTLLLJ7la31LrPucLhtXfGM3b4v+2NcNjrY9/F71TGl0CiEigAhaI0u/sDoRZZVSzkh8wv ; DxzFoJxWB+tFtX86r/bX86pfTqqbs4fVzRO37fhtVreb9O+j6vbjNbW91awaLKdVbzGmz7dtuB/vc/ ; tiTf9+yrOG6p2OzlfV3qnu4+4nvhv6N1ieKLkt6G98dtPKIiAv0xy50nNOqqPNstqdj+g5BT64SQ97 ; pD4cK1DUD6zUD6gLGqDMmg339dWDHlw/rg42C/Nij+h+DcqEfqwTEOp6eQ/+PjpbkjB3zOe7uU1df3 ; y2okFCz1QNgNgB0/HddudKiOW0/kz9/2BdqufPSX4OKB44UpY9dS3uw0CRnxd/3RD6iF5+73RW9cr6 ; B9wfemQFf3S+rO4+ObejRH5HYKmXR8PLOh0LNHzeX0yca5xRrgbPrYtTAjkHFAju1vmpK0B+tgKjp4 ; BBH3cXo8Z7hcAgzQoAiH5CXtAW9PWm7b9rRaxWqGswSHYDg77wP9CgaMHAhFltEUK+aTp07+lFdXi2 ; bNUAXNu32hIfyWziQkBJM3ZbgTJcndB70fMabVQdbkoyxUmzaX6zxybM0z53MEzbtWcxpt8cGm2UwK ; DhM1ADrqHPAyatcFTJ0QY2YXOtLYux/QF8dk9pBTSpi7rDPGptGTkC76tn70aFW7cd07hjMGPa7NTX ; YCBBi6BNJGBx307seYardstxY3ARj+H9EoPE15Z9w8maj9lSTEgrmKN3IlxTSIKWYHBjLgAIGJV3Lt ; fKDKwaI2+3ZWTbDqoX6ithMbf0WWuibdRoO5YLptVXyokgcylAIgdAXLdj742DTNpCJqzWFvTXHzy7 ; mX2FRQCnalM2V2AsLWD6mjDPFO4Xrv2XDYQ6f/O8uqMEEDMD0ZdtjFLV2dMZaUxI4DnNClq9Czr74O ; ljGjTEBw0g8p+nB8yU3m/XaJgFsAMorBV4L817tYVx5eYCU0ggYu1YPfDO1Zl29VZw9WbqpSdawCFQ ; kiZnZEcwmTDSlvHWwGAUo8MYjV9dbkhrdrZ81q71DMcNbWn0J6UheC/Vr2PlUOB+aAl4Y5DkIQtIHA ; i80H3lzh6elY57CIFCAMPTk9qfj9hp2VnqKJMnj0j1f+aWXgfB9YwrrIl7Ykf37cenpM3bgutqi8ct ; 84jZ8zgH7izeyxmo6t6DTVm73xGZFzcjX+BmeFHDEHEbQRJ5mWByx7PHfmfZZYyZCmherrbAbUSwaG ; 2812Cz4e72Ir/ZfN4k+H5sEvsNbak5SfYbAwu/y0FsSIM04S+igW5DQ/BDiCuOL1Zxl9Fqgh7dpC0Q ; TsR+9zMEUwdsJ1oARgv8hpHHxJ16nib8jQNaSAP31Pe9lvdCv3oMmgBFajk7FOzZxTjHWhjhHgcB4e ; DmwbNLGvUxXghpAkwGqeN6Ri9ev2jeCHWa6hxelLWFgWB3llQ+oEW9gMBxP+IRNF/z+uVY80Xk3hAw ; ZMKWUwcYPONYeZ3JuCiiLZAZtKUnguFiaDqIHJQmxYmnMWFX1Hcre0xemwWZHwYmJrg2QUBTyIyp58 ; CJAEGi87tbPBMEC23h+yE8CXYv8724n0OTx9pTAxeDZDdqZtuBwbtowteaXOCD8cunlAJx8joNgk6P ; Hi38Mf0AnsXakivAkABw/13l3VkTtRg5rZfR7LWl1jApwF6HJvtKWqGeg36ytqQ1Pw4M0wS0DGav0M ; R9Qj9ibVoLQcdAYbtOJgzktVnkj2pPgLjvlkmRULOmIg8IH5SBuR8emM4eT+tndRgkkBGsCZsuSgkF ; CT8TmHmdMiJAZBqa1BEuo0lHZAdYnA/yPoOpgMs8NKkX9/uYAMd0D+x+rRXa0+GBw+5zbuPUD4PNhM ; 98FHwPr4+aiEvSVkcjzLtpYMxvZAJjZdIgdc806YBtmgUGeUSLOFD4HgLe38zpmXGzMyb3E6O3FmCz ; YYQyt7QBMVhOGgDycyheUKDDVPRMH0KmDo2zzOyxsfb88OZXwryOHW3ZzZBbyIwV0SDOqHdMFfFCA6 ; EVQRW3Qp+QkLW2nDSE3DNZUkvcge/l/zFgtCc2TWpFPwGWfNady40mVfsdv7d2Zzn1sSvM2//9VFCT ; oNTaYtL6Ibnxb0TMWJEi7R67oOXU+3xiHxq0vd4I485B2CBCCiaXE2PqxqrDK/qMR1fbyGcTyfkwqS ; 3EE+xFdXgWNMW6x+ZdiWjVQJGazEDIBlB60hR73MJyGyRjJwvIKEO9DOFTh6dVkJyjHo47ujkoOjhb ; kIsMMHRQ2Y0Xeo4Jm5l3zDNlKa1Czg7AIIusib/+PgSGD4yjLcuJjfJzguNsQNjm7WMENch7FCDosH ; nYFSPyluKKu0/Q+cUnCZGLX9A80pYtn8MajAHy6PmV1ljzOQTdBkYMFBokHbglCUhPqJolXng6HC0H ; zFJOp2/DwznV9ZVjJcgjcEvCzPQDTT6PiVs/c6bteOKeoHao+zjVgv9Di8EduUD4oKBZNz1iwjoBwm ; aI7Z40TWSnkWUVbqkk4Fg7NF4NEzfbfIxGGUy2gSJNTBPwE8Mt0yAoPjDszhJxe7+9DRhJE+YAkwlI ; T5io3mKc4Akds7B3kgKFp/LAYwkK3MwCIcI3wWRayzRxR0e+8RBD2iKv41qKNE+fA4htCD+pIQND3H ; HCdk3G3mncQ9Ju4zppkmrg9BwxG0yWAdNyGjZJoecBEKktcoDgvW4b4pYa+DnBaCX8gHtcyOwpv1gu ; GE4HlSD7whThh5DCP+hK2iYix6Q2DiYJGDPqddEo3npeg8ABIntgA6rkrQh0aQ5/7EDcn0dbxg1twb ; sUXHXTbq2MNdqB6AVMwNCQNSp3w4CN9/mgMbpLYcLUu0FwBKoFZtwKSggYgALnAclK0la+9hfUihxt ; wXvgffB+GMAFhE1Fn83SFplCaY2chs5h9MGdjZmoBslGBMijG/O+ZDDZvMaQJbUwKAD3UMU9urxbB5 ; O45k8NRgMUmGHVt9uXG3q3ggRlzBVGJJkekerOBUO7s2s7H4nNRIgHJBApIQ5NXYXmvypQEExyrUW2 ; fqDxd3gPBqL+bP5nA0K2H9/eqH5+/yV5nxxPFU6qeTGiQO0Q2iK8pzYwyGc/P21ohZ7PtbDE2W5yJt ; YN7vtCN89i97gfAUX+H+/FqXJ57V8CGDETVoTqEWy/yU1NgNI3RZ+DdZi4+4Lw65EdMzcTinn22Yvy ; BM5CpmDSOAuY5toLXMfu7KHJLPDz/tKAkG38QBN+EYovGAQiVdWpUFywZwo1cAaiXCGETsTFwBnilo ; LeY/c0Yn4kQJoTVM3kvLSmSGoXStGcok+B8S+XRfXiuKjefFVUX98rqv98XlR/eP6nB+P6UALSkoPS ; 3snSiYpB3FRWDQDVT3DEgKZXlsQJEhA2UTnNMWEmNX5o5ojBi+KyKjfY6ZAQnh4U1eWeC8i3D3T775 ; dF9T8vf3kg/u1Kg2EBWTiAjJOxAYMAt3HfxANdyFoKiQjfkD6bsn7HJk0Y6hn3ry8ImBwT9ewwDcjf ; jIrqt+NfFhQGIgJIO3Gjs/dV/f0WeyzZYIQFSssFUKY1hNsFDHQII59Ml3oGkpXQjmNTV4F7HBPE75 ; /kA/LbSVH976tfTitkY8VoBcTmoUwyUc+48CLwDkDoVMvM/r1vgtIuYHD7p4+/qX56/4U1YdCWNoF0 ; BeTvVPvjZwIlBIQGg+U9MnFIpMHjuR3JQ8FWI2izsUbEc5JtP0LcAIRTLykwNrMbwRELbeniRf3+qh ; sgv5sqUF5/fjBCMi9SEbee+ZGuW/N8Iuk9BcFoIW5L+J53JNvZ/NckIIDSxZRAmFKgDIh/3R+MlxUC ; 5IeTz6sVfoa5BqR04wye5bfXloeyWlHXo33viUl3uJpmmaNBqaPoPaMtGPk8+tGBq9VvSEDcckHxAc ; lpIPQYIAB0WzA0eeuJ6lia53uqhY1iF7qAdHS2itYjYi4tgAGnHJtlx9u4swwINY8Lfv7wJTkTm/kN ; B5BcbQEYEGhXLsBzGRD5+fOj9H0x4vYTqZDzncuzer4yawhc0FuP12l3dpGKMeqADXGBzonNOwOR4g ; poCgso1FKgMCAQLPHBJ5A0wEgBEgJiorQint2ekLyIk5VCFLyWYs9U/6zn1AEMnyt0nXxVF5PaNKLB ; FTeiQt4GFB8QXLtNjAHvLAVITCtSZWROKiK7gLX+xYHN7o5tHsjWHjqAofNQc8dzggmj5y/zwcB9l8 ; s0V7CZygWGOOSVC8jfKtL+/mFR/deLdiCe7GsnIAZIjLj7ouYSA4QWhJrlDOh/4c8M5NS35JY2QFJ5 ; KI7wh5735AMB0EB0sKnsTbWN/q7awqBIQNDg6n5zX+Wynun279eauAEAXOMUIEkgIoBIU7XvJWajcQ ; gEhGyqLAqlUuWptr9emFmA4WupZKtM3C3jdYBDYkIOaUsKlIa2vIoDgljkw92ievuVFn4MEASXMeIm ; 07+qC2A+KOTJrvR6l1BiNhkY9ozHU9cT6h+AKztMxAyhOIMSgZ62QGVhPxksaM5ZBJDPqS3gkG0BCb ; qzD284BbDhiq2G8USNPHlFV8yTLWIEXoOiSUcDs507KxvU9NjUUJBCp1S5MXfMKW0C/lyggD8+ByDc ; N78mw9OkNA2cWOcp5Mm2AuKDwuXQPTMpuv8JDTELpmtKMPrlJCjgrsB0JXyAguh8W0D8vvmBsSbtpS ; bu5UnQg80GREbkw9OZ0ZSp4JaOYCz1vCsQt67qrcweVrOkl9NVyF20BVwAAGKAoIgVAiTVT1mzARjo ; Jzs+SWskAelHAZmYpQK1ptQmLD91rufxrqhJNxjZ2i6xQEzQ2xA+j3KAwvfAw0JjD+rJQROQtr6yNW ; F3ls0+gcL8GQGlSCFWr+2ryVyqo554PQ3GGY6XRcR9VqfdBVf47V/ViLxWnX9/p6j+41md8OsCTO61 ; IUB8d9YHJJcnLXGLTLieH2YIv5yGNQTzZHuBLzRxx2MPWd+OaYsuIC2dRZIpMADE1V4NyEekxO/XZV ; X/enz/KdoSAsR3ZxmQ6aMvqqOLejZlSCvIDCvi3hf5vMZ8s4U7IVzKnHJZ956okux6JhJe7kTmVJqk ; tpUTW47t29WuehIEZwL6CSDQMPpSgIRGcAyQmLb41/uAhNxZAML8Z2e8mOUTUg5wVI5sfcjnVxcQdo ; HlFFdefFSs3r2sJi+fEPlYd3YxzgJEvhDzhN48QJdVBxlagcZVvBAgvrmSwoIgc7wwHvX+9fI54Yg7 ; HE+hfzybcmC4Uc4la94nTL5niVhmAHP66plKLqoHlW9fVKsPr2hzsr3Tk60AQfuHd7+u/vHjX1EAyH ; ELvo/N/GgDJGbX/ZHd5oWFrpefh1oozya9RZglTJn96mpj10c6ViMTEMgJz1h//a6aAJCBWZh//8l5 ; tVTa8ujZY5owYMP9DEB8gf+g/s8mLNd78gFJAREj467knQIilvxkQDhHB5cW1kVOVc02WYoqEI+dff ; OBYjKYPScOQeQMUOZvnqmq4WnDwwppBVQ4VudOAeDXJJDMuz5o1wofkD9uQd5tJioFCgR/i9bSz23/ ; qeRwIZdP+LMpm6QOQBfvXlE7EKt/i5BNGynUVu9fVfefnquL51XMw9LEvUm6nClAUmXVmNBkSz2/C1 ; dMHt5ockUADHiMfubahgBLvablgNdLRgABkPefPq42336o7l1fNDyt8CSHckKquFLoTV8+pb8HS3cS ; g5zI3BYHxAChsurr7mCEnhcqGuVwBTybg81SLFEIB7V66dsiyaFyQnhN8nU+ELHJyZvn1ek37+x+ZL ; 22SN2NRWbV7PWzqlRm7O7Vxrppeo/DeiJzboAWAuR3kVo3QAkBE+OfWBVPRuQNvlgaLTCe09DsJSmF ; zTtMtM0d8+cp82TvgcmK31Hy23z9thorjzY2gSSay3K8APWyAAMmDLuSTpTGDL3pn11yTCFA/n6q6x ; OxsiqDEwMjBUgUiKXHE0u9MwTPD+OdHA7MItQUGD4oHCSC7L9Snuvk1dPq8fcf6W8u+nUCJATKvauz ; 6uLb90T6eDCCRybuLsFZCpAuZVWkWDidEQIkZvaCYDjATGmBD/XxNH9Gpa8lelnfulp+eKNc2jf0TM ; 6KdALEvwBTVOS+VXCLoS0pEuXWyiOvw4BwjQJBoSyrspCvvJS4D0iMuFNgsDuLyiWtu9yY3amXk87a ; gfsePruqzr9TxP303JjEhd2bMhsQ2dCxn95/SS6e9BTw4zmeTch0xOrcMUD8lDgLNwZI1J1t0Qo9om ; dmDnNdfEMcdWCShDmA8EKn2duX1erjG7M0YmxlBzAQWqQ2SChiYHDDcqsfaZuIvAWSIaGzYFJmDPzx ; KYDEiXsajS9qd7Z0Zn441/OE8Ij5kiHAvScX1eab99VDFTbYdfYyICzFesnIBgkuIOrG88UXn20Kvi ; +cNm5pq3N3AQTComj6vDk/bCA0ANnZg8BEbx+00IRwdnUhXOShEFtgwmEsy1uHFfUGCb7HVfQN0QyM ; /bwov+wc5OV6NzlpchA62qcAIoW5Z1ZZ+ULfNwtVQ8QdS5kwF/AiIyLuS03cUxUe7JsFQ/5qgCAt4N ; 2InzF3zcQsAIR2ejP7pkOdNrNfbRXotXk3IUBSvxGqc7cBQsQdIWue4sqVPPw9iGhFNKlY1nEGArvR ; iyfVmdIK7LHlpkxqMPwpQL5FGpgyL5V6lSdWAHGb5S0nDUC6gNKW6shxj/0AkD0sLqsy4D4gUTdWCB ; Kj8eH1pS4jZ2pFg7hNun35/jVlaCniLietYIRA4UmK8MoAKu3kALTrLfPmW09obgODCT/1fNQ/UhG5 ; fJ4EpBWMpc5DHRs+wUiE/c4N+PplPd+K81D3lfuvrUvZSJNYUBYJ7TBcwisOdPwy1VNJufmuay4oKT ; MVirBjv5ECxH8uABk/uNEKhk31eHOMj85rgHLcWQB68vp5tVbBMQCVWsHAOPuxJGINrg7SDqwrdwdW ; 8rL8LexyQPGBCeWe2tzjHECi7qwogMVMFO8wsRfJQ9EyjIiX1RfCxrSlU2WesAM4z0tz6x56tNcbJC ; QAMe/FRwFKkCwg4I2uc5vatCXXCZC/4QMSDPKMCfJr+H2PxHUeKs8safe4TqvzPAEIbvziaXX23Ueq ; 6vFcNLcA5daLdEk2vFEbz17kw8pCmmMBiQl5G1C6Nv4NCUgUjNJ1Q4c8Fal03dy9026bEeybjfX1WV ; szk4d6rQpIL6nGEa4GehVV5gwDpl2uVo7tpI+23fJoWXSbq7vNlM5tQOlSQKpH8tTk2fREAe3O5k8C ; 97nivoq2J6+uq4vvP9K6/EGgAhicHuWTt9EW2k8S24CIDdPibRQGJMYTvzQoOVoREqQe0Ru7bce2YA ; DM+ZsXlCpHUtCv/PUTYIQEDO4id9a42W1gECC8UVkIlG1NWIjwuwKRC8aBWXvCK7+GcrpmJhgwJzhV ; aK3yUI9e6D17OefUqPxlgKEdCr3TqTSl6Q1DBSBy97jcwLDrfKguYAwyBKkjXLE1VOlPcU3PPbZ5KC ; U4mKgzlSq/zQUk0dgMNjZIiIx0W+49nQdJXW4YWreRAGQ+amzr97m0JRWLxLQCc8Rk5iA8oufRPJSs ; b7uLjZoVPS4goc59YPNQdcTdL2tC5g0SohW/st7pdJAwT3hH3tStsRk1tmfCBS4oY+sJ5GhLivBjgI ; SAwAokCOnh9QUVwB7S/LDmpAJ3IvMkqAF+5W7oaQvM0KPnT0gr7jw5c1aIhUxTc4OEqTfyp/XOF63E ; be4xjogFhXeUY3XkTX57C/e4hk8hfB+Q+HyocdVzOr4kUDDBQpc+p3Yis9yYoI0b5Nwx2sOXPLFVNV ; cFJLi04IhGuiPmyhpB1hsk6Ah7zyzJ8xfj5BB432gV7aYxFxpybEadtm3N/dwBSq62xACJE3doNGoz ; gTnHp0pw01dPaZ8uuXVHvwMgbh7qPZ1E53NCLwGEP+r7ZsNPAHGb6h/jzmBI+fLJQdDcgu2a3vxSu4 ; 1NXhlnmzAJTDLIW4yr1FYdlJpWAd9EeT2XKpmH2S7Hdre4cbQ1hGzmQ01VHgqpcoq4y0kYjEUaiJq4 ; Z3ScBdqh2V53GzDqPZLHNKniFu3bK7cYhy2kmsE8evpBF8LPAiMkhLLe+JiDqznmhynCx5QkvVFmOx ; gkODWKVx/fVmPlSe2teWfsiVjurc10FhiGkGUeipd0t20Y6oAhZE5FqnM9bZci9cZm/Auz+eW6rPgk ; s220ZSsgjLbybtsymNJR9DlxyyNlcuyE8AAQnAqhAtJ3Qis84erVX1PHc4ppxcAcNhzLQ+mZKqVzZF ; NKK/C93eliMW45rmKhkdOEHz8rBPX3ECghMHjddi8xEi1xr+Iz++oJ4c9pQjhtFRsQHE1kVuAdtKQs ; nA0SItcQcZv1LrFrnA1DIzKTlshuDJd7fog+skKfVb7vnBUysifawDavlaasPW1x3NkHv7IFMLvBTU ; jQkQX1IfOhJ4RfKmDMhHBjiujo2Ov4ROaoFhhtGfjaYuogtANrAlQJSs84Sc4O4WKg634udaySc35I ; 04SNqMPsHnMmVKtmOJhkMPyX5cIMz5NlU2T32QoILmrT1f231H2Yd3zy+lrFL4+rmeKY06/fRicyx8 ; zkrgCAc2Hczy4HjEnzJJe48XksTkFqnnmgS6zRdFKVCUXOp9cIJl1QfDAkILwdEVfZ9IZpGWeLRD4H ; l1x9/3X17T//rHJR8VnlOaObT8HhfVd65STzfv8gNGNhzGDjI19jp552BoT2KTGpCk4lOw/38mGxnU ; 7loWBHZkH91ierlTopiBVIiC0mSkvm756rmOWantstNqjPNKRVtGuz0nbpnu0RAyHmQeE+AHHXnPzm ; n3AXASRx8PBibN0yqWba1Vs2j9IOAuNuX8738lF5HEWnNtsMCk51tHyvgsY3z+yiIuS/MN1/Ydzj4W ; qa9Tz8W5+RO3EGThOUQP+Cg/hEnyxk4jqaRroxTlIKkJ3AwZJ80DBv1RfmFk34dgM0B8jAyFlo4pYb ; pkn3cJggfFdwM5rKA+KmPBTHEcYFxhzeB6qwBE/sAe12PU9qa9/UQfhQSf97vqbO0KaBIOK2YUNTLv ; qQA3OG+lwebWsOltwJHFo/NOg2HhhoCIhoxHOEH3hBHXCuAi506JzbWQMwPtASI2ymCkjIQx3yIcEL ; Nxjjv4+Me3xiTFjomUzczTyUxwdWW3QwGTthzSHuiLx2jMzYo9Sg1PIv5PnpeBm4a3TAyDzjlGjxIs ; fyeAsJ2Hpe289F06z5vjoVcyhmmThm7u6VLiAhDzVYnVThIo87uuEhTVRwWL59SXac56DpApJOEkbN ; kHxHYcJ5UsVuo58L7aBk8MSOsTCQC5n9uTmdG4cT61OhHxH6fMZgfbj9KLv1FiORD5va4s6ed3R36g ; x154RmkzbH8yYvrwmMYz6cPgGGDwr+xv640Jaxyosh/1SfSD2KckL0XHUzaCTn2Sz0YpwpL22eIGNe ; N8Kml7K9tNZaNUJv9kgAEj+4ONb0XrQb6vhg1TRjrYfIL2ozd4cW1L+lBfV6dI+q8BlZEY9HNGjqmX ; rW5fcfBeHHAWg76B5g1ydcn3QCwgJirJOO3E8pG1DgMDBazGlUcUcctt4ZGGjJurTm4GBTRnko1VGc ; BfJQmaYzpRVIDrJq9xbjrcDQ2eySeAV7u0BbHjLhdwXCNM63cUkAv7OTCYQ80J55+JBMXqnT7/wlmB ; 9Et8OaIoBpPHTu2kSoMAd5/GKc2xlmjiD27ObKbV0ouw9V5u8AiN1jvsMo5imbcmDAtCJzjAiflnxH ; nhmy/egnu7PWSzKkj393MoFAo4GyNuRuPit2vIvwIPaG/O9CwLDXoLOgvitXu8f7LTYWHUQmAFyBKT ; ghzeotxm7MkhjFekZKSQCHXFQIYfTskrSFdkQ6TccH6BMtstksnXeT/ZWg7HhAOGCY/gKMXW/wNwDZ ; MTej0zzaQ9+zV3a0qTXAB0O2g7Xr6vH1PWOLsQIJeShE8G3enc4cn0QB5sCR3NkWDULRa6m0BYR/bD ; LDPhCWuCPubO266mvZNd6ZN2XL/cWzQrL/f/VMdSs+cLgxAAAAAElFTkSuQmCC ; thumbnail end ; ; Ultimaker, 0.4 mm Nozzle  ; external perimeters extrusion width = 0.40mm ; perimeters extrusion width = 0.40mm ; infill extrusion width = 0.40mm ; solid infill extrusion width = 0.40mm ; top infill extrusion width = 0.40mm ; first layer extrusion width = 0.40mm  ;TYPE:Custom ; Printer_Settings_ID: Ultimaker 2  ; # # # # # # START Header G21 \t\t; metric values G90 \t\t; absolute positioning M82 \t\t; set extruder to absolute mode M107 \t\t; start with the fan off  M140 S55\t; start bed heating  G28 X0 Y0 Z0\t; move X/Y/Z to endstops G1 X1 Y6 F15000\t; move X/Y to start position G1 Z35 F9000\t; move Z to start position  ; Wait for bed and nozzle temperatures M190 S50\t; wait for bed temperature - 5 M140 S55\t; continue bed heating M109 S205\t; wait for nozzle temperature  ; Purge and prime M83 \t\t; set extruder to relative mode G92 E0           ; reset extrusion distance G0 X0 Y1 F10000 G1 F150 E20 ; compress the bowden tube G1 E-8 F1200 G0 X30 Y1 F5000     G0 F1200 Z0.1 ; Cut the connection to priming blob G0 X100 F10000 ; disconnect with the prime blob G0 X50         ; Avoid the metal clip holding the Ultimaker glass plate G0 Z0.2 F720 G1 E8 F1200 G1 X80 E3 F1000  ; intro line 1 G1 X110 E4 F1000 ; intro line 2 G1 X140 F600        ; drag filament to decompress bowden tube G1 X100 F3200       ; wipe backwards a bit G1 X150 F3200       ; back to where there is no plastic: avoid dragging G92 E0           ; reset extruder reference M82 \t\t; set extruder to absolute mode  ; # # # # # # END Header G21 ; set units to millimeters G90 ; use absolute coordinates M82 ; use absolute distances for extrusion G92 E0 ; reset extrusion distance ; Filament gcode M107 ; disable fan ;LAYER_CHANGE ;Z:0.2 ;HEIGHT:0.2 G1 E-6.5 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z.2 F9000 ; lift G1 X87.509 Y100.116 ; move to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Skirt/Brim ;WIDTH:0.4 G1 F900 G1 X88.935 Y99.247 E6.51869 ; skirt G1 X89.978 Y99.081 E6.53051 ; skirt G1 X105.749 Y98.943 E6.70707 ; skirt G1 X119.961 Y98.946 E6.86617 ; skirt G1 X134.025 Y99.081 E7.02362 ; skirt G1 X135.644 Y99.491 E7.04232 ; skirt G1 X136.491 Y100.116 E7.0541 ; skirt G1 X139.42 Y103.045 E7.10047 ; skirt G1 X140.289 Y104.471 E7.11916 ; skirt G1 X140.456 Y105.545 E7.13133 ; skirt G1 X140.456 Y119.527 E7.28786 ; skirt G1 X140.061 Y121.15 E7.30656 ; skirt G1 X139.42 Y122.027 E7.31872 ; skirt G1 X136.491 Y124.956 E7.36509 ; skirt G1 X135.065 Y125.825 E7.38378 ; skirt G1 X134.004 Y125.992 E7.3958 ; skirt G1 X116.988 Y126.055 E7.58629 ; skirt G1 X89.997 Y125.992 E7.88845 ; skirt G1 X88.376 Y125.592 E7.90714 ; skirt G1 X87.509 Y124.956 E7.91918 ; skirt G1 X84.58 Y122.027 E7.96555 ; skirt G1 X83.711 Y120.601 E7.98424 ; skirt G1 X83.544 Y119.527 E7.99641 ; skirt G1 X83.544 Y105.545 E8.15294 ; skirt G1 X83.939 Y103.922 E8.17164 ; skirt G1 X84.58 Y103.045 E8.1838 ; skirt G1 X87.466 Y100.158 E8.2295 ; skirt G1 X87.719 Y100.411 F9000 ; move to first skirt point G1 F900 G1 X87.761 Y100.369 E8.23016 ; skirt G1 X89.123 Y99.563 E8.24788 ; skirt G1 X89.981 Y99.438 E8.25759 ; skirt G1 X105.752 Y99.3 E8.43415 ; skirt G1 X119.961 Y99.303 E8.59322 ; skirt G1 X134.022 Y99.438 E8.75064 ; skirt G1 X135.55 Y99.846 E8.76834 ; skirt G1 X136.239 Y100.369 E8.77802 ; skirt G1 X139.168 Y103.297 E8.82438 ; skirt G1 X139.973 Y104.659 E8.84209 ; skirt G1 X140.099 Y105.545 E8.85211 ; skirt G1 X140.099 Y119.527 E9.00864 ; skirt G1 X139.705 Y121.059 E9.02635 ; skirt G1 X139.168 Y121.775 E9.03637 ; skirt G1 X136.239 Y124.704 E9.08274 ; skirt G1 X134.877 Y125.509 E9.10045 ; skirt G1 X134.003 Y125.635 E9.11034 ; skirt G1 X116.988 Y125.698 E9.30082 ; skirt G1 X89.998 Y125.635 E9.60297 ; skirt G1 X88.467 Y125.236 E9.62068 ; skirt G1 X87.761 Y124.704 E9.63058 ; skirt G1 X84.832 Y121.775 E9.67695 ; skirt G1 X84.027 Y120.413 E9.69466 ; skirt G1 X83.901 Y119.527 E9.70468 ; skirt G1 X83.901 Y105.545 E9.86121 ; skirt G1 X84.295 Y104.013 E9.87892 ; skirt G1 X84.832 Y103.297 E9.88894 ; skirt G1 X87.677 Y100.453 E9.93397 ; skirt G1 E3.43397 F1500 ; retract G92 E0 ; reset extrusion distance G1 X89.55 Y103.529 F9000 ; move to first brim point G1 E6.5 F1500 ;  ; unretract G1 F900 G1 X90.15 Y103.164 E6.50786 ; brim G1 X91.627 Y102.796 E6.5249 ; brim G1 X104.397 Y102.796 E6.66786 ; brim G1 X106.046 Y102.661 E6.68638 ; brim G1 X107.405 Y102.796 E6.70167 ; brim G1 X118.216 Y102.796 E6.8227 ; brim G1 X119.853 Y102.661 E6.84109 ; brim G1 X121.024 Y102.744 E6.85423 ; brim G1 X121.315 Y102.796 E6.85754 ; brim G1 X132.478 Y102.802 E6.98251 ; brim G1 X133.942 Y103.203 E6.9995 ; brim G1 X134.764 Y103.696 E7.01023 ; brim G1 X135.818 Y104.74 E7.02684 ; brim G1 X136.44 Y105.849 E7.04107 ; brim G1 X136.731 Y107.086 E7.0553 ; brim G1 X136.741 Y117.967 E7.17711 ; brim G1 X136.333 Y119.479 E7.19464 ; brim G1 X135.84 Y120.3 E7.20536 ; brim G1 X134.795 Y121.356 E7.22199 ; brim G1 X133.676 Y121.981 E7.23634 ; brim G1 X132.366 Y122.277 E7.25137 ; brim G1 X115.779 Y122.277 E7.43706 ; brim G1 X115.379 Y122.34 E7.44159 ; brim G1 X113.394 Y122.34 E7.46381 ; brim G1 X112.994 Y122.277 E7.46834 ; brim G1 X112.293 Y122.34 E7.47622 ; brim G1 X110.308 Y122.34 E7.49844 ; brim G1 X109.908 Y122.277 E7.50297 ; brim G1 X91.631 Y122.277 E7.70758 ; brim G1 X90.36 Y121.994 E7.72216 ; brim G1 X89.281 Y121.413 E7.73588 ; brim G1 X88.32 Y120.511 E7.75063 ; brim G1 X87.627 Y119.386 E7.76542 ; brim G1 X87.259 Y117.908 E7.78247 ; brim G1 X87.283 Y106.957 E7.90506 ; brim G1 X87.562 Y105.843 E7.91792 ; brim G1 X88.147 Y104.783 E7.93147 ; brim G1 X89.06 Y103.827 E7.94627 ; brim G1 X89.498 Y103.56 E7.95201 ; brim G1 X89.684 Y103.865 F9000 ; move to first brim point G1 F900 G1 X90.312 Y103.483 E7.96024 ; brim G1 X91.648 Y103.153 E7.97565 ; brim G1 X104.429 Y103.153 E8.11873 ; brim G1 X106.054 Y103.019 E8.13698 ; brim G1 X107.387 Y103.153 E8.15198 ; brim G1 X118.249 Y103.153 E8.27358 ; brim G1 X119.84 Y103.018 E8.29145 ; brim G1 X121.283 Y103.153 E8.30767 ; brim G1 X132.408 Y103.153 E8.43221 ; brim G1 X133.782 Y103.523 E8.44814 ; brim G1 X134.529 Y103.966 E8.45786 ; brim G1 X135.55 Y104.976 E8.47394 ; brim G1 X136.099 Y105.956 E8.48652 ; brim G1 X136.374 Y107.107 E8.49977 ; brim G1 X136.384 Y117.944 E8.62109 ; brim G1 X136.013 Y119.318 E8.63702 ; brim G1 X135.57 Y120.065 E8.64674 ; brim G1 X134.559 Y121.086 E8.66283 ; brim G1 X133.526 Y121.656 E8.67604 ; brim G1 X132.347 Y121.92 E8.68957 ; brim G1 X115.749 Y121.92 E8.87538 ; brim G1 X115.364 Y121.983 E8.87975 ; brim G1 X113.409 Y121.983 E8.90164 ; brim G1 X113.023 Y121.92 E8.90602 ; brim G1 X112.278 Y121.983 E8.91439 ; brim G1 X110.323 Y121.983 E8.93628 ; brim G1 X109.938 Y121.92 E8.94065 ; brim G1 X91.651 Y121.92 E9.14537 ; brim G1 X90.463 Y121.652 E9.159 ; brim G1 X89.473 Y121.111 E9.17163 ; brim G1 X88.583 Y120.269 E9.18535 ; brim G1 X87.947 Y119.224 E9.19904 ; brim G1 X87.616 Y117.887 E9.21446 ; brim G1 X87.635 Y107.02 E9.33611 ; brim G1 X87.887 Y105.993 E9.34795 ; brim G1 X88.423 Y105.011 E9.36047 ; brim G1 X89.267 Y104.12 E9.37421 ; brim G1 X89.633 Y103.897 E9.37901 ; brim G1 X89.819 Y104.202 F9000 ; move to first brim point G1 F900 G1 X90.474 Y103.802 E9.3876 ; brim G1 X91.669 Y103.51 E9.40137 ; brim G1 X104.462 Y103.51 E9.54458 ; brim G1 X106.06 Y103.376 E9.56253 ; brim G1 X107.369 Y103.51 E9.57726 ; brim G1 X118.282 Y103.51 E9.69943 ; brim G1 X119.827 Y103.375 E9.71679 ; brim G1 X120.953 Y103.454 E9.72943 ; brim G1 X121.25 Y103.51 E9.73281 ; brim G1 X132.384 Y103.51 E9.85745 ; brim G1 X133.623 Y103.843 E9.87181 ; brim G1 X134.294 Y104.236 E9.88052 ; brim G1 X135.28 Y105.212 E9.89605 ; brim G1 X135.775 Y106.107 E9.9075 ; brim G1 X136.017 Y107.128 E9.91925 ; brim G1 X136.026 Y117.92 E10.04006 ; brim G1 X135.693 Y119.159 E10.05442 ; brim G1 X135.3 Y119.83 E10.06313 ; brim G1 X134.324 Y120.816 E10.07866 ; brim G1 X133.379 Y121.33 E10.0907 ; brim G1 X132.327 Y121.563 E10.10276 ; brim G1 X115.718 Y121.563 E10.28869 ; brim G1 X115.348 Y121.626 E10.29289 ; brim G1 X113.425 Y121.626 E10.31442 ; brim G1 X113.054 Y121.563 E10.31863 ; brim G1 X112.262 Y121.626 E10.32752 ; brim G1 X110.339 Y121.626 E10.34905 ; brim G1 X109.969 Y121.563 E10.35325 ; brim G1 X91.672 Y121.563 E10.55808 ; brim G1 X90.568 Y121.31 E10.57076 ; brim G1 X89.666 Y120.81 E10.58231 ; brim G1 X88.876 Y120.063 E10.59448 ; brim G1 X88.266 Y119.062 E10.6076 ; brim G1 X87.974 Y117.866 E10.62138 ; brim G1 X87.988 Y107.082 E10.7421 ; brim G1 X88.212 Y106.142 E10.75292 ; brim G1 X88.7 Y105.238 E10.76442 ; brim G1 X89.473 Y104.412 E10.77708 ; brim G1 X89.767 Y104.233 E10.78093 ; brim G1 X89.949 Y104.535 F9000 ; move to first brim point G1 F900 G1 X90.634 Y104.123 E10.78988 ; brim G1 X91.69 Y103.867 E10.80204 ; brim G1 X104.496 Y103.867 E10.9454 ; brim G1 X106.039 Y103.733 E10.96274 ; brim G1 X107.351 Y103.867 E10.9775 ; brim G1 X118.316 Y103.867 E11.10025 ; brim G1 X119.838 Y103.733 E11.11735 ; brim G1 X121.215 Y103.867 E11.13284 ; brim G1 X132.361 Y103.867 E11.25762 ; brim G1 X133.465 Y104.165 E11.27042 ; brim G1 X134.061 Y104.508 E11.27812 ; brim G1 X134.98 Y105.407 E11.29251 ; brim G1 X135.45 Y106.258 E11.30339 ; brim G1 X135.665 Y107.188 E11.31408 ; brim G1 X135.669 Y117.897 E11.43396 ; brim G1 X135.372 Y119.001 E11.44676 ; brim G1 X135.029 Y119.597 E11.45446 ; brim G1 X134.128 Y120.517 E11.46888 ; brim G1 X133.275 Y120.987 E11.47978 ; brim G1 X132.307 Y121.205 E11.49089 ; brim G1 X115.686 Y121.205 E11.67696 ; brim G1 X115.331 Y121.269 E11.681 ; brim G1 X113.441 Y121.269 E11.70216 ; brim G1 X113.087 Y121.205 E11.70619 ; brim G1 X110.355 Y121.269 E11.73678 ; brim G1 X110.001 Y121.205 E11.74081 ; brim G1 X91.692 Y121.205 E11.94578 ; brim G1 X90.717 Y120.984 E11.95697 ; brim G1 X89.894 Y120.534 E11.96747 ; brim G1 X89.139 Y119.821 E11.9791 ; brim G1 X88.586 Y118.902 E11.99111 ; brim G1 X88.331 Y117.845 E12.00328 ; brim G1 X88.345 Y107.105 E12.12351 ; brim G1 X88.553 Y106.25 E12.13336 ; brim G1 X89.002 Y105.43 E12.14383 ; brim G1 X89.715 Y104.675 E12.15546 ; brim G1 X89.898 Y104.566 E12.15784 ; brim G1 X90.077 Y104.868 F9000 ; move to first brim point G1 F900 G1 X90.793 Y104.444 E12.16716 ; brim G1 X91.711 Y104.224 E12.17773 ; brim G1 X104.53 Y104.224 E12.32124 ; brim G1 X106.046 Y104.09 E12.33828 ; brim G1 X107.332 Y104.224 E12.35275 ; brim G1 X118.351 Y104.224 E12.47611 ; brim G1 X119.824 Y104.09 E12.49267 ; brim G1 X120.88 Y104.165 E12.50452 ; brim G1 X121.18 Y104.224 E12.50794 ; brim G1 X132.336 Y104.224 E12.63283 ; brim G1 X133.347 Y104.502 E12.64457 ; brim G1 X133.86 Y104.804 E12.65123 ; brim G1 X134.711 Y105.643 E12.66461 ; brim G1 X135.108 Y106.364 E12.67382 ; brim G1 X135.308 Y107.21 E12.68355 ; brim G1 X135.312 Y117.872 E12.80291 ; brim G1 X135.034 Y118.883 E12.81465 ; brim G1 X134.733 Y119.396 E12.82131 ; brim G1 X133.893 Y120.246 E12.83469 ; brim G1 X133.127 Y120.661 E12.84444 ; brim G1 X132.288 Y120.848 E12.85406 ; brim G1 X115.652 Y120.848 E13.0403 ; brim G1 X115.314 Y120.912 E13.04415 ; brim G1 X113.458 Y120.912 E13.06493 ; brim G1 X113.121 Y120.848 E13.06877 ; brim G1 X112.228 Y120.912 E13.07879 ; brim G1 X110.373 Y120.912 E13.09956 ; brim G1 X110.035 Y120.848 E13.10341 ; brim G1 X91.711 Y120.848 E13.30854 ; brim G1 X90.864 Y120.658 E13.31826 ; brim G1 X90.122 Y120.258 E13.3277 ; brim G1 X89.403 Y119.579 E13.33877 ; brim G1 X88.907 Y118.743 E13.34965 ; brim G1 X88.688 Y117.825 E13.36022 ; brim G1 X88.697 Y107.166 E13.47955 ; brim G1 X88.879 Y106.398 E13.48839 ; brim G1 X89.278 Y105.658 E13.4978 ; brim G1 X89.957 Y104.939 E13.50887 ; brim G1 X90.025 Y104.899 E13.50975 ; brim G1 X90.202 Y105.202 F9000 ; move to first brim point G1 F900 G1 X90.949 Y104.766 E13.51943 ; brim G1 X91.732 Y104.581 E13.52844 ; brim G1 X104.566 Y104.581 E13.67211 ; brim G1 X106.024 Y104.447 E13.6885 ; brim G1 X107.313 Y104.581 E13.70301 ; brim G1 X118.387 Y104.581 E13.82698 ; brim G1 X119.835 Y104.447 E13.84326 ; brim G1 X121.145 Y104.581 E13.858 ; brim G1 X132.312 Y104.581 E13.98301 ; brim G1 X133.189 Y104.823 E13.99319 ; brim G1 X133.628 Y105.076 E13.99886 ; brim G1 X134.411 Y105.839 E14.0111 ; brim G1 X134.783 Y106.514 E14.01973 ; brim G1 X134.955 Y107.269 E14.0284 ; brim G1 X134.955 Y117.848 E14.14683 ; brim G1 X134.713 Y118.725 E14.15701 ; brim G1 X134.46 Y119.164 E14.16268 ; brim G1 X133.697 Y119.947 E14.17492 ; brim G1 X133.022 Y120.319 E14.18355 ; brim G1 X132.267 Y120.491 E14.19222 ; brim G1 X115.616 Y120.491 E14.37862 ; brim G1 X115.296 Y120.555 E14.38227 ; brim G1 X113.477 Y120.555 E14.40263 ; brim G1 X113.157 Y120.491 E14.40628 ; brim G1 X112.21 Y120.555 E14.41691 ; brim G1 X110.391 Y120.555 E14.43727 ; brim G1 X110.071 Y120.491 E14.44092 ; brim G1 X91.732 Y120.491 E14.64622 ; brim G1 X90.969 Y120.316 E14.65498 ; brim G1 X90.315 Y119.957 E14.66333 ; brim G1 X89.669 Y119.339 E14.67334 ; brim G1 X89.229 Y118.587 E14.68309 ; brim G1 X89.045 Y117.805 E14.69208 ; brim G1 X89.054 Y107.188 E14.81094 ; brim G1 X89.22 Y106.506 E14.8188 ; brim G1 X89.579 Y105.851 E14.82716 ; brim G1 X90.16 Y105.244 E14.83657 ; brim G1 X90.418 Y105.491 F9000 ; move to first brim point G1 F900 G1 X90.437 Y105.471 E14.83688 ; brim G1 X91.103 Y105.089 E14.84548 ; brim G1 X91.752 Y104.938 E14.85294 ; brim G1 X104.602 Y104.938 E14.99679 ; brim G1 X106.032 Y104.804 E15.01287 ; brim G1 X107.294 Y104.938 E15.02708 ; brim G1 X118.424 Y104.938 E15.15168 ; brim G1 X119.822 Y104.804 E15.1674 ; brim G1 X120.805 Y104.876 E15.17843 ; brim G1 X121.108 Y104.938 E15.18189 ; brim G1 X132.287 Y104.938 E15.30704 ; brim G1 X133.068 Y105.16 E15.31613 ; brim G1 X133.427 Y105.371 E15.32079 ; brim G1 X134.141 Y106.074 E15.33201 ; brim G1 X134.457 Y106.661 E15.33947 ; brim G1 X134.598 Y107.288 E15.34666 ; brim G1 X134.598 Y117.823 E15.4646 ; brim G1 X134.376 Y118.604 E15.47369 ; brim G1 X134.165 Y118.963 E15.47835 ; brim G1 X133.462 Y119.677 E15.48957 ; brim G1 X132.876 Y119.993 E15.49702 ; brim G1 X132.248 Y120.134 E15.50423 ; brim G1 X115.578 Y120.134 E15.69085 ; brim G1 X115.276 Y120.198 E15.69431 ; brim G1 X112.492 Y120.134 E15.72548 ; brim G1 X112.19 Y120.198 E15.72894 ; brim G1 X110.411 Y120.198 E15.74886 ; brim G1 X110.109 Y120.134 E15.75232 ; brim G1 X91.752 Y120.134 E15.95782 ; brim G1 X91.116 Y119.99 E15.96512 ; brim G1 X90.544 Y119.682 E15.97239 ; brim G1 X89.935 Y119.099 E15.98183 ; brim G1 X89.553 Y118.433 E15.99043 ; brim G1 X89.402 Y117.785 E15.99788 ; brim G1 X89.406 Y107.249 E16.11583 ; brim G1 X89.546 Y106.653 E16.12268 ; brim G1 X89.854 Y106.08 E16.12996 ; brim G1 X90.376 Y105.534 E16.13842 ; brim G1 X90.634 Y105.781 F9000 ; move to first brim point G1 F900 G1 X90.676 Y105.737 E16.1391 ; brim G1 X91.254 Y105.413 E16.14652 ; brim G1 X91.771 Y105.295 E16.15246 ; brim G1 X104.64 Y105.295 E16.29653 ; brim G1 X106.039 Y105.162 E16.31226 ; brim G1 X107.275 Y105.295 E16.32618 ; brim G1 X118.462 Y105.295 E16.45142 ; brim G1 X119.808 Y105.161 E16.46656 ; brim G1 X121.07 Y105.295 E16.48077 ; brim G1 X132.26 Y105.295 E16.60604 ; brim G1 X132.943 Y105.495 E16.61401 ; brim G1 X133.222 Y105.665 E16.61767 ; brim G1 X133.868 Y106.307 E16.62787 ; brim G1 X134.129 Y106.804 E16.63415 ; brim G1 X134.241 Y107.308 E16.63993 ; brim G1 X134.241 Y117.796 E16.75734 ; brim G1 X134.041 Y118.479 E16.76531 ; brim G1 X133.872 Y118.759 E16.76897 ; brim G1 X133.229 Y119.405 E16.77917 ; brim G1 X132.732 Y119.665 E16.78545 ; brim G1 X132.228 Y119.777 E16.79123 ; brim G1 X115.537 Y119.777 E16.97808 ; brim G1 X115.255 Y119.841 E16.98132 ; brim G1 X113.517 Y119.841 E17.00078 ; brim G1 X113.236 Y119.777 E17.00401 ; brim G1 X112.169 Y119.841 E17.01598 ; brim G1 X110.432 Y119.841 E17.03543 ; brim G1 X110.15 Y119.777 E17.03867 ; brim G1 X91.771 Y119.777 E17.24442 ; brim G1 X91.26 Y119.662 E17.25028 ; brim G1 X90.772 Y119.406 E17.25645 ; brim G1 X90.201 Y118.86 E17.26529 ; brim G1 X89.877 Y118.282 E17.27271 ; brim G1 X89.759 Y117.765 E17.27865 ; brim G1 X89.759 Y107.307 E17.39572 ; brim G1 X89.874 Y106.796 E17.40158 ; brim G1 X90.13 Y106.308 E17.40775 ; brim G1 X90.593 Y105.824 E17.41525 ; brim G1 X90.848 Y106.073 F9000 ; move to first brim point G1 F900 G1 X90.912 Y106.007 E17.41628 ; brim G1 X91.402 Y105.739 E17.42253 ; brim G1 X91.79 Y105.652 E17.42698 ; brim G1 X104.678 Y105.652 E17.57126 ; brim G1 X106.016 Y105.518 E17.58631 ; brim G1 X107.256 Y105.652 E17.60027 ; brim G1 X118.502 Y105.652 E17.72617 ; brim G1 X119.82 Y105.518 E17.741 ; brim G1 X120.726 Y105.586 E17.75117 ; brim G1 X121.031 Y105.652 E17.75466 ; brim G1 X132.234 Y105.652 E17.88008 ; brim G1 X132.99 Y105.937 E17.88912 ; brim G1 X133.566 Y106.498 E17.89812 ; brim G1 X133.802 Y106.948 E17.90381 ; brim G1 X133.884 Y107.326 E17.90814 ; brim G1 X133.884 Y117.77 E18.02506 ; brim G1 X133.6 Y118.526 E18.0341 ; brim G1 X133.038 Y119.102 E18.04311 ; brim G1 X132.588 Y119.338 E18.0488 ; brim G1 X132.21 Y119.42 E18.05313 ; brim G1 X115.492 Y119.42 E18.24028 ; brim G1 X115.232 Y119.483 E18.24327 ; brim G1 X113.54 Y119.483 E18.26221 ; brim G1 X113.28 Y119.42 E18.2652 ; brim G1 X112.146 Y119.483 E18.27791 ; brim G1 X110.455 Y119.483 E18.29684 ; brim G1 X110.194 Y119.42 E18.29985 ; brim G1 X91.79 Y119.42 E18.50588 ; brim G1 X91.405 Y119.335 E18.51029 ; brim G1 X90.961 Y119.102 E18.5159 ; brim G1 X90.471 Y118.624 E18.52356 ; brim G1 X90.203 Y118.134 E18.52981 ; brim G1 X90.116 Y117.746 E18.53426 ; brim G1 X90.116 Y107.326 E18.65091 ; brim G1 X90.201 Y106.941 E18.65532 ; brim G1 X90.434 Y106.497 E18.66093 ; brim G1 X90.806 Y106.116 E18.66689 ; brim G1 X91.062 Y106.365 F9000 ; move to first brim point G1 F900 G1 X91.147 Y106.277 E18.66826 ; brim G1 X91.546 Y106.066 E18.67331 ; brim G1 X91.809 Y106.009 E18.67632 ; brim G1 X104.719 Y106.009 E18.82084 ; brim G1 X106.024 Y105.876 E18.83552 ; brim G1 X107.236 Y106.009 E18.84917 ; brim G1 X118.543 Y106.009 E18.97575 ; brim G1 X119.806 Y105.875 E18.98997 ; brim G1 X120.991 Y106.009 E19.00332 ; brim G1 X132.206 Y106.009 E19.12887 ; brim G1 X132.784 Y106.229 E19.13579 ; brim G1 X133.293 Y106.73 E19.14379 ; brim G1 X133.527 Y107.345 E19.15116 ; brim G1 X133.527 Y117.742 E19.26755 ; brim G1 X133.307 Y118.32 E19.27447 ; brim G1 X132.806 Y118.829 E19.28247 ; brim G1 X132.191 Y119.063 E19.28984 ; brim G1 X115.443 Y119.063 E19.47733 ; brim G1 X115.207 Y119.126 E19.48006 ; brim G1 X113.566 Y119.126 E19.49843 ; brim G1 X113.329 Y119.063 E19.50118 ; brim G1 X112.357 Y119.063 E19.51206 ; brim G1 X112.121 Y119.126 E19.51479 ; brim G1 X110.48 Y119.126 E19.53316 ; brim G1 X110.244 Y119.063 E19.53589 ; brim G1 X91.809 Y119.063 E19.74227 ; brim G1 X91.19 Y118.826 E19.74969 ; brim G1 X90.741 Y118.389 E19.7567 ; brim G1 X90.53 Y117.99 E19.76175 ; brim G1 X90.473 Y117.727 E19.76476 ; brim G1 X90.473 Y107.345 E19.88098 ; brim G1 X90.71 Y106.726 E19.8884 ; brim G1 X91.02 Y106.408 E19.89337 ; brim G1 X91.27 Y106.658 F9000 ; move to first brim point G1 F900 G1 X91.378 Y106.551 E19.89507 ; brim G1 X91.684 Y106.396 E19.89891 ; brim G1 X104.76 Y106.366 E20.04529 ; brim G1 X106.001 Y106.232 E20.05926 ; brim G1 X107.216 Y106.366 E20.07294 ; brim G1 X118.585 Y106.366 E20.20021 ; brim G1 X119.793 Y106.232 E20.21382 ; brim G1 X120.645 Y106.296 E20.22338 ; brim G1 X120.95 Y106.366 E20.22688 ; brim G1 X132.176 Y106.366 E20.35255 ; brim G1 X132.548 Y106.497 E20.35697 ; brim G1 X133.018 Y106.961 E20.36436 ; brim G1 X133.17 Y107.363 E20.36917 ; brim G1 X133.17 Y117.712 E20.48502 ; brim G1 X133.039 Y118.084 E20.48944 ; brim G1 X132.575 Y118.554 E20.49683 ; brim G1 X132.173 Y118.706 E20.50164 ; brim G1 X115.388 Y118.706 E20.68954 ; brim G1 X115.178 Y118.769 E20.69199 ; brim G1 X113.595 Y118.769 E20.70971 ; brim G1 X113.385 Y118.706 E20.71216 ; brim G1 X112.302 Y118.706 E20.72428 ; brim G1 X112.092 Y118.769 E20.72673 ; brim G1 X110.509 Y118.769 E20.74445 ; brim G1 X110.299 Y118.706 E20.7469 ; brim G1 X91.827 Y118.706 E20.95369 ; brim G1 X91.378 Y118.521 E20.95913 ; brim G1 X91.015 Y118.159 E20.96487 ; brim G1 X90.86 Y117.852 E20.96872 ; brim G1 X90.83 Y107.363 E21.08614 ; brim G1 X91.015 Y106.914 E21.09158 ; brim G1 X91.228 Y106.701 E21.09495 ; brim G1 X91.481 Y106.953 F9000 ; move to first brim point G1 F900 G1 X91.607 Y106.827 E21.09694 ; brim G1 X91.813 Y106.729 E21.09949 ; brim G1 X104.803 Y106.723 E21.24491 ; brim G1 X106.009 Y106.59 E21.25849 ; brim G1 X107.196 Y106.723 E21.27186 ; brim G1 X118.629 Y106.723 E21.39985 ; brim G1 X119.779 Y106.589 E21.41281 ; brim G1 X120.908 Y106.723 E21.42554 ; brim G1 X132.143 Y106.723 E21.55131 ; brim G1 X132.343 Y106.795 E21.55369 ; brim G1 X132.71 Y107.145 E21.55937 ; brim G1 X132.813 Y107.38 E21.56224 ; brim G1 X132.813 Y117.679 E21.67754 ; brim G1 X132.741 Y117.88 E21.67993 ; brim G1 X132.392 Y118.246 E21.68559 ; brim G1 X132.157 Y118.349 E21.68846 ; brim G1 X115.322 Y118.349 E21.87692 ; brim G1 X115.143 Y118.412 E21.87904 ; brim G1 X113.63 Y118.412 E21.89598 ; brim G1 X113.45 Y118.349 E21.89811 ; brim G1 X112.236 Y118.349 E21.9117 ; brim G1 X112.057 Y118.412 E21.91382 ; brim G1 X110.544 Y118.412 E21.93076 ; brim G1 X110.365 Y118.349 E21.93288 ; brim G1 X91.843 Y118.349 E22.14023 ; brim G1 X91.607 Y118.245 E22.14312 ; brim G1 X91.291 Y117.93 E22.14811 ; brim G1 X91.193 Y117.723 E22.15067 ; brim G1 X91.187 Y107.38 E22.26646 ; brim G1 X91.291 Y107.143 E22.26936 ; brim G1 X91.438 Y106.996 E22.27169 ; brim G1 X91.71 Y107.267 F9000 ; move to first brim point G1 F900 G1 X91.897 Y107.08 E22.27465 ; brim G1 X104.848 Y107.08 E22.41963 ; brim G1 X105.986 Y106.946 E22.43246 ; brim G1 X107.176 Y107.08 E22.44587 ; brim G1 X118.675 Y107.08 E22.5746 ; brim G1 X119.766 Y106.946 E22.58691 ; brim G1 X120.561 Y107.006 E22.59584 ; brim G1 X120.864 Y107.08 E22.59933 ; brim G1 X132.169 Y107.108 E22.72589 ; brim G1 X132.456 Y107.433 E22.73074 ; brim G1 X132.428 Y117.705 E22.84573 ; brim G1 X132.103 Y117.992 E22.85058 ; brim G1 X115.237 Y117.992 E23.03939 ; brim G1 X115.097 Y118.055 E23.04111 ; brim G1 X112.152 Y117.992 E23.07409 ; brim G1 X112.011 Y118.055 E23.07582 ; brim G1 X110.59 Y118.055 E23.09173 ; brim G1 X110.449 Y117.992 E23.09346 ; brim G1 X91.897 Y117.992 E23.30115 ; brim G1 X91.544 Y117.64 E23.30673 ; brim G1 X91.544 Y107.433 E23.421 ; brim G1 X91.667 Y107.31 E23.42295 ; brim G1 X91.901 Y107.542 F9000 ; move to first brim point G1 F900 G1 X92.006 Y107.438 E23.4246 ; brim G1 X104.895 Y107.438 E23.56889 ; brim G1 X105.967 Y107.303 E23.58099 ; brim G1 X107.107 Y107.438 E23.59384 ; brim G1 X118.723 Y107.438 E23.72388 ; brim G1 X119.78 Y107.303 E23.73581 ; brim G1 X120.818 Y107.438 E23.74753 ; brim G1 X131.994 Y107.438 E23.87264 ; brim G1 X132.099 Y107.542 E23.87429 ; brim G1 X132.099 Y117.53 E23.9861 ; brim G1 X131.994 Y117.635 E23.98776 ; brim G1 X115.054 Y117.635 E24.1774 ; brim G1 X114.99 Y117.698 E24.17841 ; brim G1 X113.782 Y117.698 E24.19193 ; brim G1 X113.719 Y117.635 E24.19293 ; brim G1 X111.968 Y117.635 E24.21253 ; brim G1 X111.905 Y117.698 E24.21353 ; brim G1 X110.696 Y117.698 E24.22706 ; brim G1 X110.633 Y117.635 E24.22806 ; brim G1 X92.006 Y117.635 E24.43659 ; brim G1 X91.901 Y117.53 E24.43825 ; brim G1 X91.901 Y107.602 E24.54939 ; brim G1 E18.04939 F1500 ; retract G92 E0 ; reset extrusion distance G92 E0 ; reset extrusion distance G1 X92.708 Y116.101 F9000 ; move to first infill point G1 E6.5 F1500 ;  ; unretract ;TYPE:Solid infill ;WIDTH:0.40208 G1 F787.5 G1 X93.274 Y116.667 E6.50901 ; infill G1 X93.782 Y116.667 E6.51473 ; infill G1 X92.869 Y115.754 E6.52927 ; infill G1 X92.869 Y115.246 E6.53499 ; infill G1 X94.29 Y116.667 E6.55762 ; infill G1 X94.798 Y116.667 E6.56334 ; infill G1 X92.869 Y114.738 E6.59406 ; infill G1 X92.869 Y114.23 E6.59978 ; infill G1 X95.306 Y116.667 E6.63859 ; infill G1 X95.814 Y116.667 E6.64431 ; infill G1 X92.869 Y113.722 E6.69121 ; infill G1 X92.869 Y113.215 E6.69692 ; infill G1 X96.322 Y116.667 E6.7519 ; infill G1 X96.829 Y116.667 E6.75761 ; infill G1 X92.869 Y112.707 E6.82067 ; infill G1 X92.869 Y112.199 E6.82639 ; infill G1 X97.337 Y116.667 E6.89754 ; infill G1 X97.845 Y116.667 E6.90326 ; infill G1 X92.869 Y111.691 E6.9825 ; infill G1 X92.869 Y111.183 E6.98822 ; infill G1 X98.353 Y116.667 E7.07555 ; infill G1 X98.861 Y116.667 E7.08127 ; infill G1 X92.869 Y110.675 E7.17669 ; infill G1 X92.869 Y110.167 E7.18241 ; infill G1 X99.369 Y116.667 E7.28592 ; infill G1 X99.877 Y116.667 E7.29164 ; infill G1 X92.869 Y109.659 E7.40324 ; infill G1 X92.869 Y109.151 E7.40896 ; infill G1 X100.385 Y116.667 E7.52865 ; infill G1 X100.893 Y116.667 E7.53437 ; infill G1 X92.869 Y108.643 E7.66214 ; infill G1 X92.869 Y108.405 E7.66482 ; infill G1 X93.139 Y108.405 E7.66786 ; infill G1 X101.401 Y116.667 E7.79942 ; infill G1 X101.909 Y116.667 E7.80514 ; infill G1 X93.647 Y108.405 E7.9367 ; infill G1 X94.155 Y108.405 E7.94242 ; infill G1 X102.417 Y116.667 E8.07398 ; infill G1 X102.925 Y116.667 E8.0797 ; infill G1 X94.663 Y108.405 E8.21126 ; infill G1 X95.171 Y108.405 E8.21698 ; infill G1 X103.433 Y116.667 E8.34854 ; infill G1 X103.94 Y116.667 E8.35425 ; infill G1 X95.679 Y108.405 E8.48581 ; infill G1 X96.187 Y108.405 E8.49153 ; infill G1 X104.448 Y116.667 E8.62309 ; infill G1 X104.956 Y116.667 E8.62881 ; infill G1 X96.695 Y108.405 E8.76037 ; infill G1 X97.203 Y108.405 E8.76609 ; infill G1 X105.464 Y116.667 E8.89765 ; infill G1 X105.972 Y116.667 E8.90337 ; infill G1 X97.711 Y108.405 E9.03493 ; infill G1 X98.218 Y108.405 E9.04064 ; infill G1 X106.48 Y116.667 E9.1722 ; infill G1 X106.988 Y116.667 E9.17792 ; infill G1 X98.726 Y108.405 E9.30948 ; infill G1 X99.234 Y108.405 E9.3152 ; infill G1 X107.496 Y116.667 E9.44676 ; infill G1 X108.004 Y116.667 E9.45248 ; infill G1 X99.742 Y108.405 E9.58404 ; infill G1 X100.25 Y108.405 E9.58976 ; infill G1 X108.512 Y116.667 E9.72132 ; infill G1 X109.02 Y116.667 E9.72704 ; infill G1 X100.758 Y108.405 E9.8586 ; infill G1 X101.266 Y108.405 E9.86432 ; infill G1 X109.528 Y116.667 E9.99588 ; infill G1 X110.036 Y116.667 E10.0016 ; infill G1 X101.774 Y108.405 E10.13316 ; infill G1 X102.282 Y108.405 E10.13888 ; infill G1 X110.544 Y116.667 E10.27044 ; infill G1 X110.795 Y116.667 E10.27327 ; infill G1 X110.996 Y116.692 E10.27555 ; infill G1 X111.025 Y116.73 E10.27609 ; infill G1 X111.115 Y116.73 E10.2771 ; infill G1 X102.79 Y108.405 E10.40967 ; infill G1 X103.298 Y108.405 E10.41539 ; infill G1 X111.596 Y116.704 E10.54754 ; infill G1 X111.806 Y116.667 E10.54994 ; infill G1 X112.067 Y116.667 E10.55288 ; infill G1 X103.806 Y108.405 E10.68444 ; infill G1 X104.314 Y108.405 E10.69016 ; infill G1 X112.575 Y116.667 E10.82172 ; infill G1 X113.083 Y116.667 E10.82744 ; infill G1 X104.822 Y108.405 E10.959 ; infill G1 X105.081 Y108.389 E10.96192 ; infill G1 X105.264 Y108.34 E10.96405 ; infill G1 X113.591 Y116.667 E11.09665 ; infill G1 X113.881 Y116.667 E11.09992 ; infill G1 X114.081 Y116.692 E11.10219 ; infill G1 X114.111 Y116.73 E11.10274 ; infill G1 X114.162 Y116.73 E11.10331 ; infill G1 X105.723 Y108.29 E11.2377 ; infill G1 X105.94 Y108.273 E11.24015 ; infill G1 X106.244 Y108.304 E11.24359 ; infill G1 X114.665 Y116.725 E11.37769 ; infill G1 X114.691 Y116.692 E11.37816 ; infill G1 X114.892 Y116.667 E11.38044 ; infill G1 X115.115 Y116.667 E11.38295 ; infill G1 X106.81 Y108.362 E11.5152 ; infill G1 X107.059 Y108.405 E11.51805 ; infill G1 X107.361 Y108.405 E11.52145 ; infill G1 X115.623 Y116.667 E11.65301 ; infill G1 X116.131 Y116.667 E11.65873 ; infill G1 X107.869 Y108.405 E11.79029 ; infill G1 X108.377 Y108.405 E11.79601 ; infill G1 X116.639 Y116.667 E11.92757 ; infill G1 X117.147 Y116.667 E11.93329 ; infill G1 X108.885 Y108.405 E12.06485 ; infill G1 X109.393 Y108.405 E12.07057 ; infill G1 X117.655 Y116.667 E12.20213 ; infill G1 X118.162 Y116.667 E12.20784 ; infill G1 X109.901 Y108.405 E12.3394 ; infill G1 X110.409 Y108.405 E12.34512 ; infill G1 X118.67 Y116.667 E12.47668 ; infill G1 X119.178 Y116.667 E12.4824 ; infill G1 X110.917 Y108.405 E12.61396 ; infill G1 X111.425 Y108.405 E12.61968 ; infill G1 X119.686 Y116.667 E12.75124 ; infill G1 X120.194 Y116.667 E12.75696 ; infill G1 X111.933 Y108.405 E12.88852 ; infill G1 X112.44 Y108.405 E12.89423 ; infill G1 X120.702 Y116.667 E13.02579 ; infill G1 X121.21 Y116.667 E13.03151 ; infill G1 X112.948 Y108.405 E13.16307 ; infill G1 X113.456 Y108.405 E13.16879 ; infill G1 X121.718 Y116.667 E13.30035 ; infill G1 X122.226 Y116.667 E13.30607 ; infill G1 X113.964 Y108.405 E13.43763 ; infill G1 X114.472 Y108.405 E13.44335 ; infill G1 X122.734 Y116.667 E13.57491 ; infill G1 X123.242 Y116.667 E13.58063 ; infill G1 X114.98 Y108.405 E13.71219 ; infill G1 X115.488 Y108.405 E13.71791 ; infill G1 X123.75 Y116.667 E13.84947 ; infill G1 X124.258 Y116.667 E13.85519 ; infill G1 X115.996 Y108.405 E13.98675 ; infill G1 X116.504 Y108.405 E13.99247 ; infill G1 X124.766 Y116.667 E14.12403 ; infill G1 X125.273 Y116.667 E14.12974 ; infill G1 X117.012 Y108.405 E14.2613 ; infill G1 X117.52 Y108.405 E14.26702 ; infill G1 X125.781 Y116.667 E14.39858 ; infill G1 X126.289 Y116.667 E14.4043 ; infill G1 X118.028 Y108.405 E14.53586 ; infill G1 X118.536 Y108.405 E14.54158 ; infill G1 X126.797 Y116.667 E14.67314 ; infill G1 X127.305 Y116.667 E14.67886 ; infill G1 X119.002 Y108.364 E14.81108 ; infill G1 X119.156 Y108.322 E14.81288 ; infill G1 X119.445 Y108.299 E14.81614 ; infill G1 X127.813 Y116.667 E14.94939 ; infill G1 X128.321 Y116.667 E14.95511 ; infill G1 X119.941 Y108.287 E15.08855 ; infill G1 X120.37 Y108.32 E15.09339 ; infill G1 X120.522 Y108.36 E15.09516 ; infill G1 X128.829 Y116.667 E15.22744 ; infill G1 X129.337 Y116.667 E15.23316 ; infill G1 X121.075 Y108.405 E15.36472 ; infill G1 X121.583 Y108.405 E15.37044 ; infill G1 X129.845 Y116.667 E15.502 ; infill G1 X130.353 Y116.667 E15.50772 ; infill G1 X122.091 Y108.405 E15.63928 ; infill G1 X122.599 Y108.405 E15.645 ; infill G1 X130.861 Y116.667 E15.77656 ; infill G1 X131.131 Y116.667 E15.7796 ; infill G1 X131.131 Y116.429 E15.78228 ; infill G1 X123.107 Y108.405 E15.91005 ; infill G1 X123.615 Y108.405 E15.91577 ; infill G1 X131.131 Y115.921 E16.03546 ; infill G1 X131.131 Y115.413 E16.04118 ; infill G1 X124.123 Y108.405 E16.15278 ; infill G1 X124.631 Y108.405 E16.1585 ; infill G1 X131.131 Y114.905 E16.26201 ; infill G1 X131.131 Y114.397 E16.26773 ; infill G1 X125.139 Y108.405 E16.36315 ; infill G1 X125.647 Y108.405 E16.36887 ; infill G1 X131.131 Y113.889 E16.4562 ; infill G1 X131.131 Y113.382 E16.46191 ; infill G1 X126.155 Y108.405 E16.54116 ; infill G1 X126.663 Y108.405 E16.54688 ; infill G1 X131.131 Y112.874 E16.61804 ; infill G1 X131.131 Y112.366 E16.62376 ; infill G1 X127.17 Y108.405 E16.68684 ; infill G1 X127.678 Y108.405 E16.69256 ; infill G1 X131.131 Y111.858 E16.74755 ; infill G1 X131.131 Y111.35 E16.75327 ; infill G1 X128.186 Y108.405 E16.80017 ; infill G1 X128.694 Y108.405 E16.80589 ; infill G1 X131.131 Y110.842 E16.8447 ; infill G1 X131.131 Y110.334 E16.85042 ; infill G1 X129.202 Y108.405 E16.88114 ; infill G1 X129.71 Y108.405 E16.88686 ; infill G1 X131.131 Y109.826 E16.90949 ; infill G1 X131.131 Y109.318 E16.91521 ; infill G1 X130.218 Y108.405 E16.92975 ; infill G1 X130.726 Y108.405 E16.93547 ; infill G1 X131.292 Y108.971 E16.94448 ; infill G1 X131.363 Y108.173 F9000 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.399999 G1 F750 G1 X131.363 Y112.536 E16.99332 ; perimeter G1 X131.363 Y116.899 E17.04216 ; perimeter G1 X114.895 Y116.899 E17.22652 ; perimeter G1 X114.83 Y116.903 E17.22725 ; perimeter G1 X114.727 Y116.962 E17.22858 ; perimeter G1 X114.045 Y116.962 E17.23621 ; perimeter G1 X114.009 Y116.915 E17.23687 ; perimeter G1 X113.877 Y116.899 E17.23836 ; perimeter G1 X111.809 Y116.899 E17.26151 ; perimeter G1 X111.744 Y116.903 E17.26224 ; perimeter G1 X111.641 Y116.962 E17.26357 ; perimeter G1 X110.96 Y116.962 E17.27119 ; perimeter G1 X110.923 Y116.915 E17.27186 ; perimeter G1 X110.792 Y116.899 E17.27334 ; perimeter G1 X92.637 Y116.899 E17.47658 ; perimeter G1 X92.637 Y108.173 E17.57427 ; perimeter G1 X104.922 Y108.173 E17.7118 ; perimeter G1 X105.294 Y108.091 E17.71606 ; perimeter G1 X105.942 Y108.04 E17.72334 ; perimeter G1 X107.064 Y108.173 E17.73599 ; perimeter G1 X118.751 Y108.173 E17.86682 ; perimeter G1 X119.115 Y108.092 E17.87099 ; perimeter G1 X119.767 Y108.04 E17.87831 ; perimeter G1 X120.157 Y108.071 E17.88269 ; perimeter G1 X120.791 Y108.173 E17.88988 ; perimeter G1 X131.303 Y108.173 E18.00756 ; perimeter G1 X131.72 Y107.816 F9000 ; move to first perimeter point ;TYPE:External perimeter G1 F375 G1 X131.72 Y112.536 E18.0604 ; perimeter G1 X131.72 Y117.256 E18.11324 ; perimeter G1 X114.895 Y117.256 E18.30159 ; perimeter G1 X114.806 Y117.32 E18.30282 ; perimeter G1 X113.966 Y117.32 E18.31222 ; perimeter G1 X113.877 Y117.256 E18.31345 ; perimeter G1 X111.809 Y117.256 E18.3366 ; perimeter G1 X111.72 Y117.32 E18.33783 ; perimeter G1 X110.881 Y117.32 E18.34722 ; perimeter G1 X110.792 Y117.256 E18.34845 ; perimeter G1 X92.28 Y117.256 E18.55569 ; perimeter G1 X92.28 Y107.816 E18.66137 ; perimeter G1 X104.922 Y107.816 E18.80289 ; perimeter G1 X105.233 Y107.738 E18.80648 ; perimeter G1 X105.947 Y107.682 E18.8145 ; perimeter G1 X107.064 Y107.816 E18.82709 ; perimeter G1 X118.751 Y107.816 E18.95792 ; perimeter G1 X119.052 Y107.739 E18.9614 ; perimeter G1 X119.766 Y107.682 E18.96942 ; perimeter G1 X120.184 Y107.715 E18.97411 ; perimeter G1 X120.791 Y107.816 E18.981 ; perimeter G1 X131.66 Y107.816 E19.10268 ; perimeter G1 X131.719 Y108.212 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:0.4 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 1; ;LAYER:1 G1 E12.60268 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z.4 F9000 ; simple layer change M104 S210 ; set temperature M140 S60 ; set bed temperature G1 X92.886 Y108.354 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Solid infill ;WIDTH:0.486634 G1 F3150 G1 X92.847 Y108.315 E6.50077 ; infill G1 X92.793 Y108.329 E6.50155 ; infill G1 X92.779 Y108.383 E6.50233 ; infill G1 X92.818 Y108.422 E6.5031 ; infill G1 X92.872 Y108.408 E6.50388 ; infill ;WIDTH:0.399999 G1 X92.789 Y108.978 E6.51033 ; infill G1 X93.442 Y108.325 E6.52067 ; infill G1 X93.947 Y108.325 E6.52632 ; infill G1 X92.789 Y109.483 E6.54465 ; infill G1 X92.789 Y109.988 E6.5503 ; infill G1 X94.452 Y108.325 E6.57663 ; infill G1 X94.957 Y108.325 E6.58228 ; infill G1 X92.789 Y110.493 E6.6166 ; infill G1 X92.789 Y110.998 E6.62225 ; infill G1 X95.462 Y108.325 E6.66457 ; infill G1 X95.967 Y108.325 E6.67022 ; infill G1 X92.789 Y111.503 E6.72053 ; infill G1 X92.789 Y112.008 E6.72618 ; infill G1 X96.472 Y108.325 E6.78449 ; infill G1 X96.977 Y108.325 E6.79014 ; infill G1 X92.789 Y112.513 E6.85644 ; infill G1 X92.789 Y113.018 E6.86209 ; infill G1 X97.482 Y108.325 E6.93639 ; infill G1 X97.987 Y108.325 E6.94204 ; infill G1 X92.789 Y113.523 E7.02433 ; infill G1 X92.789 Y114.028 E7.02998 ; infill G1 X98.492 Y108.325 E7.12027 ; infill G1 X98.997 Y108.325 E7.12592 ; infill G1 X92.789 Y114.533 E7.2242 ; infill G1 X92.789 Y115.038 E7.22985 ; infill G1 X99.502 Y108.325 E7.33613 ; infill G1 X100.007 Y108.325 E7.34178 ; infill G1 X92.789 Y115.543 E7.45605 ; infill G1 X92.789 Y116.048 E7.4617 ; infill G1 X100.512 Y108.325 E7.58397 ; infill G1 X101.017 Y108.325 E7.58962 ; infill G1 X92.789 Y116.553 E7.71988 ; infill G1 X92.751 Y116.815 E7.72284 ; infill ;WIDTH:0.38292 G1 X92.68 Y116.796 E7.72362 ; infill G1 X92.699 Y116.867 E7.7244 ; infill G1 X92.74 Y116.856 E7.72485 ; infill ;WIDTH:0.399999 G1 X93.1 Y116.747 E7.72906 ; infill G1 X101.522 Y108.325 E7.8624 ; infill G1 X102.027 Y108.325 E7.86805 ; infill G1 X93.605 Y116.747 E8.00139 ; infill G1 X94.11 Y116.747 E8.00704 ; infill G1 X102.532 Y108.325 E8.14038 ; infill G1 X103.037 Y108.325 E8.14603 ; infill G1 X94.615 Y116.747 E8.27937 ; infill G1 X95.12 Y116.747 E8.28502 ; infill G1 X103.542 Y108.325 E8.41836 ; infill G1 X104.047 Y108.325 E8.42401 ; infill G1 X95.625 Y116.747 E8.55735 ; infill G1 X96.13 Y116.747 E8.563 ; infill G1 X104.552 Y108.325 E8.69634 ; infill G1 X105.074 Y108.308 E8.70219 ; infill G1 X96.635 Y116.747 E8.83579 ; infill G1 X97.14 Y116.747 E8.84144 ; infill G1 X105.673 Y108.214 E8.97653 ; infill G1 X106.175 Y108.217 E8.98215 ; infill G1 X97.645 Y116.747 E9.1172 ; infill G1 X98.15 Y116.747 E9.12285 ; infill G1 X106.627 Y108.27 E9.25706 ; infill G1 X107.077 Y108.325 E9.26214 ; infill G1 X98.655 Y116.747 E9.39548 ; infill G1 X99.16 Y116.747 E9.40113 ; infill G1 X107.582 Y108.325 E9.53447 ; infill G1 X108.087 Y108.325 E9.54012 ; infill G1 X99.665 Y116.747 E9.67346 ; infill G1 X100.17 Y116.747 E9.67911 ; infill G1 X108.592 Y108.325 E9.81245 ; infill G1 X109.097 Y108.325 E9.8181 ; infill G1 X100.675 Y116.747 E9.95144 ; infill G1 X101.18 Y116.747 E9.95709 ; infill G1 X109.602 Y108.325 E10.09043 ; infill G1 X110.107 Y108.325 E10.09608 ; infill G1 X101.685 Y116.747 E10.22942 ; infill G1 X102.19 Y116.747 E10.23507 ; infill G1 X110.612 Y108.325 E10.36841 ; infill G1 X111.117 Y108.325 E10.37406 ; infill G1 X102.695 Y116.747 E10.5074 ; infill G1 X103.2 Y116.747 E10.51305 ; infill G1 X111.622 Y108.325 E10.64639 ; infill G1 X112.127 Y108.325 E10.65204 ; infill G1 X103.705 Y116.747 E10.78538 ; infill G1 X104.21 Y116.747 E10.79103 ; infill G1 X112.632 Y108.325 E10.92437 ; infill G1 X113.137 Y108.325 E10.93002 ; infill G1 X104.715 Y116.747 E11.06336 ; infill G1 X105.22 Y116.747 E11.06901 ; infill G1 X113.642 Y108.325 E11.20235 ; infill G1 X114.147 Y108.325 E11.208 ; infill G1 X105.725 Y116.747 E11.34134 ; infill G1 X106.23 Y116.747 E11.34699 ; infill G1 X114.651 Y108.325 E11.48032 ; infill G1 X115.156 Y108.325 E11.48597 ; infill G1 X106.735 Y116.747 E11.6193 ; infill G1 X107.24 Y116.747 E11.62495 ; infill G1 X115.661 Y108.325 E11.75828 ; infill G1 X116.166 Y108.325 E11.76393 ; infill G1 X107.745 Y116.747 E11.89726 ; infill G1 X108.25 Y116.747 E11.90291 ; infill G1 X116.671 Y108.325 E12.03624 ; infill G1 X117.176 Y108.325 E12.04189 ; infill G1 X108.755 Y116.747 E12.17522 ; infill G1 X109.26 Y116.747 E12.18087 ; infill G1 X117.681 Y108.325 E12.3142 ; infill G1 X118.186 Y108.325 E12.31985 ; infill G1 X109.765 Y116.747 E12.45318 ; infill G1 X110.173 Y116.929 E12.45818 ; infill ;WIDTH:0.38292 G1 X110.132 Y116.94 E12.45863 ; infill G1 X110.113 Y116.869 E12.45941 ; infill G1 X110.184 Y116.888 E12.46019 ; infill ;WIDTH:0.399999 G1 X110.27 Y116.747 E12.46204 ; infill G1 X118.691 Y108.325 E12.59537 ; infill G1 X119.289 Y108.232 E12.60214 ; infill G1 X110.769 Y116.753 E12.73703 ; infill G1 X111.216 Y116.81 E12.74207 ; infill G1 X119.829 Y108.198 E12.87842 ; infill G1 X120.298 Y108.234 E12.88369 ; infill G1 X111.772 Y116.759 E13.01866 ; infill G1 X111.62 Y116.938 E13.02129 ; infill ;WIDTH:0.38292 G1 X111.734 Y116.936 E13.02251 ; infill ;WIDTH:0.399999 G1 X112.29 Y116.747 E13.02908 ; infill G1 X120.719 Y108.317 E13.16253 ; infill G1 X121.384 Y108.162 E13.17017 ; infill ;WIDTH:0.38292 G1 X121.313 Y108.143 E13.17095 ; infill G1 X121.332 Y108.214 E13.17173 ; infill G1 X121.373 Y108.203 E13.17218 ; infill ;WIDTH:0.399999 G1 X121.216 Y108.325 E13.17441 ; infill G1 X112.795 Y116.747 E13.30774 ; infill G1 X113.3 Y116.747 E13.31339 ; infill G1 X121.721 Y108.325 E13.44672 ; infill G1 X122.226 Y108.325 E13.45237 ; infill G1 X113.804 Y116.747 E13.58571 ; infill G1 X114.246 Y116.81 E13.59071 ; infill G1 X122.731 Y108.325 E13.72504 ; infill G1 X123.236 Y108.325 E13.73069 ; infill G1 X114.796 Y116.766 E13.86432 ; infill G1 X115.32 Y116.747 E13.87019 ; infill G1 X123.741 Y108.325 E14.00352 ; infill G1 X124.246 Y108.325 E14.00917 ; infill G1 X115.825 Y116.747 E14.1425 ; infill G1 X116.33 Y116.747 E14.14815 ; infill G1 X124.751 Y108.325 E14.28148 ; infill G1 X125.256 Y108.325 E14.28713 ; infill G1 X116.835 Y116.747 E14.42046 ; infill G1 X117.34 Y116.747 E14.42611 ; infill G1 X125.761 Y108.325 E14.55944 ; infill G1 X126.266 Y108.325 E14.56509 ; infill G1 X117.845 Y116.747 E14.69842 ; infill G1 X118.35 Y116.747 E14.70407 ; infill G1 X126.771 Y108.325 E14.8374 ; infill G1 X127.276 Y108.325 E14.84305 ; infill G1 X118.854 Y116.747 E14.97639 ; infill G1 X119.359 Y116.747 E14.98204 ; infill G1 X127.781 Y108.325 E15.11538 ; infill G1 X128.286 Y108.325 E15.12103 ; infill G1 X119.864 Y116.747 E15.25437 ; infill G1 X120.369 Y116.747 E15.26002 ; infill G1 X128.791 Y108.325 E15.39336 ; infill G1 X129.296 Y108.325 E15.39901 ; infill G1 X120.874 Y116.747 E15.53235 ; infill G1 X121.379 Y116.747 E15.538 ; infill G1 X129.801 Y108.325 E15.67134 ; infill G1 X130.306 Y108.325 E15.67699 ; infill G1 X121.884 Y116.747 E15.81033 ; infill G1 X122.389 Y116.747 E15.81598 ; infill G1 X130.811 Y108.325 E15.94932 ; infill G1 X131.356 Y108.21 E15.95556 ; infill ;WIDTH:0.38292 G1 X131.285 Y108.191 E15.95634 ; infill G1 X131.304 Y108.262 E15.95712 ; infill G1 X131.345 Y108.251 E15.95757 ; infill ;WIDTH:0.399999 G1 X131.211 Y108.43 E15.96007 ; infill G1 X122.894 Y116.747 E16.09174 ; infill G1 X123.399 Y116.747 E16.09739 ; infill G1 X131.211 Y108.935 E16.22107 ; infill G1 X131.211 Y109.44 E16.22672 ; infill G1 X123.904 Y116.747 E16.3424 ; infill G1 X124.409 Y116.747 E16.34805 ; infill G1 X131.211 Y109.945 E16.45574 ; infill G1 X131.211 Y110.45 E16.46139 ; infill G1 X124.914 Y116.747 E16.56108 ; infill G1 X125.419 Y116.747 E16.56673 ; infill G1 X131.211 Y110.955 E16.65843 ; infill G1 X131.211 Y111.46 E16.66408 ; infill G1 X125.924 Y116.747 E16.74778 ; infill G1 X126.429 Y116.747 E16.75343 ; infill G1 X131.211 Y111.965 E16.82914 ; infill G1 X131.211 Y112.47 E16.83479 ; infill G1 X126.934 Y116.747 E16.9025 ; infill G1 X127.439 Y116.747 E16.90815 ; infill G1 X131.211 Y112.975 E16.96787 ; infill G1 X131.211 Y113.48 E16.97352 ; infill G1 X127.944 Y116.747 E17.02524 ; infill G1 X128.449 Y116.747 E17.03089 ; infill G1 X131.211 Y113.985 E17.07462 ; infill G1 X131.404 Y114.342 E17.07916 ; infill ;WIDTH:0.38292 G1 X131.333 Y114.323 E17.07994 ; infill G1 X131.352 Y114.394 E17.08072 ; infill G1 X131.393 Y114.383 E17.08117 ; infill ;WIDTH:0.399999 G1 X131.211 Y114.49 E17.08353 ; infill G1 X128.954 Y116.747 E17.11926 ; infill G1 X131.085 Y115.122 F9000 ; move to first infill point G1 F3150 G1 X129.459 Y116.747 E17.14499 ; infill G1 X131.211 Y116.747 E17.1646 ; infill G1 X131.211 Y114.995 E17.18421 ; infill G1 X130.865 Y115.83 F9000 ; move to first infill point ;WIDTH:0.377414 G1 F3150 G1 X130.865 Y116.401 E17.1902 ; infill G1 X130.294 Y116.401 E17.19619 ; infill G1 X130.739 Y115.956 E17.20279 ; infill G1 X131.443 Y108.093 F9000 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.399999 G1 F3000 G1 X131.443 Y112.536 E17.25253 ; perimeter G1 X131.443 Y116.979 E17.30227 ; perimeter G1 X114.975 Y116.979 E17.48663 ; perimeter G1 X114.912 Y116.983 E17.48734 ; perimeter G1 X114.82 Y117.042 E17.48856 ; perimeter G1 X113.953 Y117.042 E17.49827 ; perimeter G1 X113.911 Y116.991 E17.49901 ; perimeter G1 X113.797 Y116.979 E17.50029 ; perimeter G1 X111.889 Y116.979 E17.52165 ; perimeter G1 X111.826 Y116.983 E17.52236 ; perimeter G1 X111.734 Y117.042 E17.52358 ; perimeter G1 X110.867 Y117.042 E17.53329 ; perimeter G1 X110.826 Y116.991 E17.53402 ; perimeter G1 X110.712 Y116.979 E17.5353 ; perimeter G1 X92.557 Y116.979 E17.73854 ; perimeter G1 X92.557 Y108.093 E17.83802 ; perimeter G1 X104.912 Y108.093 E17.97633 ; perimeter G1 X105.28 Y108.012 E17.98055 ; perimeter G1 X105.943 Y107.96 E17.98799 ; perimeter G1 X107.078 Y108.093 E18.00078 ; perimeter G1 X118.74 Y108.093 E18.13133 ; perimeter G1 X119.099 Y108.013 E18.13545 ; perimeter G1 X119.519 Y107.983 E18.14016 ; perimeter G1 X120.173 Y107.992 E18.14748 ; perimeter G1 X120.801 Y108.093 E18.1546 ; perimeter G1 X131.383 Y108.093 E18.27306 ; perimeter G1 X131.8 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter G1 F1500 G1 X131.8 Y112.536 E18.32679 ; perimeter G1 X131.8 Y117.336 E18.38052 ; perimeter G1 X114.975 Y117.336 E18.56887 ; perimeter G1 X114.889 Y117.4 E18.57007 ; perimeter G1 X113.883 Y117.4 E18.58133 ; perimeter G1 X113.797 Y117.336 E18.58253 ; perimeter G1 X111.889 Y117.336 E18.60389 ; perimeter G1 X111.804 Y117.4 E18.60508 ; perimeter G1 X110.797 Y117.4 E18.61635 ; perimeter G1 X110.712 Y117.336 E18.61754 ; perimeter G1 X92.2 Y117.336 E18.82478 ; perimeter G1 X92.2 Y107.736 E18.93225 ; perimeter G1 X104.912 Y107.736 E19.07456 ; perimeter G1 X105.219 Y107.659 E19.0781 ; perimeter G1 X105.947 Y107.601 E19.08628 ; perimeter G1 X107.078 Y107.736 E19.09903 ; perimeter G1 X118.74 Y107.736 E19.22958 ; perimeter G1 X119.037 Y107.66 E19.23301 ; perimeter G1 X119.802 Y107.605 E19.2416 ; perimeter G1 X120.201 Y107.636 E19.24608 ; perimeter G1 X120.801 Y107.736 E19.25289 ; perimeter G1 X131.74 Y107.736 E19.37535 ; perimeter G1 X131.799 Y108.132 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:0.6 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 2; ;LAYER:2 G1 E12.87535 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z.6 F9000 ; simple layer change G1 X92.818 Y116.65 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Solid infill ;WIDTH:0.486634 G1 F3150 G1 X92.779 Y116.689 E6.50077 ; infill G1 X92.793 Y116.743 E6.50155 ; infill G1 X92.847 Y116.757 E6.50233 ; infill G1 X92.886 Y116.718 E6.5031 ; infill G1 X92.872 Y116.664 E6.50388 ; infill ;WIDTH:0.399999 G1 X92.789 Y116.094 E6.51033 ; infill G1 X93.442 Y116.747 E6.52067 ; infill G1 X93.947 Y116.747 E6.52632 ; infill G1 X92.789 Y115.589 E6.54465 ; infill G1 X92.789 Y115.084 E6.5503 ; infill G1 X94.452 Y116.747 E6.57663 ; infill G1 X94.957 Y116.747 E6.58228 ; infill G1 X92.789 Y114.579 E6.6166 ; infill G1 X92.789 Y114.074 E6.62225 ; infill G1 X95.462 Y116.747 E6.66457 ; infill G1 X95.967 Y116.747 E6.67022 ; infill G1 X92.789 Y113.569 E6.72053 ; infill G1 X92.789 Y113.064 E6.72618 ; infill G1 X96.472 Y116.747 E6.78449 ; infill G1 X96.977 Y116.747 E6.79014 ; infill G1 X92.789 Y112.559 E6.85644 ; infill G1 X92.789 Y112.054 E6.86209 ; infill G1 X97.482 Y116.747 E6.93639 ; infill G1 X97.987 Y116.747 E6.94204 ; infill G1 X92.789 Y111.549 E7.02433 ; infill G1 X92.789 Y111.044 E7.02998 ; infill G1 X98.492 Y116.747 E7.12027 ; infill G1 X98.997 Y116.747 E7.12592 ; infill G1 X92.789 Y110.539 E7.2242 ; infill G1 X92.789 Y110.034 E7.22985 ; infill G1 X99.502 Y116.747 E7.33613 ; infill G1 X100.007 Y116.747 E7.34178 ; infill G1 X92.789 Y109.529 E7.45605 ; infill G1 X92.789 Y109.024 E7.4617 ; infill G1 X100.512 Y116.747 E7.58397 ; infill G1 X101.017 Y116.747 E7.58962 ; infill G1 X92.789 Y108.519 E7.71988 ; infill G1 X93.1 Y108.325 E7.72398 ; infill G1 X101.522 Y116.747 E7.85732 ; infill G1 X102.027 Y116.747 E7.86297 ; infill G1 X93.605 Y108.325 E7.99631 ; infill G1 X94.11 Y108.325 E8.00196 ; infill G1 X102.532 Y116.747 E8.1353 ; infill G1 X103.037 Y116.747 E8.14095 ; infill G1 X94.615 Y108.325 E8.27429 ; infill G1 X95.12 Y108.325 E8.27994 ; infill G1 X103.542 Y116.747 E8.41328 ; infill G1 X104.047 Y116.747 E8.41893 ; infill G1 X95.625 Y108.325 E8.55227 ; infill G1 X96.13 Y108.325 E8.55792 ; infill G1 X104.552 Y116.747 E8.69126 ; infill G1 X105.057 Y116.747 E8.69691 ; infill G1 X96.635 Y108.325 E8.83025 ; infill G1 X97.14 Y108.325 E8.8359 ; infill G1 X105.562 Y116.747 E8.96924 ; infill G1 X106.067 Y116.747 E8.97489 ; infill G1 X97.645 Y108.325 E9.10823 ; infill G1 X98.15 Y108.325 E9.11388 ; infill G1 X106.572 Y116.747 E9.24722 ; infill G1 X107.077 Y116.747 E9.25287 ; infill G1 X98.655 Y108.325 E9.38621 ; infill G1 X99.16 Y108.325 E9.39186 ; infill G1 X107.582 Y116.747 E9.5252 ; infill G1 X108.087 Y116.747 E9.53085 ; infill G1 X99.665 Y108.325 E9.66419 ; infill G1 X100.17 Y108.325 E9.66984 ; infill G1 X108.592 Y116.747 E9.80318 ; infill G1 X109.097 Y116.747 E9.80883 ; infill G1 X100.675 Y108.325 E9.94217 ; infill G1 X101.18 Y108.325 E9.94782 ; infill G1 X109.602 Y116.747 E10.08116 ; infill G1 X110.107 Y116.747 E10.08681 ; infill G1 X101.685 Y108.325 E10.22015 ; infill G1 X102.19 Y108.325 E10.2258 ; infill G1 X110.612 Y116.747 E10.35914 ; infill G1 X111.18 Y116.81 E10.36554 ; infill G1 X102.695 Y108.325 E10.49987 ; infill G1 X103.2 Y108.325 E10.50552 ; infill G1 X111.679 Y116.804 E10.63976 ; infill G1 X112.127 Y116.747 E10.64482 ; infill G1 X103.705 Y108.325 E10.77816 ; infill G1 X104.21 Y108.325 E10.78381 ; infill G1 X112.632 Y116.747 E10.91715 ; infill G1 X113.137 Y116.747 E10.9228 ; infill G1 X104.715 Y108.325 E11.05614 ; infill G1 X105.175 Y108.281 E11.06131 ; infill G1 X113.642 Y116.747 E11.19535 ; infill G1 X114.21 Y116.81 E11.20175 ; infill G1 X105.618 Y108.218 E11.33778 ; infill G1 X106.115 Y108.211 E11.34334 ; infill G1 X114.715 Y116.81 E11.47949 ; infill G1 X115.156 Y116.747 E11.48448 ; infill G1 X106.687 Y108.278 E11.61856 ; infill G1 X107.24 Y108.325 E11.62477 ; infill G1 X115.661 Y116.747 E11.7581 ; infill G1 X116.166 Y116.747 E11.76375 ; infill G1 X107.745 Y108.325 E11.89708 ; infill G1 X108.25 Y108.325 E11.90273 ; infill G1 X116.671 Y116.747 E12.03606 ; infill G1 X117.176 Y116.747 E12.04171 ; infill G1 X108.755 Y108.325 E12.17504 ; infill G1 X109.26 Y108.325 E12.18069 ; infill G1 X117.681 Y116.747 E12.31402 ; infill G1 X118.186 Y116.747 E12.31967 ; infill G1 X109.765 Y108.325 E12.453 ; infill G1 X110.27 Y108.325 E12.45865 ; infill G1 X118.691 Y116.747 E12.59198 ; infill G1 X119.196 Y116.747 E12.59763 ; infill G1 X110.775 Y108.325 E12.73096 ; infill G1 X111.28 Y108.325 E12.73661 ; infill G1 X119.701 Y116.747 E12.86994 ; infill G1 X120.206 Y116.747 E12.87559 ; infill G1 X111.785 Y108.325 E13.00892 ; infill G1 X112.29 Y108.325 E13.01457 ; infill G1 X120.711 Y116.747 E13.1479 ; infill G1 X121.216 Y116.747 E13.15355 ; infill G1 X112.795 Y108.325 E13.28688 ; infill G1 X113.3 Y108.325 E13.29253 ; infill G1 X121.721 Y116.747 E13.42586 ; infill G1 X122.226 Y116.747 E13.43151 ; infill G1 X113.805 Y108.325 E13.56484 ; infill G1 X114.31 Y108.325 E13.57049 ; infill G1 X122.731 Y116.747 E13.70382 ; infill G1 X123.236 Y116.747 E13.70947 ; infill G1 X114.815 Y108.325 E13.8428 ; infill G1 X115.32 Y108.325 E13.84845 ; infill G1 X123.741 Y116.747 E13.98178 ; infill G1 X124.246 Y116.747 E13.98743 ; infill G1 X115.825 Y108.325 E14.12076 ; infill G1 X116.33 Y108.325 E14.12641 ; infill G1 X124.751 Y116.747 E14.25974 ; infill G1 X125.256 Y116.747 E14.26539 ; infill G1 X116.835 Y108.325 E14.39872 ; infill G1 X117.34 Y108.325 E14.40437 ; infill G1 X125.761 Y116.747 E14.5377 ; infill G1 X126.266 Y116.747 E14.54335 ; infill G1 X117.845 Y108.325 E14.67668 ; infill G1 X118.35 Y108.325 E14.68233 ; infill G1 X126.771 Y116.747 E14.81566 ; infill G1 X127.276 Y116.747 E14.82131 ; infill G1 X118.844 Y108.315 E14.9548 ; infill G1 X119.269 Y108.235 E14.95964 ; infill G1 X127.781 Y116.747 E15.0944 ; infill G1 X128.286 Y116.747 E15.10005 ; infill G1 X119.743 Y108.203 E15.23531 ; infill G1 X120.277 Y108.232 E15.2413 ; infill G1 X128.791 Y116.747 E15.3761 ; infill G1 X129.296 Y116.747 E15.38175 ; infill G1 X120.874 Y108.325 E15.51509 ; infill G1 X121.379 Y108.325 E15.52074 ; infill G1 X129.801 Y116.747 E15.65408 ; infill G1 X130.306 Y116.747 E15.65973 ; infill G1 X121.884 Y108.325 E15.79307 ; infill G1 X122.389 Y108.325 E15.79872 ; infill G1 X130.811 Y116.747 E15.93206 ; infill G1 X131.345 Y116.821 E15.9381 ; infill ;WIDTH:0.38292 G1 X131.356 Y116.862 E15.93855 ; infill G1 X131.285 Y116.881 E15.93933 ; infill G1 X131.304 Y116.81 E15.94011 ; infill ;WIDTH:0.399999 G1 X131.211 Y116.642 E15.94226 ; infill G1 X122.894 Y108.325 E16.07393 ; infill G1 X123.399 Y108.325 E16.07958 ; infill G1 X131.211 Y116.137 E16.20326 ; infill G1 X131.211 Y115.632 E16.20891 ; infill G1 X123.904 Y108.325 E16.32459 ; infill G1 X124.409 Y108.325 E16.33024 ; infill G1 X131.211 Y115.127 E16.43793 ; infill G1 X131.211 Y114.622 E16.44358 ; infill G1 X124.914 Y108.325 E16.54327 ; infill G1 X125.419 Y108.325 E16.54892 ; infill G1 X131.211 Y114.117 E16.64062 ; infill G1 X131.211 Y113.612 E16.64627 ; infill G1 X125.924 Y108.325 E16.72997 ; infill G1 X126.429 Y108.325 E16.73562 ; infill G1 X131.211 Y113.107 E16.81133 ; infill G1 X131.211 Y112.602 E16.81698 ; infill G1 X126.934 Y108.325 E16.88469 ; infill G1 X127.439 Y108.325 E16.89034 ; infill G1 X131.211 Y112.097 E16.95006 ; infill G1 X131.211 Y111.592 E16.95571 ; infill G1 X127.944 Y108.325 E17.00743 ; infill G1 X128.449 Y108.325 E17.01308 ; infill G1 X131.211 Y111.087 E17.05681 ; infill G1 X131.393 Y110.689 E17.06171 ; infill ;WIDTH:0.38292 G1 X131.404 Y110.73 E17.06216 ; infill G1 X131.333 Y110.749 E17.06294 ; infill G1 X131.352 Y110.678 E17.06372 ; infill ;WIDTH:0.399999 G1 X131.211 Y110.582 E17.06563 ; infill G1 X128.954 Y108.325 E17.10136 ; infill G1 X131.211 Y108.325 E17.12663 ; infill G1 X131.211 Y110.077 E17.14624 ; infill G1 X129.585 Y108.452 E17.17197 ; infill G1 X130.294 Y108.671 F9000 ; move to first infill point ;WIDTH:0.377415 G1 F3150 G1 X130.865 Y108.671 E17.17796 ; infill G1 X130.865 Y109.242 E17.18395 ; infill G1 X130.42 Y108.797 E17.19055 ; infill G1 X131.443 Y108.093 F9000 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.399999 G1 F3000 G1 X131.443 Y112.536 E17.24029 ; perimeter G1 X131.443 Y116.979 E17.29003 ; perimeter G1 X114.975 Y116.979 E17.47439 ; perimeter G1 X114.912 Y116.983 E17.4751 ; perimeter G1 X114.82 Y117.042 E17.47632 ; perimeter G1 X113.953 Y117.042 E17.48603 ; perimeter G1 X113.911 Y116.991 E17.48677 ; perimeter G1 X113.797 Y116.979 E17.48805 ; perimeter G1 X111.889 Y116.979 E17.50941 ; perimeter G1 X111.826 Y116.983 E17.51012 ; perimeter G1 X111.734 Y117.042 E17.51134 ; perimeter G1 X110.867 Y117.042 E17.52105 ; perimeter G1 X110.826 Y116.991 E17.52178 ; perimeter G1 X110.712 Y116.979 E17.52306 ; perimeter G1 X92.557 Y116.979 E17.7263 ; perimeter G1 X92.557 Y108.093 E17.82578 ; perimeter G1 X104.912 Y108.093 E17.96409 ; perimeter G1 X105.28 Y108.012 E17.96831 ; perimeter G1 X105.943 Y107.96 E17.97575 ; perimeter G1 X107.078 Y108.093 E17.98854 ; perimeter G1 X118.74 Y108.093 E18.11909 ; perimeter G1 X119.097 Y108.014 E18.12318 ; perimeter G1 X119.567 Y107.982 E18.12845 ; perimeter G1 X120.173 Y107.992 E18.13523 ; perimeter G1 X120.801 Y108.093 E18.14235 ; perimeter G1 X131.383 Y108.093 E18.26081 ; perimeter G1 X131.8 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter G1 F1500 G1 X131.8 Y112.536 E18.31454 ; perimeter G1 X131.8 Y117.336 E18.36827 ; perimeter G1 X114.975 Y117.336 E18.55662 ; perimeter G1 X114.889 Y117.4 E18.55782 ; perimeter G1 X113.883 Y117.4 E18.56908 ; perimeter G1 X113.797 Y117.336 E18.57028 ; perimeter G1 X111.889 Y117.336 E18.59164 ; perimeter G1 X111.804 Y117.4 E18.59283 ; perimeter G1 X110.797 Y117.4 E18.6041 ; perimeter G1 X110.712 Y117.336 E18.60529 ; perimeter G1 X92.2 Y117.336 E18.81253 ; perimeter G1 X92.2 Y107.736 E18.92 ; perimeter G1 X104.912 Y107.736 E19.06231 ; perimeter G1 X105.219 Y107.659 E19.06585 ; perimeter G1 X105.947 Y107.601 E19.07403 ; perimeter G1 X107.078 Y107.736 E19.08678 ; perimeter G1 X118.74 Y107.736 E19.21733 ; perimeter G1 X119.037 Y107.66 E19.22076 ; perimeter G1 X119.543 Y107.626 E19.22644 ; perimeter G1 X120.201 Y107.636 E19.23381 ; perimeter G1 X120.801 Y107.736 E19.24062 ; perimeter G1 X131.74 Y107.736 E19.36308 ; perimeter G1 X131.799 Y108.132 F9000 ; move inwards before travel M106 S255 ; enable fan ;LAYER_CHANGE ;Z:0.8 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 3; ;LAYER:3 G1 E12.86308 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z.8 F9000 ; simple layer change G1 X92.886 Y108.354 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Solid infill ;WIDTH:0.486634 G1 F3150 G1 X92.847 Y108.315 E6.50077 ; infill G1 X92.793 Y108.329 E6.50155 ; infill G1 X92.779 Y108.383 E6.50233 ; infill G1 X92.818 Y108.422 E6.5031 ; infill G1 X92.872 Y108.408 E6.50388 ; infill ;WIDTH:0.399999 G1 X92.789 Y108.978 E6.51033 ; infill G1 X93.442 Y108.325 E6.52067 ; infill G1 X93.947 Y108.325 E6.52632 ; infill G1 X92.789 Y109.483 E6.54465 ; infill G1 X92.789 Y109.988 E6.5503 ; infill G1 X94.452 Y108.325 E6.57663 ; infill G1 X94.957 Y108.325 E6.58228 ; infill G1 X92.789 Y110.493 E6.6166 ; infill G1 X92.789 Y110.998 E6.62225 ; infill G1 X95.462 Y108.325 E6.66457 ; infill G1 X95.967 Y108.325 E6.67022 ; infill G1 X92.789 Y111.503 E6.72053 ; infill G1 X92.789 Y112.008 E6.72618 ; infill G1 X96.472 Y108.325 E6.78449 ; infill G1 X96.977 Y108.325 E6.79014 ; infill G1 X92.789 Y112.513 E6.85644 ; infill G1 X92.789 Y113.018 E6.86209 ; infill G1 X97.482 Y108.325 E6.93639 ; infill G1 X97.987 Y108.325 E6.94204 ; infill G1 X92.789 Y113.523 E7.02433 ; infill G1 X92.789 Y114.028 E7.02998 ; infill G1 X98.492 Y108.325 E7.12027 ; infill G1 X98.997 Y108.325 E7.12592 ; infill G1 X92.789 Y114.533 E7.2242 ; infill G1 X92.789 Y115.038 E7.22985 ; infill G1 X99.502 Y108.325 E7.33613 ; infill G1 X100.007 Y108.325 E7.34178 ; infill G1 X92.789 Y115.543 E7.45605 ; infill G1 X92.789 Y116.048 E7.4617 ; infill G1 X100.512 Y108.325 E7.58397 ; infill G1 X101.017 Y108.325 E7.58962 ; infill G1 X92.789 Y116.553 E7.71988 ; infill G1 X92.751 Y116.815 E7.72284 ; infill ;WIDTH:0.38292 G1 X92.68 Y116.796 E7.72362 ; infill G1 X92.699 Y116.867 E7.7244 ; infill G1 X92.74 Y116.856 E7.72485 ; infill ;WIDTH:0.399999 G1 X93.1 Y116.747 E7.72906 ; infill G1 X101.522 Y108.325 E7.8624 ; infill G1 X102.027 Y108.325 E7.86805 ; infill G1 X93.605 Y116.747 E8.00139 ; infill G1 X94.11 Y116.747 E8.00704 ; infill G1 X102.532 Y108.325 E8.14038 ; infill G1 X103.037 Y108.325 E8.14603 ; infill G1 X94.615 Y116.747 E8.27937 ; infill G1 X95.12 Y116.747 E8.28502 ; infill G1 X103.542 Y108.325 E8.41836 ; infill G1 X104.047 Y108.325 E8.42401 ; infill G1 X95.625 Y116.747 E8.55735 ; infill G1 X96.13 Y116.747 E8.563 ; infill G1 X104.552 Y108.325 E8.69634 ; infill G1 X105.074 Y108.308 E8.70219 ; infill G1 X96.635 Y116.747 E8.83579 ; infill G1 X97.14 Y116.747 E8.84144 ; infill G1 X105.673 Y108.214 E8.97653 ; infill G1 X106.175 Y108.217 E8.98215 ; infill G1 X97.645 Y116.747 E9.1172 ; infill G1 X98.15 Y116.747 E9.12285 ; infill G1 X106.633 Y108.264 E9.25715 ; infill G1 X107.077 Y108.325 E9.26217 ; infill G1 X98.655 Y116.747 E9.39551 ; infill G1 X99.16 Y116.747 E9.40116 ; infill G1 X107.582 Y108.325 E9.5345 ; infill G1 X108.087 Y108.325 E9.54015 ; infill G1 X99.665 Y116.747 E9.67349 ; infill G1 X100.17 Y116.747 E9.67914 ; infill G1 X108.592 Y108.325 E9.81248 ; infill G1 X109.097 Y108.325 E9.81813 ; infill G1 X100.675 Y116.747 E9.95147 ; infill G1 X101.18 Y116.747 E9.95712 ; infill G1 X109.602 Y108.325 E10.09046 ; infill G1 X110.107 Y108.325 E10.09611 ; infill G1 X101.685 Y116.747 E10.22945 ; infill G1 X102.19 Y116.747 E10.2351 ; infill G1 X110.612 Y108.325 E10.36844 ; infill G1 X111.117 Y108.325 E10.37409 ; infill G1 X102.695 Y116.747 E10.50743 ; infill G1 X103.2 Y116.747 E10.51308 ; infill G1 X111.622 Y108.325 E10.64642 ; infill G1 X112.127 Y108.325 E10.65207 ; infill G1 X103.705 Y116.747 E10.78541 ; infill G1 X104.21 Y116.747 E10.79106 ; infill G1 X112.632 Y108.325 E10.9244 ; infill G1 X113.137 Y108.325 E10.93005 ; infill G1 X104.715 Y116.747 E11.06339 ; infill G1 X105.22 Y116.747 E11.06904 ; infill G1 X113.642 Y108.325 E11.20238 ; infill G1 X114.147 Y108.325 E11.20803 ; infill G1 X105.725 Y116.747 E11.34137 ; infill G1 X106.23 Y116.747 E11.34702 ; infill G1 X114.651 Y108.325 E11.48035 ; infill G1 X115.156 Y108.325 E11.486 ; infill G1 X106.735 Y116.747 E11.61933 ; infill G1 X107.24 Y116.747 E11.62498 ; infill G1 X115.661 Y108.325 E11.75831 ; infill G1 X116.166 Y108.325 E11.76396 ; infill G1 X107.745 Y116.747 E11.89729 ; infill G1 X108.25 Y116.747 E11.90294 ; infill G1 X116.671 Y108.325 E12.03627 ; infill G1 X117.176 Y108.325 E12.04192 ; infill G1 X108.755 Y116.747 E12.17525 ; infill G1 X109.26 Y116.747 E12.1809 ; infill G1 X117.681 Y108.325 E12.31423 ; infill G1 X118.186 Y108.325 E12.31988 ; infill G1 X109.765 Y116.747 E12.45321 ; infill G1 X110.173 Y116.929 E12.45821 ; infill ;WIDTH:0.38292 G1 X110.132 Y116.94 E12.45866 ; infill G1 X110.113 Y116.869 E12.45944 ; infill G1 X110.184 Y116.888 E12.46022 ; infill ;WIDTH:0.399999 G1 X110.27 Y116.747 E12.46207 ; infill G1 X118.691 Y108.325 E12.5954 ; infill G1 X119.292 Y108.23 E12.60221 ; infill G1 X110.769 Y116.753 E12.73714 ; infill G1 X111.216 Y116.81 E12.74218 ; infill G1 X119.829 Y108.198 E12.87853 ; infill G1 X120.298 Y108.234 E12.8838 ; infill G1 X111.772 Y116.759 E13.01877 ; infill G1 X111.62 Y116.938 E13.0214 ; infill ;WIDTH:0.38292 G1 X111.734 Y116.936 E13.02262 ; infill ;WIDTH:0.399999 G1 X112.29 Y116.747 E13.02919 ; infill G1 X120.719 Y108.317 E13.16264 ; infill G1 X121.384 Y108.162 E13.17028 ; infill ;WIDTH:0.38292 G1 X121.313 Y108.143 E13.17106 ; infill G1 X121.332 Y108.214 E13.17184 ; infill G1 X121.373 Y108.203 E13.17229 ; infill ;WIDTH:0.399999 G1 X121.216 Y108.325 E13.17452 ; infill G1 X112.795 Y116.747 E13.30785 ; infill G1 X113.3 Y116.747 E13.3135 ; infill G1 X121.721 Y108.325 E13.44683 ; infill G1 X122.226 Y108.325 E13.45248 ; infill G1 X113.804 Y116.747 E13.58582 ; infill G1 X114.246 Y116.81 E13.59082 ; infill G1 X122.731 Y108.325 E13.72515 ; infill G1 X123.236 Y108.325 E13.7308 ; infill G1 X114.796 Y116.766 E13.86443 ; infill G1 X115.32 Y116.747 E13.8703 ; infill G1 X123.741 Y108.325 E14.00363 ; infill G1 X124.246 Y108.325 E14.00928 ; infill G1 X115.825 Y116.747 E14.14261 ; infill G1 X116.33 Y116.747 E14.14826 ; infill G1 X124.751 Y108.325 E14.28159 ; infill G1 X125.256 Y108.325 E14.28724 ; infill G1 X116.835 Y116.747 E14.42057 ; infill G1 X117.34 Y116.747 E14.42622 ; infill G1 X125.761 Y108.325 E14.55955 ; infill G1 X126.266 Y108.325 E14.5652 ; infill G1 X117.845 Y116.747 E14.69853 ; infill G1 X118.35 Y116.747 E14.70418 ; infill G1 X126.771 Y108.325 E14.83751 ; infill G1 X127.276 Y108.325 E14.84316 ; infill G1 X118.854 Y116.747 E14.9765 ; infill G1 X119.359 Y116.747 E14.98215 ; infill G1 X127.781 Y108.325 E15.11549 ; infill G1 X128.286 Y108.325 E15.12114 ; infill G1 X119.864 Y116.747 E15.25448 ; infill G1 X120.369 Y116.747 E15.26013 ; infill G1 X128.791 Y108.325 E15.39347 ; infill G1 X129.296 Y108.325 E15.39912 ; infill G1 X120.874 Y116.747 E15.53246 ; infill G1 X121.379 Y116.747 E15.53811 ; infill G1 X129.801 Y108.325 E15.67145 ; infill G1 X130.306 Y108.325 E15.6771 ; infill G1 X121.884 Y116.747 E15.81044 ; infill G1 X122.389 Y116.747 E15.81609 ; infill G1 X130.811 Y108.325 E15.94943 ; infill G1 X131.356 Y108.21 E15.95567 ; infill ;WIDTH:0.38292 G1 X131.285 Y108.191 E15.95645 ; infill G1 X131.304 Y108.262 E15.95723 ; infill G1 X131.345 Y108.251 E15.95768 ; infill ;WIDTH:0.399999 G1 X131.211 Y108.43 E15.96018 ; infill G1 X122.894 Y116.747 E16.09185 ; infill G1 X123.399 Y116.747 E16.0975 ; infill G1 X131.211 Y108.935 E16.22118 ; infill G1 X131.211 Y109.44 E16.22683 ; infill G1 X123.904 Y116.747 E16.34251 ; infill G1 X124.409 Y116.747 E16.34816 ; infill G1 X131.211 Y109.945 E16.45585 ; infill G1 X131.211 Y110.45 E16.4615 ; infill G1 X124.914 Y116.747 E16.56119 ; infill G1 X125.419 Y116.747 E16.56684 ; infill G1 X131.211 Y110.955 E16.65854 ; infill G1 X131.211 Y111.46 E16.66419 ; infill G1 X125.924 Y116.747 E16.74789 ; infill G1 X126.429 Y116.747 E16.75354 ; infill G1 X131.211 Y111.965 E16.82925 ; infill G1 X131.211 Y112.47 E16.8349 ; infill G1 X126.934 Y116.747 E16.90261 ; infill G1 X127.439 Y116.747 E16.90826 ; infill G1 X131.211 Y112.975 E16.96798 ; infill G1 X131.211 Y113.48 E16.97363 ; infill G1 X127.944 Y116.747 E17.02535 ; infill G1 X128.449 Y116.747 E17.031 ; infill G1 X131.211 Y113.985 E17.07473 ; infill G1 X131.404 Y114.342 E17.07927 ; infill ;WIDTH:0.38292 G1 X131.333 Y114.323 E17.08005 ; infill G1 X131.352 Y114.394 E17.08083 ; infill G1 X131.393 Y114.383 E17.08128 ; infill ;WIDTH:0.399999 G1 X131.211 Y114.49 E17.08364 ; infill G1 X128.954 Y116.747 E17.11937 ; infill G1 X131.085 Y115.122 F9000 ; move to first infill point G1 F3150 G1 X129.459 Y116.747 E17.1451 ; infill G1 X131.211 Y116.747 E17.16471 ; infill G1 X131.211 Y114.995 E17.18432 ; infill G1 X130.865 Y115.83 F9000 ; move to first infill point ;WIDTH:0.377414 G1 F3150 G1 X130.865 Y116.401 E17.19031 ; infill G1 X130.294 Y116.401 E17.1963 ; infill G1 X130.739 Y115.956 E17.2029 ; infill G1 X131.443 Y108.093 F9000 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.399999 G1 F3000 G1 X131.443 Y112.536 E17.25264 ; perimeter G1 X131.443 Y116.979 E17.30238 ; perimeter G1 X114.975 Y116.979 E17.48674 ; perimeter G1 X114.912 Y116.983 E17.48745 ; perimeter G1 X114.82 Y117.042 E17.48867 ; perimeter G1 X113.953 Y117.042 E17.49838 ; perimeter G1 X113.911 Y116.991 E17.49912 ; perimeter G1 X113.797 Y116.979 E17.5004 ; perimeter G1 X111.889 Y116.979 E17.52176 ; perimeter G1 X111.826 Y116.983 E17.52247 ; perimeter G1 X111.734 Y117.042 E17.52369 ; perimeter G1 X110.867 Y117.042 E17.5334 ; perimeter G1 X110.826 Y116.991 E17.53413 ; perimeter G1 X110.712 Y116.979 E17.53541 ; perimeter G1 X92.557 Y116.979 E17.73865 ; perimeter G1 X92.557 Y108.093 E17.83813 ; perimeter G1 X104.912 Y108.093 E17.97644 ; perimeter G1 X105.28 Y108.012 E17.98066 ; perimeter G1 X105.943 Y107.96 E17.9881 ; perimeter G1 X107.078 Y108.093 E18.00089 ; perimeter G1 X118.74 Y108.093 E18.13144 ; perimeter G1 X119.101 Y108.013 E18.13558 ; perimeter G1 X119.758 Y107.959 E18.14296 ; perimeter G1 X120.173 Y107.992 E18.14762 ; perimeter G1 X120.801 Y108.093 E18.15474 ; perimeter G1 X131.383 Y108.093 E18.2732 ; perimeter G1 X131.8 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter G1 F1500 G1 X131.8 Y112.536 E18.32693 ; perimeter G1 X131.8 Y117.336 E18.38066 ; perimeter G1 X114.975 Y117.336 E18.56901 ; perimeter G1 X114.889 Y117.4 E18.57021 ; perimeter G1 X113.883 Y117.4 E18.58147 ; perimeter G1 X113.797 Y117.336 E18.58267 ; perimeter G1 X111.889 Y117.336 E18.60403 ; perimeter G1 X111.804 Y117.4 E18.60522 ; perimeter G1 X110.797 Y117.4 E18.61649 ; perimeter G1 X110.712 Y117.336 E18.61768 ; perimeter G1 X92.2 Y117.336 E18.82492 ; perimeter G1 X92.2 Y107.736 E18.93239 ; perimeter G1 X104.912 Y107.736 E19.0747 ; perimeter G1 X105.219 Y107.659 E19.07824 ; perimeter G1 X105.947 Y107.601 E19.08642 ; perimeter G1 X107.078 Y107.736 E19.09917 ; perimeter G1 X118.74 Y107.736 E19.22972 ; perimeter G1 X119.038 Y107.66 E19.23316 ; perimeter G1 X119.758 Y107.601 E19.24125 ; perimeter G1 X120.201 Y107.636 E19.24622 ; perimeter G1 X120.801 Y107.736 E19.25303 ; perimeter G1 X131.74 Y107.736 E19.37549 ; perimeter G1 X131.799 Y108.132 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:1 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 4; ;LAYER:4 G1 E12.87549 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z1 F9000 ; simple layer change G1 X94.076 Y116.747 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Solid infill ;WIDTH:0.40003 G1 F3150 G1 X110.705 Y116.747 E6.68617 ; infill G1 X111.013 Y116.81 E6.68969 ; infill G1 X111.588 Y116.81 E6.69613 ; infill G1 X111.896 Y116.747 E6.69965 ; infill G1 X113.791 Y116.747 E6.72087 ; infill G1 X114.098 Y116.81 E6.72438 ; infill G1 X114.674 Y116.81 E6.73083 ; infill G1 X114.982 Y116.747 E6.73435 ; infill G1 X131.032 Y116.747 E6.91404 ; infill ;WIDTH:0.430664 G1 X131.106 Y116.732 E6.91496 ; infill ;WIDTH:0.4613 G1 X131.18 Y116.716 E6.91595 ; infill G1 X131.196 Y116.642 E6.91694 ; infill ;WIDTH:0.430664 G1 X131.211 Y116.568 E6.91786 ; infill ;WIDTH:0.400028 G1 X131.211 Y108.504 E7.00814 ; infill ;WIDTH:0.430664 G1 X131.196 Y108.43 E7.00906 ; infill ;WIDTH:0.4613 G1 X131.18 Y108.356 E7.01005 ; infill G1 X131.106 Y108.341 E7.01104 ; infill ;WIDTH:0.430664 G1 X131.032 Y108.325 E7.01196 ; infill ;WIDTH:0.400028 G1 X120.808 Y108.325 E7.12642 ; infill ;WIDTH:0.400444 G1 X120.056 Y108.215 E7.13494 ; infill G1 X119.744 Y108.193 E7.13845 ; infill ;WIDTH:0.40003 G1 X119.159 Y108.241 E7.14502 ; infill G1 X118.734 Y108.325 E7.14987 ; infill G1 X107.089 Y108.325 E7.28024 ; infill G1 X105.959 Y108.195 E7.29297 ; infill G1 X105.337 Y108.241 E7.29995 ; infill G1 X104.905 Y108.325 E7.30488 ; infill G1 X92.968 Y108.325 E7.43852 ; infill ;WIDTH:0.430664 G1 X92.894 Y108.341 E7.43944 ; infill ;WIDTH:0.461298 G1 X92.82 Y108.356 E7.44043 ; infill G1 X92.804 Y108.598 E7.44361 ; infill ;WIDTH:0.430663 G1 X92.789 Y108.84 E7.44656 ; infill G1 X92.789 Y109.753 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X92.789 Y110.608 E7.45613 ; infill G1 X92.876 Y110.606 E7.4571 ; infill G1 X93.146 Y110.336 E7.46137 ; infill G1 X93.146 Y111.154 E7.47053 ; infill G1 X95.618 Y108.682 E7.50967 ; infill G1 X98.083 Y108.682 E7.53727 ; infill G1 X105.79 Y116.39 E7.65929 ; infill G1 X108.11 Y116.39 E7.68526 ; infill G1 X115.818 Y108.682 E7.80729 ; infill G1 X118.282 Y108.682 E7.83487 ; infill G1 X125.99 Y116.39 E7.9569 ; infill G1 X128.31 Y116.39 E7.98287 ; infill G1 X130.854 Y113.846 E8.02315 ; infill G1 X130.854 Y111.154 E8.05329 ; infill G1 X128.382 Y108.682 E8.09243 ; infill G1 X125.917 Y108.682 E8.12003 ; infill G1 X118.21 Y116.39 E8.24205 ; infill G1 X115.89 Y116.39 E8.26802 ; infill G1 X108.182 Y108.682 E8.39005 ; infill G1 X107.043 Y108.682 E8.4028 ; infill G1 X105.841 Y108.559 E8.41633 ; infill G1 X98.01 Y116.39 E8.54031 ; infill G1 X95.69 Y116.39 E8.56628 ; infill G1 X93.146 Y113.846 E8.60656 ; infill G1 X93.146 Y115.988 E8.63054 ; infill G1 X92.789 Y115.46 F9000 ; move to first infill point ;TYPE:Solid infill ;WIDTH:0.40003 G1 F3150 G1 X92.789 Y110.965 E8.68086 ; infill G1 X131.443 Y108.093 F9000 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.399999 G1 F3000 G1 X131.443 Y112.536 E8.7306 ; perimeter G1 X131.443 Y116.979 E8.78034 ; perimeter G1 X114.975 Y116.979 E8.9647 ; perimeter G1 X114.912 Y116.983 E8.96541 ; perimeter G1 X114.82 Y117.042 E8.96663 ; perimeter G1 X113.953 Y117.042 E8.97634 ; perimeter G1 X113.911 Y116.991 E8.97708 ; perimeter G1 X113.797 Y116.979 E8.97836 ; perimeter G1 X111.889 Y116.979 E8.99972 ; perimeter G1 X111.826 Y116.983 E9.00043 ; perimeter G1 X111.734 Y117.042 E9.00165 ; perimeter G1 X110.867 Y117.042 E9.01136 ; perimeter G1 X110.826 Y116.991 E9.01209 ; perimeter G1 X110.712 Y116.979 E9.01337 ; perimeter G1 X92.557 Y116.979 E9.21661 ; perimeter G1 X92.557 Y108.093 E9.31609 ; perimeter G1 X104.912 Y108.093 E9.4544 ; perimeter G1 X105.28 Y108.012 E9.45862 ; perimeter G1 X105.943 Y107.96 E9.46606 ; perimeter G1 X107.078 Y108.093 E9.47885 ; perimeter G1 X118.74 Y108.093 E9.6094 ; perimeter G1 X119.101 Y108.013 E9.61354 ; perimeter G1 X119.758 Y107.959 E9.62092 ; perimeter G1 X120.173 Y107.992 E9.62558 ; perimeter G1 X120.801 Y108.093 E9.6327 ; perimeter G1 X131.383 Y108.093 E9.75116 ; perimeter G1 X131.8 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter G1 F1500 G1 X131.8 Y112.536 E9.80489 ; perimeter G1 X131.8 Y117.336 E9.85862 ; perimeter G1 X114.975 Y117.336 E10.04697 ; perimeter G1 X114.889 Y117.4 E10.04817 ; perimeter G1 X113.883 Y117.4 E10.05943 ; perimeter G1 X113.797 Y117.336 E10.06063 ; perimeter G1 X111.889 Y117.336 E10.08199 ; perimeter G1 X111.804 Y117.4 E10.08318 ; perimeter G1 X110.797 Y117.4 E10.09445 ; perimeter G1 X110.712 Y117.336 E10.09564 ; perimeter G1 X92.2 Y117.336 E10.30288 ; perimeter G1 X92.2 Y107.736 E10.41035 ; perimeter G1 X104.912 Y107.736 E10.55266 ; perimeter G1 X105.219 Y107.659 E10.5562 ; perimeter G1 X105.947 Y107.601 E10.56438 ; perimeter G1 X107.078 Y107.736 E10.57713 ; perimeter G1 X118.74 Y107.736 E10.70768 ; perimeter G1 X119.038 Y107.66 E10.71112 ; perimeter G1 X119.758 Y107.601 E10.71921 ; perimeter G1 X120.201 Y107.636 E10.72418 ; perimeter G1 X120.801 Y107.736 E10.73099 ; perimeter G1 X131.74 Y107.736 E10.85345 ; perimeter G1 X131.799 Y108.132 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:1.2 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 5; ;LAYER:5 G1 E4.35345 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z1.2 F9000 ; simple layer change G1 X130.45 Y108.169 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Bridge infill ;WIDTH:0.40339 ;HEIGHT:0.4 G1 F2100 G1 X131.164 Y108.884 E6.52024 ; infill (bridge) G1 X131.164 Y109.525 E6.53308 ; infill (bridge) G1 X130.011 Y108.372 E6.56575 ; infill (bridge) G1 X129.37 Y108.372 E6.57859 ; infill (bridge) G1 X131.164 Y110.166 E6.62942 ; infill (bridge) G1 X131.164 Y110.807 E6.64226 ; infill (bridge) G1 X128.729 Y108.372 E6.71125 ; infill (bridge) G1 X128.088 Y108.372 E6.72409 ; infill (bridge) G1 X131.164 Y111.448 E6.81124 ; infill (bridge) G1 X131.164 Y112.089 E6.82408 ; infill (bridge) G1 X127.447 Y108.372 E6.92939 ; infill (bridge) G1 X126.805 Y108.372 E6.94225 ; infill (bridge) G1 X131.164 Y112.731 E7.06575 ; infill (bridge) G1 X131.164 Y113.372 E7.07859 ; infill (bridge) G1 X126.164 Y108.372 E7.22025 ; infill (bridge) G1 X125.523 Y108.372 E7.23309 ; infill (bridge) G1 X131.164 Y114.013 E7.39291 ; infill (bridge) G1 X131.164 Y114.654 E7.40575 ; infill (bridge) G1 X124.882 Y108.372 E7.58373 ; infill (bridge) G1 X124.241 Y108.372 E7.59657 ; infill (bridge) G1 X131.164 Y115.295 E7.79271 ; infill (bridge) G1 X131.164 Y115.937 E7.80557 ; infill (bridge) G1 X123.6 Y108.372 E8.01989 ; infill (bridge) G1 X122.958 Y108.372 E8.03275 ; infill (bridge) G1 X131.164 Y116.578 E8.26524 ; infill (bridge) G1 X131.164 Y116.7 E8.26768 ; infill (bridge) G1 X130.646 Y116.7 E8.27806 ; infill (bridge) G1 X122.317 Y108.372 E8.51402 ; infill (bridge) G1 X121.676 Y108.372 E8.52686 ; infill (bridge) G1 X130.005 Y116.7 E8.76282 ; infill (bridge) G1 X129.363 Y116.7 E8.77568 ; infill (bridge) G1 X121.035 Y108.372 E9.01163 ; infill (bridge) G1 X120.637 Y108.355 E9.01961 ; infill (bridge) G1 X120.303 Y108.281 E9.02646 ; infill (bridge) G1 X128.722 Y116.7 E9.26499 ; infill (bridge) G1 X128.081 Y116.7 E9.27783 ; infill (bridge) G1 X119.63 Y108.249 E9.51726 ; infill (bridge) G1 X119.15 Y108.288 E9.52691 ; infill (bridge) G1 X119.054 Y108.314 E9.5289 ; infill (bridge) G1 X127.44 Y116.7 E9.76649 ; infill (bridge) G1 X126.799 Y116.7 E9.77933 ; infill (bridge) G1 X118.47 Y108.372 E10.01529 ; infill (bridge) G1 X117.829 Y108.372 E10.02813 ; infill (bridge) G1 X126.158 Y116.7 E10.26409 ; infill (bridge) G1 X125.516 Y116.7 E10.27695 ; infill (bridge) G1 X117.188 Y108.372 E10.5129 ; infill (bridge) G1 X116.546 Y108.372 E10.52576 ; infill (bridge) G1 X124.875 Y116.7 E10.76172 ; infill (bridge) G1 X124.234 Y116.7 E10.77456 ; infill (bridge) G1 X115.905 Y108.372 E11.01052 ; infill (bridge) G1 X115.264 Y108.372 E11.02336 ; infill (bridge) G1 X123.593 Y116.7 E11.25932 ; infill (bridge) G1 X122.952 Y116.7 E11.27216 ; infill (bridge) G1 X114.623 Y108.372 E11.50812 ; infill (bridge) G1 X113.982 Y108.372 E11.52096 ; infill (bridge) G1 X122.31 Y116.7 E11.75691 ; infill (bridge) G1 X121.669 Y116.7 E11.76975 ; infill (bridge) G1 X113.34 Y108.372 E12.00571 ; infill (bridge) G1 X112.699 Y108.372 E12.01855 ; infill (bridge) G1 X121.028 Y116.7 E12.25451 ; infill (bridge) G1 X120.387 Y116.7 E12.26735 ; infill (bridge) G1 X112.058 Y108.372 E12.50331 ; infill (bridge) G1 X111.417 Y108.372 E12.51615 ; infill (bridge) G1 X119.746 Y116.7 E12.75211 ; infill (bridge) G1 X119.104 Y116.7 E12.76497 ; infill (bridge) G1 X110.776 Y108.372 E13.00092 ; infill (bridge) G1 X110.135 Y108.372 E13.01376 ; infill (bridge) G1 X118.463 Y116.7 E13.24971 ; infill (bridge) G1 X117.822 Y116.7 E13.26255 ; infill (bridge) G1 X109.493 Y108.372 E13.49851 ; infill (bridge) G1 X108.852 Y108.372 E13.51135 ; infill (bridge) G1 X117.181 Y116.7 E13.74731 ; infill (bridge) G1 X116.54 Y116.7 E13.76015 ; infill (bridge) G1 X108.211 Y108.372 E13.99611 ; infill (bridge) G1 X107.57 Y108.372 E14.00895 ; infill (bridge) G1 X115.898 Y116.7 E14.2449 ; infill (bridge) G1 X115.257 Y116.7 E14.25774 ; infill (bridge) G1 X106.899 Y108.342 E14.49454 ; infill (bridge) G1 X106.18 Y108.264 E14.50903 ; infill (bridge) G1 X114.68 Y116.764 E14.74985 ; infill (bridge) G1 X114.038 Y116.764 E14.76271 ; infill (bridge) G1 X105.357 Y108.083 E15.00866 ; infill (bridge) G1 X113.536 Y116.903 F9000 ; move to first infill (bridge) point G1 F2100 G1 X104.997 Y108.363 E15.2506 ; infill (bridge) G1 X104.364 Y108.372 E15.26328 ; infill (bridge) G1 X112.693 Y116.7 E15.49924 ; infill (bridge) G1 X112.051 Y116.7 E15.5121 ; infill (bridge) G1 X103.723 Y108.372 E15.74805 ; infill (bridge) G1 X103.081 Y108.372 E15.76091 ; infill (bridge) G1 X111.474 Y116.764 E15.99869 ; infill (bridge) G1 X110.949 Y116.764 E16.00921 ; infill (bridge) G1 X110.916 Y116.722 E16.01028 ; infill (bridge) G1 X110.775 Y116.707 E16.01312 ; infill (bridge) G1 X102.44 Y108.372 E16.24927 ; infill (bridge) G1 X101.799 Y108.372 E16.26211 ; infill (bridge) G1 X110.128 Y116.7 E16.49807 ; infill (bridge) G1 X109.487 Y116.7 E16.51091 ; infill (bridge) G1 X101.158 Y108.372 E16.74687 ; infill (bridge) G1 X100.517 Y108.372 E16.75971 ; infill (bridge) G1 X108.845 Y116.7 E16.99566 ; infill (bridge) G1 X108.204 Y116.7 E17.0085 ; infill (bridge) G1 X99.875 Y108.372 E17.24446 ; infill (bridge) G1 X99.234 Y108.372 E17.2573 ; infill (bridge) G1 X107.563 Y116.7 E17.49326 ; infill (bridge) G1 X106.922 Y116.7 E17.5061 ; infill (bridge) G1 X98.593 Y108.372 E17.74206 ; infill (bridge) G1 X97.952 Y108.372 E17.7549 ; infill (bridge) G1 X106.281 Y116.7 E17.99086 ; infill (bridge) G1 X105.639 Y116.7 E18.00372 ; infill (bridge) G1 X97.311 Y108.372 E18.23967 ; infill (bridge) G1 X96.67 Y108.372 E18.25251 ; infill (bridge) G1 X104.998 Y116.7 E18.48846 ; infill (bridge) G1 X104.357 Y116.7 E18.5013 ; infill (bridge) G1 X96.028 Y108.372 E18.73726 ; infill (bridge) G1 X95.387 Y108.372 E18.7501 ; infill (bridge) G1 X103.716 Y116.7 E18.98606 ; infill (bridge) G1 X103.075 Y116.7 E18.9989 ; infill (bridge) G1 X94.746 Y108.372 E19.23486 ; infill (bridge) G1 X94.105 Y108.372 E19.2477 ; infill (bridge) G1 X102.433 Y116.7 E19.48365 ; infill (bridge) G1 X101.792 Y116.7 E19.49649 ; infill (bridge) G1 X93.464 Y108.372 E19.73244 ; infill (bridge) G1 X92.836 Y108.372 E19.74502 ; infill (bridge) G1 X92.836 Y108.385 E19.74528 ; infill (bridge) G1 X101.151 Y116.7 E19.98086 ; infill (bridge) G1 X100.51 Y116.7 E19.9937 ; infill (bridge) G1 X93.194 Y109.384 E20.20098 ; infill (bridge) G1 X93.772 Y110.281 E20.22236 ; infill (bridge) G1 X93.611 Y110.442 E20.22692 ; infill (bridge) G1 X99.869 Y116.7 E20.40422 ; infill (bridge) G1 X99.228 Y116.7 E20.41706 ; infill (bridge) G1 X93.29 Y110.763 E20.58528 ; infill (bridge) G1 X93.047 Y111.006 E20.59216 ; infill (bridge) G1 X92.895 Y111.01 E20.59521 ; infill (bridge) G1 X98.586 Y116.7 E20.75643 ; infill (bridge) G1 X97.945 Y116.7 E20.76927 ; infill (bridge) G1 X92.836 Y111.591 E20.91402 ; infill (bridge) G1 X92.836 Y112.232 E20.92686 ; infill (bridge) G1 X97.304 Y116.7 E21.05345 ; infill (bridge) G1 X96.663 Y116.7 E21.06629 ; infill (bridge) G1 X92.836 Y112.873 E21.17472 ; infill (bridge) G1 X92.836 Y113.515 E21.18758 ; infill (bridge) G1 X96.022 Y116.7 E21.27783 ; infill (bridge) G1 X95.38 Y116.7 E21.29069 ; infill (bridge) G1 X92.836 Y114.156 E21.36277 ; infill (bridge) G1 X92.836 Y114.797 E21.37561 ; infill (bridge) G1 X94.739 Y116.7 E21.42953 ; infill (bridge) G1 X94.098 Y116.7 E21.44237 ; infill (bridge) G1 X92.633 Y115.236 E21.48386 ; infill (bridge) G1 X92.766 Y115.909 F9000 ; move to first infill point ;TYPE:Solid infill ;WIDTH:0.353675 ;HEIGHT:0.2 G1 F3150 G1 X93.077 Y116.22 E21.48814 ; infill G1 X93.077 Y116.77 E21.4935 ; infill G1 X92.766 Y116.77 E21.49653 ; infill G1 X92.766 Y116.087 E21.50318 ; infill G1 X92.766 Y109.423 F9000 ; move to first infill point G1 F3150 G1 X93.052 Y109.866 E21.50832 ; infill G1 X93.077 Y110.374 E21.51328 ; infill G1 X93.031 Y110.484 E21.51444 ; infill G1 X92.91 Y110.605 E21.51611 ; infill G1 X92.766 Y110.632 E21.51754 ; infill G1 X92.766 Y109.601 E21.52758 ; infill G1 X131.443 Y108.093 F9000 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.399999 G1 F3000 G1 X131.443 Y112.536 E21.57732 ; perimeter G1 X131.443 Y116.979 E21.62706 ; perimeter G1 X114.975 Y116.979 E21.81142 ; perimeter G1 X114.912 Y116.983 E21.81213 ; perimeter G1 X114.82 Y117.042 E21.81335 ; perimeter G1 X113.953 Y117.042 E21.82306 ; perimeter G1 X113.911 Y116.991 E21.8238 ; perimeter G1 X113.797 Y116.979 E21.82508 ; perimeter G1 X111.889 Y116.979 E21.84644 ; perimeter G1 X111.826 Y116.983 E21.84715 ; perimeter G1 X111.734 Y117.042 E21.84837 ; perimeter G1 X110.867 Y117.042 E21.85808 ; perimeter G1 X110.826 Y116.991 E21.85881 ; perimeter G1 X110.712 Y116.979 E21.86009 ; perimeter G1 X92.557 Y116.979 E22.06333 ; perimeter G1 X92.557 Y108.093 E22.16281 ; perimeter G1 X104.912 Y108.093 E22.30112 ; perimeter G1 X105.28 Y108.012 E22.30534 ; perimeter G1 X105.943 Y107.96 E22.31278 ; perimeter G1 X107.078 Y108.093 E22.32557 ; perimeter G1 X118.74 Y108.093 E22.45612 ; perimeter G1 X119.101 Y108.013 E22.46026 ; perimeter G1 X119.758 Y107.959 E22.46764 ; perimeter G1 X120.173 Y107.992 E22.4723 ; perimeter G1 X120.801 Y108.093 E22.47942 ; perimeter G1 X131.383 Y108.093 E22.59788 ; perimeter G1 X131.8 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter G1 F1500 G1 X131.8 Y112.536 E22.65161 ; perimeter G1 X131.8 Y117.336 E22.70534 ; perimeter G1 X114.975 Y117.336 E22.89369 ; perimeter G1 X114.889 Y117.4 E22.89489 ; perimeter G1 X113.883 Y117.4 E22.90615 ; perimeter G1 X113.797 Y117.336 E22.90735 ; perimeter G1 X111.889 Y117.336 E22.92871 ; perimeter G1 X111.804 Y117.4 E22.9299 ; perimeter G1 X110.797 Y117.4 E22.94117 ; perimeter G1 X110.712 Y117.336 E22.94236 ; perimeter G1 X92.2 Y117.336 E23.1496 ; perimeter G1 X92.2 Y107.736 E23.25707 ; perimeter G1 X104.912 Y107.736 E23.39938 ; perimeter G1 X105.219 Y107.659 E23.40292 ; perimeter G1 X105.947 Y107.601 E23.4111 ; perimeter G1 X107.078 Y107.736 E23.42385 ; perimeter G1 X118.74 Y107.736 E23.5544 ; perimeter G1 X119.038 Y107.66 E23.55784 ; perimeter G1 X119.758 Y107.601 E23.56593 ; perimeter G1 X120.201 Y107.636 E23.5709 ; perimeter G1 X120.801 Y107.736 E23.57771 ; perimeter G1 X131.74 Y107.736 E23.70017 ; perimeter G1 X131.799 Y108.132 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:1.4 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 6; ;LAYER:6 G1 E17.20017 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z1.4 F9000 ; simple layer change G1 X122.614 Y109.712 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X122.744 Y110.345 E6.50723 ; infill G1 X122.795 Y111.212 E6.51695 ; infill G1 X122.76 Y111.839 E6.52398 ; infill G1 X121.906 Y112.694 E6.53751 ; infill G1 X121.968 Y112.368 E6.54122 ; infill G1 X122.557 Y112.957 E6.55054 ; infill G1 X122.377 Y113.433 E6.55624 ; infill G1 X122.066 Y113.905 E6.56257 ; infill G1 X121.666 Y114.263 E6.56858 ; infill G1 X121.161 Y114.522 E6.57493 ; infill G1 X120.539 Y114.682 E6.58212 ; infill G1 X119.868 Y114.732 E6.58965 ; infill G1 X120.259 Y114.341 E6.59584 ; infill G1 X119.802 Y114.378 E6.60097 ; infill G1 X119.287 Y114.333 E6.60676 ; infill G1 X118.762 Y114.168 E6.61292 ; infill G1 X118.391 Y113.936 E6.61782 ; infill G1 X118.06 Y113.579 E6.62327 ; infill G1 X117.802 Y113.09 E6.62946 ; infill G1 X117.643 Y112.552 E6.63574 ; infill G1 X117.551 Y111.944 E6.64262 ; infill G1 X117.519 Y111.203 E6.65092 ; infill G1 X117.646 Y109.87 E6.66591 ; infill G1 X117.81 Y109.326 E6.67227 ; infill G1 X118.024 Y108.901 E6.6776 ; infill G1 X118.238 Y108.639 E6.68139 ; infill G1 X117.925 Y108.325 E6.68635 ; infill G1 X117.723 Y108.325 E6.68861 ; infill G1 X117.74 Y108.369 E6.68914 ; infill G1 X117.538 Y108.557 E6.69223 ; infill G1 X117.213 Y109.05 E6.69884 ; infill G1 X116.975 Y109.655 E6.70612 ; infill G1 X116.901 Y110.025 E6.71034 ; infill G1 X114.047 Y108.34 F9000 ; move to first infill point G1 F4200 G1 X114.725 Y108.325 E6.71793 ; infill G1 X114.725 Y109.775 E6.73416 ; infill G1 X114.047 Y110.453 E6.74489 ; infill G1 X114.047 Y114.547 E6.79072 ; infill G1 X114.725 Y115.225 E6.80145 ; infill G1 X114.725 Y113.083 E6.82543 ; infill G1 X118.243 Y113.394 F9000 ; move to first infill point ;TYPE:Solid infill ;WIDTH:0.38292 G1 F3150 G1 X118.534 Y113.706 E6.82998 ; infill ;WIDTH:0.399999 G1 X119.117 Y113.911 E6.8369 ; infill G1 X118.122 Y112.916 E6.85265 ; infill G1 X117.958 Y112.246 E6.86037 ; infill G1 X119.724 Y114.013 E6.88834 ; infill G1 X120.204 Y113.987 E6.89372 ; infill G1 X117.896 Y111.68 E6.93025 ; infill G1 X117.879 Y111.157 E6.93611 ; infill G1 X120.605 Y113.884 E6.97928 ; infill G1 X120.932 Y113.706 E6.98345 ; infill G1 X117.9 Y110.673 E7.03146 ; infill G1 X117.953 Y110.222 E7.03654 ; infill G1 X121.187 Y113.456 E7.08774 ; infill G1 X121.377 Y113.14 E7.09187 ; infill G1 X118.039 Y109.802 E7.14472 ; infill G1 X118.162 Y109.421 E7.1492 ; infill G1 X121.513 Y112.772 E7.20225 ; infill G1 X121.608 Y112.362 E7.20696 ; infill G1 X118.331 Y109.085 E7.25884 ; infill G1 X118.561 Y108.81 E7.26285 ; infill G1 X121.67 Y111.919 E7.31207 ; infill G1 X121.69 Y111.434 E7.3175 ; infill G1 X118.854 Y108.598 E7.3624 ; infill G1 X119.218 Y108.457 E7.36677 ; infill G1 X121.687 Y110.926 E7.40586 ; infill G1 X121.65 Y110.384 E7.41194 ; infill G1 X119.663 Y108.396 E7.44341 ; infill G1 X120.172 Y108.416 E7.44911 ; infill ;WIDTH:0.378068 G1 X120.646 Y108.548 E7.45428 ; infill G1 X121.014 Y108.785 E7.45888 ; infill G1 X121.255 Y109.053 E7.46267 ; infill ;WIDTH:0.364961 G1 X121.459 Y109.451 E7.46719 ; infill G1 X121.566 Y109.82 E7.47107 ; infill G1 X121.307 Y109.561 E7.47477 ; infill ;WIDTH:0.378068 G1 X120.298 Y108.543 E7.48983 ; infill G1 X111.996 Y108.504 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X111.996 Y116.75 E7.58214 ; infill G1 X113.69 Y116.747 E7.6011 ; infill G1 X113.69 Y108.325 E7.69538 ; infill G1 X111.996 Y108.325 E7.71434 ; infill G1 X112.354 Y108.682 E7.72 ; infill G1 X113.333 Y108.682 E7.73096 ; infill G1 X113.333 Y116.391 E7.81726 ; infill G1 X112.354 Y116.393 E7.82822 ; infill G1 X112.354 Y108.861 E7.91254 ; infill G1 X112.688 Y109.017 E7.91667 ; infill ;WIDTH:0.354153 G1 X112.999 Y109.017 E7.9197 ; infill G1 X112.999 Y116.057 E7.98839 ; infill G1 X112.688 Y116.058 E7.99142 ; infill G1 X112.688 Y109.195 E8.05839 ; infill G1 X110.962 Y109.319 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X110.962 Y111.462 E8.08238 ; infill G1 X111.639 Y112.139 E8.0931 ; infill G1 X111.639 Y112.861 E8.10118 ; infill G1 X110.962 Y113.538 E8.1119 ; infill G1 X110.962 Y115.681 E8.13589 ; infill G1 X115.123 Y116.637 F9000 ; move to first infill point ;TYPE:Solid infill ;WIDTH:0.511856 G1 F3150 G1 X115.082 Y116.679 E8.13675 ; infill G1 X115.097 Y116.735 E8.1376 ; infill G1 X115.153 Y116.75 E8.13845 ; infill G1 X115.195 Y116.709 E8.13931 ; infill G1 X115.18 Y116.652 E8.14018 ; infill ;WIDTH:0.399999 G1 X115.775 Y116.747 E8.14693 ; infill G1 X115.082 Y116.054 E8.1579 ; infill G1 X114.911 Y115.847 E8.16091 ; infill ;WIDTH:0.621106 G1 X114.86 Y115.898 E8.16222 ; infill G1 X114.879 Y115.968 E8.16353 ; infill G1 X114.949 Y115.986 E8.16484 ; infill G1 X115 Y115.935 E8.16615 ; infill G1 X114.981 Y115.866 E8.16745 ; infill G1 X115.001 Y115.802 E8.16867 ; infill ;WIDTH:0.576885 G1 X115.021 Y115.739 E8.16978 ; infill ;WIDTH:0.532664 G1 X115.042 Y115.675 E8.17081 ; infill ;WIDTH:0.488442 G1 X115.062 Y115.612 E8.17173 ; infill ;WIDTH:0.444221 G1 X115.082 Y115.549 E8.17256 ; infill ;WIDTH:0.399999 G1 X116.28 Y116.747 E8.19153 ; infill G1 X116.785 Y116.747 E8.19718 ; infill G1 X115.082 Y115.044 E8.22414 ; infill G1 X115.082 Y114.539 E8.22979 ; infill G1 X117.29 Y116.747 E8.26475 ; infill G1 X117.795 Y116.747 E8.2704 ; infill G1 X115.082 Y114.034 E8.31335 ; infill G1 X115.082 Y113.529 E8.319 ; infill G1 X118.3 Y116.747 E8.36995 ; infill G1 X118.805 Y116.747 E8.3756 ; infill G1 X115.082 Y113.024 E8.43454 ; infill G1 X115.082 Y112.519 E8.44019 ; infill G1 X119.31 Y116.747 E8.50713 ; infill G1 X120.057 Y116.81 F9000 ; move to first infill point ;WIDTH:0.38292 G1 F3150 G1 X120.038 Y116.882 E8.50792 ; infill G1 X120.109 Y116.863 E8.5087 ; infill G1 X120.098 Y116.821 E8.50916 ; infill ;WIDTH:0.399999 G1 X119.815 Y116.747 E8.51243 ; infill G1 X115.082 Y112.014 E8.58736 ; infill G1 X115.082 Y111.509 E8.59301 ; infill G1 X116.804 Y113.23 E8.62026 ; infill G1 X116.978 Y113.442 E8.62333 ; infill ;WIDTH:0.38292 G1 X116.959 Y113.513 E8.62411 ; infill G1 X117.03 Y113.494 E8.62489 ; infill G1 X117.019 Y113.453 E8.62534 ; infill G1 X116.739 Y112.727 F9000 ; move to first infill point G1 F3150 G1 X116.75 Y112.768 E8.62579 ; infill G1 X116.679 Y112.787 E8.62657 ; infill G1 X116.698 Y112.716 E8.62735 ; infill ;WIDTH:0.399999 G1 X116.583 Y112.504 E8.63005 ; infill G1 X115.082 Y111.004 E8.65381 ; infill G1 X115.082 Y108.325 E8.6838 ; infill G1 X117.268 Y108.325 E8.70827 ; infill G1 X116.884 Y108.911 E8.71611 ; infill G1 X116.625 Y109.587 E8.72421 ; infill G1 X116.473 Y110.365 E8.73308 ; infill G1 X116.426 Y111.237 E8.74286 ; infill G1 X116.511 Y111.928 E8.75065 ; infill G1 X115.245 Y110.662 E8.77069 ; infill G1 X115.439 Y110.373 E8.77459 ; infill G1 X115.439 Y108.682 E8.79352 ; infill G1 X116.602 Y108.682 E8.80654 ; infill G1 X116.275 Y109.518 E8.81659 ; infill G1 X116.117 Y110.344 E8.826 ; infill G1 X116.079 Y110.991 E8.83326 ; infill G1 X115.568 Y110.497 E8.84122 ; infill G1 X115.958 Y109.099 F9000 ; move to first infill point ;WIDTH:0.621106 G1 F3150 G1 X115.977 Y109.169 E8.84253 ; infill G1 X115.926 Y109.22 E8.84384 ; infill G1 X115.856 Y109.201 E8.84515 ; infill G1 X115.837 Y109.131 E8.84646 ; infill G1 X115.888 Y109.08 E8.84777 ; infill G1 X118.183 Y114.655 F9000 ; move to first infill point ;WIDTH:0.38292 G1 F3150 G1 X118.164 Y114.726 E8.84855 ; infill G1 X118.235 Y114.707 E8.84933 ; infill G1 X118.224 Y114.666 E8.84978 ; infill ;WIDTH:0.399999 G1 X120.32 Y116.747 E8.88284 ; infill ;WIDTH:0.436839 G1 X120.408 Y116.804 E8.88413 ; infill ;WIDTH:0.473678 G1 X120.495 Y116.861 E8.88553 ; infill G1 X120.509 Y116.913 E8.88626 ; infill G1 X120.471 Y116.951 E8.88699 ; infill G1 X120.419 Y116.937 E8.88772 ; infill G1 X120.405 Y116.885 E8.88845 ; infill G1 X120.443 Y116.847 E8.88918 ; infill ;WIDTH:0.399999 G1 X120.825 Y116.747 E8.8936 ; infill G1 X119.051 Y114.973 E8.92169 ; infill G1 X119.824 Y115.093 E8.93045 ; infill G1 X120.62 Y115.03 E8.93939 ; infill G1 X121.314 Y114.845 E8.94743 ; infill G1 X121.895 Y114.537 E8.95479 ; infill G1 X122.294 Y114.176 E8.96081 ; infill G1 X124.865 Y116.747 E9.00151 ; infill G1 X121.204 Y116.747 E9.04249 ; infill G1 X121.204 Y116.621 E9.0439 ; infill G1 X119.784 Y115.201 E9.06638 ; infill G1 X120.489 Y115.401 F9000 ; move to first infill point G1 F3150 G1 X120.71 Y115.376 E9.06887 ; infill G1 X121.478 Y115.162 E9.0778 ; infill G1 X122.022 Y114.88 E9.08466 ; infill G1 X122.282 Y114.669 E9.08841 ; infill G1 X124.003 Y116.39 E9.11566 ; infill G1 X122.19 Y116.39 E9.13596 ; infill G1 X121.457 Y116.368 E9.14417 ; infill G1 X120.616 Y115.527 E9.15748 ; infill G1 X121.208 Y115.615 E9.16418 ; infill G1 X121.643 Y115.479 E9.16928 ; infill G1 X122.257 Y115.148 E9.17709 ; infill G1 X123.141 Y116.033 E9.19109 ; infill G1 X121.626 Y116.033 E9.20805 ; infill G1 X121.335 Y115.741 E9.21266 ; infill G1 X122.176 Y115.587 F9000 ; move to first infill point ;WIDTH:0.473678 G1 F3150 G1 X122.138 Y115.625 E9.21339 ; infill G1 X122.152 Y115.677 E9.21412 ; infill G1 X122.204 Y115.691 E9.21485 ; infill G1 X122.242 Y115.653 E9.21558 ; infill G1 X122.228 Y115.601 E9.21631 ; infill G1 X122.507 Y113.884 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X125.496 Y116.858 E9.26351 ; infill ;WIDTH:0.38292 G1 X125.477 Y116.929 E9.26429 ; infill G1 X125.548 Y116.91 E9.26507 ; infill G1 X125.537 Y116.869 E9.26552 ; infill ;WIDTH:0.399999 G1 X125.875 Y116.747 E9.26954 ; infill G1 X122.704 Y113.576 E9.31974 ; infill G1 X122.843 Y113.21 E9.32412 ; infill G1 X126.38 Y116.747 E9.38012 ; infill G1 X126.885 Y116.747 E9.38577 ; infill G1 X122.969 Y112.831 E9.44777 ; infill G1 X123.05 Y112.407 E9.4526 ; infill G1 X127.39 Y116.747 E9.52131 ; infill G1 X127.895 Y116.747 E9.52696 ; infill G1 X123.111 Y111.963 E9.6027 ; infill G1 X123.137 Y111.484 E9.60807 ; infill G1 X128.4 Y116.747 E9.69139 ; infill G1 X128.905 Y116.747 E9.69704 ; infill G1 X123.139 Y110.981 E9.78833 ; infill G1 X123.107 Y110.444 E9.79435 ; infill G1 X129.41 Y116.747 E9.89414 ; infill G1 X129.915 Y116.747 E9.89979 ; infill G1 X123.004 Y109.836 E10.0092 ; infill G1 X122.194 Y108.244 F9000 ; move to first infill point ;WIDTH:0.38292 G1 F3150 G1 X122.167 Y108.288 E10.00975 ; infill G1 X122.204 Y108.371 E10.01072 ; infill G1 X122.603 Y108.847 E10.01734 ; infill ;WIDTH:0.399999 G1 X122.772 Y109.099 E10.02074 ; infill G1 X130.42 Y116.747 E10.14182 ; infill G1 X131.317 Y116.793 F9000 ; move to first infill point ;WIDTH:0.38292 G1 F3150 G1 X131.328 Y116.834 E10.14227 ; infill G1 X131.256 Y116.853 E10.14306 ; infill G1 X131.275 Y116.782 E10.14384 ; infill ;WIDTH:0.399999 G1 X130.925 Y116.747 E10.14778 ; infill G1 X122.503 Y108.325 E10.28112 ; infill G1 X123.008 Y108.325 E10.28677 ; infill G1 X131.211 Y116.528 E10.41664 ; infill G1 X131.211 Y116.023 E10.42229 ; infill G1 X123.513 Y108.325 E10.54416 ; infill G1 X124.018 Y108.325 E10.54981 ; infill G1 X131.211 Y115.518 E10.66369 ; infill G1 X131.211 Y115.013 E10.66934 ; infill G1 X124.523 Y108.325 E10.77522 ; infill G1 X125.028 Y108.325 E10.78087 ; infill G1 X131.211 Y114.508 E10.87876 ; infill G1 X131.211 Y114.003 E10.88441 ; infill G1 X125.533 Y108.325 E10.9743 ; infill G1 X126.038 Y108.325 E10.97995 ; infill G1 X131.211 Y113.498 E11.06185 ; infill G1 X131.211 Y112.993 E11.0675 ; infill G1 X126.543 Y108.325 E11.1414 ; infill G1 X127.048 Y108.325 E11.14705 ; infill G1 X131.211 Y112.488 E11.21296 ; infill G1 X131.211 Y111.983 E11.21861 ; infill G1 X127.553 Y108.325 E11.27652 ; infill G1 X128.058 Y108.325 E11.28217 ; infill G1 X131.211 Y111.478 E11.33209 ; infill G1 X131.211 Y110.973 E11.33774 ; infill G1 X128.563 Y108.325 E11.37966 ; infill G1 X129.068 Y108.325 E11.38531 ; infill G1 X131.211 Y110.468 E11.41924 ; infill G1 X129.699 Y108.452 F9000 ; move to first infill point G1 F3150 G1 X131.211 Y109.963 E11.44317 ; infill G1 X131.211 Y108.325 E11.46151 ; infill G1 X129.573 Y108.325 E11.47985 ; infill G1 X130.712 Y108.732 F9000 ; move to first infill point ;WIDTH:0.645176 G1 F3150 G1 X130.658 Y108.785 E11.48128 ; infill G1 X130.678 Y108.858 E11.48271 ; infill G1 X130.751 Y108.878 E11.48414 ; infill G1 X130.804 Y108.824 E11.48557 ; infill G1 X130.784 Y108.752 E11.48698 ; infill G1 X108.469 Y108.859 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X108.295 Y108.553 E11.49092 ; infill G1 X108.097 Y108.386 E11.49382 ; infill G1 X108.119 Y108.325 E11.49455 ; infill G1 X107.825 Y108.325 E11.49784 ; infill G1 X108.484 Y108.984 E11.50827 ; infill G1 X108.021 Y109.116 E11.51366 ; infill G1 X107.638 Y108.618 E11.52069 ; infill G1 X107.219 Y108.325 E11.52641 ; infill G1 X107.647 Y108.325 E11.5312 ; infill G1 X105.445 Y111.218 F9000 ; move to first infill point G1 F4200 G1 X103.85 Y111.218 E11.54906 ; infill G1 X103.628 Y110.984 E11.55267 ; infill G1 X103.64 Y110.76 E11.55518 ; infill G1 X102.907 Y111.493 E11.56678 ; infill G1 X102.943 Y112.071 E11.57326 ; infill G1 X103.093 Y112.777 E11.58134 ; infill G1 X103.452 Y113.535 E11.59073 ; infill G1 X104.053 Y112.358 F9000 ; move to first infill point ;TYPE:Solid infill ;WIDTH:0.399999 G1 F3150 G1 X104.022 Y111.969 E11.5951 ; infill G1 X107.77 Y111.975 E11.63706 ; infill G1 X107.714 Y112.403 E11.64189 ; infill G1 X107.602 Y112.822 E11.64675 ; infill G1 X107.454 Y113.166 E11.65094 ; infill G1 X107.279 Y113.435 E11.65453 ; infill G1 X107.044 Y113.667 E11.65823 ; infill G1 X106.746 Y113.848 E11.66213 ; infill G1 X106.379 Y113.966 E11.66645 ; infill G1 X105.96 Y114.014 E11.67117 ; infill G1 X105.571 Y113.992 E11.67553 ; infill G1 X105.219 Y113.907 E11.67958 ; infill G1 X104.898 Y113.752 E11.68357 ; infill G1 X104.599 Y113.508 E11.68789 ; infill G1 X104.355 Y113.19 E11.69238 ; infill G1 X104.172 Y112.807 E11.69713 ; infill G1 X104.099 Y112.53 E11.70034 ; infill G1 X104.457 Y112.499 E11.70436 ; infill G1 X104.499 Y112.665 E11.70628 ; infill G1 X104.648 Y112.986 E11.71024 ; infill G1 X104.843 Y113.247 E11.71389 ; infill G1 X105.075 Y113.442 E11.71728 ; infill G1 X105.474 Y113.611 E11.72213 ; infill G1 X105.934 Y113.658 E11.72731 ; infill G1 X106.458 Y113.577 E11.73325 ; infill G1 X106.758 Y113.441 E11.73694 ; infill G1 X106.99 Y113.224 E11.7405 ; infill G1 X107.24 Y112.776 E11.74624 ; infill G1 X107.365 Y112.326 E11.75147 ; infill G1 X104.413 Y112.326 E11.78452 ; infill G1 X104.995 Y112.747 F9000 ; move to first infill point ;WIDTH:0.521272 G1 F3150 G1 X105.507 Y112.743 E11.7922 ; infill ;WIDTH:0.522591 G1 X106.795 Y112.744 E11.81157 ; infill G1 X106.75 Y112.842 E11.81319 ; infill G1 X106.526 Y113.09 E11.81822 ; infill G1 X106.141 Y113.223 E11.82435 ; infill G1 X105.618 Y113.218 E11.83222 ; infill ;WIDTH:0.521272 G1 X105.264 Y113.069 E11.83798 ; infill G1 X105.109 Y112.884 E11.8416 ; infill G1 X101.023 Y116.635 F9000 ; move to first infill point ;WIDTH:0.51025 G1 F3150 G1 X100.981 Y116.677 E11.84247 ; infill G1 X100.997 Y116.733 E11.84332 ; infill G1 X101.053 Y116.748 E11.84417 ; infill G1 X101.094 Y116.707 E11.84502 ; infill G1 X101.079 Y116.651 E11.84587 ; infill ;WIDTH:0.399999 G1 X100.983 Y116.054 E11.85264 ; infill G1 X101.802 Y116.858 E11.86549 ; infill ;WIDTH:0.38292 G1 X101.783 Y116.929 E11.86627 ; infill G1 X101.854 Y116.91 E11.86705 ; infill G1 X101.843 Y116.869 E11.8675 ; infill ;WIDTH:0.399999 G1 X102.181 Y116.747 E11.87152 ; infill G1 X100.983 Y115.549 E11.89049 ; infill G1 X100.983 Y115.044 E11.89614 ; infill G1 X102.686 Y116.747 E11.9231 ; infill G1 X103.191 Y116.747 E11.92875 ; infill G1 X100.983 Y114.539 E11.96371 ; infill G1 X100.983 Y114.034 E11.96936 ; infill G1 X103.696 Y116.747 E12.01231 ; infill G1 X104.201 Y116.747 E12.01796 ; infill G1 X100.983 Y113.529 E12.06891 ; infill G1 X100.983 Y113.024 E12.07456 ; infill G1 X104.706 Y116.747 E12.1335 ; infill G1 X105.211 Y116.747 E12.13915 ; infill G1 X100.983 Y112.519 E12.20609 ; infill G1 X100.983 Y112.014 E12.21174 ; infill G1 X105.716 Y116.747 E12.28667 ; infill G1 X105.957 Y116.81 E12.28946 ; infill ;WIDTH:0.38292 G1 X105.938 Y116.882 E12.29025 ; infill G1 X106.009 Y116.863 E12.29103 ; infill G1 X105.998 Y116.821 E12.29149 ; infill ;WIDTH:0.399999 G1 X106.346 Y116.854 E12.2954 ; infill ;WIDTH:0.41975 G1 X106.325 Y116.933 E12.29637 ; infill G1 X106.403 Y116.912 E12.29732 ; infill G1 X106.391 Y116.866 E12.29788 ; infill G1 X103.89 Y114.474 F9000 ; move to first infill point ;WIDTH:0.38292 G1 F3150 G1 X103.249 Y113.816 E12.30767 ; infill ;WIDTH:0.399999 G1 X103.038 Y113.564 E12.31135 ; infill G1 X100.983 Y111.509 E12.34388 ; infill G1 X100.983 Y111.004 E12.34953 ; infill G1 X102.721 Y112.742 E12.37705 ; infill G1 X102.865 Y112.951 E12.37989 ; infill ;WIDTH:0.38292 G1 X102.846 Y113.022 E12.38067 ; infill G1 X102.917 Y113.003 E12.38145 ; infill G1 X102.906 Y112.962 E12.3819 ; infill G1 X101.468 Y110.497 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X102.183 Y111.194 E12.39308 ; infill G1 X102.229 Y110.36 E12.40243 ; infill G1 X102.393 Y109.515 E12.41207 ; infill G1 X102.726 Y108.682 E12.42211 ; infill G1 X101.34 Y108.682 E12.43763 ; infill G1 X101.34 Y110.373 E12.45656 ; infill G1 X101.146 Y110.662 E12.46046 ; infill G1 X102.59 Y112.106 E12.48332 ; infill G1 X102.536 Y111.287 E12.49251 ; infill G1 X102.586 Y110.38 E12.50268 ; infill G1 X102.743 Y109.585 E12.51175 ; infill G1 X103.012 Y108.9 E12.51999 ; infill G1 X103.4 Y108.325 E12.52776 ; infill G1 X100.983 Y108.325 E12.55482 ; infill G1 X100.983 Y110.625 E12.58057 ; infill G1 X101.707 Y110.199 F9000 ; move to first infill point ;WIDTH:0.420394 G1 F3150 G1 X101.707 Y109.05 E12.59417 ; infill G1 X102.173 Y109.05 E12.59968 ; infill G1 X102.033 Y109.443 E12.60462 ; infill G1 X101.863 Y110.34 E12.61542 ; infill G1 X101.839 Y110.319 E12.6158 ; infill G1 X104.143 Y114.669 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X106.221 Y116.747 E12.6487 ; infill G1 X106.726 Y116.747 E12.65435 ; infill G1 X104.962 Y114.983 E12.68228 ; infill G1 X104.739 Y114.805 E12.68547 ; infill ;WIDTH:0.38292 G1 X104.75 Y114.846 E12.68592 ; infill G1 X104.679 Y114.865 E12.6867 ; infill G1 X104.698 Y114.794 E12.68748 ; infill G1 X104.19 Y110.861 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X108.951 Y110.861 E12.74078 ; infill G1 X109.084 Y110.921 E12.74241 ; infill G1 X109.216 Y111.11 E12.74499 ; infill G1 X109.217 Y111.162 E12.74557 ; infill G1 X109.023 Y112.797 E12.764 ; infill G1 X108.424 Y114.035 E12.7794 ; infill G1 X108.323 Y114.143 E12.78106 ; infill G1 X107.399 Y114.812 E12.79383 ; infill G1 X107.293 Y114.856 E12.79511 ; infill G1 X105.938 Y115.09 E12.8105 ; infill G1 X105.549 Y115.065 E12.81486 ; infill G1 X107.105 Y116.621 E12.83949 ; infill G1 X107.105 Y116.747 E12.8409 ; infill G1 X110.605 Y116.747 E12.88008 ; infill G1 X110.605 Y108.325 E12.97436 ; infill G1 X108.567 Y108.325 E12.99717 ; infill G1 X108.897 Y108.887 E13.00447 ; infill G1 X108.907 Y109.044 E13.00623 ; infill G1 X108.782 Y109.263 E13.00905 ; infill G1 X108.041 Y109.482 E13.0177 ; infill G1 X107.917 Y109.472 E13.01909 ; infill G1 X107.738 Y109.355 E13.02148 ; infill G1 X107.47 Y108.963 E13.0268 ; infill G1 X107.056 Y108.658 E13.03256 ; infill G1 X106.751 Y108.517 E13.03632 ; infill G1 X106.074 Y108.416 E13.04398 ; infill G1 X105.505 Y108.442 E13.05036 ; infill G1 X105.112 Y108.563 E13.05496 ; infill G1 X104.76 Y108.778 E13.05958 ; infill G1 X104.444 Y109.141 E13.06497 ; infill G1 X104.249 Y109.492 E13.06947 ; infill G1 X104.11 Y109.897 E13.07426 ; infill G1 X104.022 Y110.371 E13.07966 ; infill G1 X104.011 Y110.861 E13.08515 ; infill G1 X104.372 Y110.504 E13.09083 ; infill G1 X104.461 Y109.966 E13.09693 ; infill G1 X104.641 Y109.5 E13.10252 ; infill G1 X104.913 Y109.132 E13.10764 ; infill G1 X105.17 Y108.946 E13.11119 ; infill G1 X105.574 Y108.795 E13.11602 ; infill G1 X106.035 Y108.771 E13.12119 ; infill G1 X106.671 Y108.867 E13.12839 ; infill G1 X107.149 Y109.143 E13.13457 ; infill G1 X107.432 Y109.538 E13.14001 ; infill G1 X107.664 Y109.748 E13.14351 ; infill ;WIDTH:0.437707 G1 X107.746 Y109.791 E13.14466 ; infill ;WIDTH:0.475415 G1 X107.828 Y109.834 E13.14592 ; infill ;WIDTH:0.513123 G1 X107.91 Y109.878 E13.14729 ; infill ;WIDTH:0.550831 G1 X107.992 Y109.921 E13.14876 ; infill G1 X108.155 Y109.883 E13.15143 ; infill ;WIDTH:0.521377 G1 X108.428 Y109.777 E13.15582 ; infill ;WIDTH:0.480918 G1 X108.7 Y109.671 E13.15983 ; infill ;WIDTH:0.440459 G1 X108.973 Y109.565 E13.16348 ; infill ;WIDTH:0.399999 G1 X109.183 Y109.314 E13.16714 ; infill G1 X109.268 Y109.081 E13.16992 ; infill G1 X109.191 Y108.682 E13.17447 ; infill G1 X110.247 Y108.682 E13.18629 ; infill G1 X110.247 Y116.39 E13.27258 ; infill G1 X108.026 Y116.39 E13.29744 ; infill G1 X107.357 Y116.368 E13.30493 ; infill G1 X106.367 Y115.378 E13.3206 ; infill G1 X107.354 Y115.208 E13.33181 ; infill G1 X107.609 Y115.101 E13.33491 ; infill G1 X108.533 Y114.433 E13.34767 ; infill G1 X108.744 Y114.193 E13.35125 ; infill G1 X109.326 Y113.013 E13.36598 ; infill G1 X109.378 Y112.839 E13.36801 ; infill G1 X109.572 Y111.204 E13.38644 ; infill G1 X109.567 Y111.048 E13.38819 ; infill G1 X109.44 Y110.785 E13.39146 ; infill G1 X109.216 Y110.575 E13.3949 ; infill G1 X108.95 Y110.504 E13.39798 ; infill ;WIDTH:0.437707 G1 X108.711 Y110.485 E13.40095 ; infill ;WIDTH:0.475415 G1 X108.471 Y110.467 E13.40421 ; infill ;WIDTH:0.513123 G1 X108.232 Y110.448 E13.40774 ; infill ;WIDTH:0.550831 G1 X107.992 Y110.429 E13.41157 ; infill G1 X107.868 Y110.448 E13.41357 ; infill ;WIDTH:0.513123 G1 X107.744 Y110.467 E13.41542 ; infill ;WIDTH:0.475415 G1 X107.62 Y110.485 E13.41712 ; infill ;WIDTH:0.437707 G1 X107.496 Y110.504 E13.41867 ; infill ;WIDTH:0.399999 G1 X104.55 Y110.504 E13.45165 ; infill G1 X104.789 Y110.147 E13.45646 ; infill G1 X104.919 Y109.742 E13.46122 ; infill G1 X105.051 Y109.517 E13.46414 ; infill G1 X105.258 Y109.311 E13.46741 ; infill G1 X105.592 Y109.163 E13.4715 ; infill G1 X105.996 Y109.126 E13.47604 ; infill G1 X106.527 Y109.195 E13.48203 ; infill G1 X106.919 Y109.42 E13.48709 ; infill G1 X107.126 Y109.722 E13.49119 ; infill G1 X107.513 Y110.071 E13.49702 ; infill ;WIDTH:0.405073 G1 X107.674 Y110.14 E13.49901 ; infill G1 X107.496 Y110.147 E13.50103 ; infill ;WIDTH:0.399999 G1 X104.968 Y110.147 E13.52933 ; infill G1 X105.273 Y109.806 E13.53445 ; infill ;WIDTH:0.367771 G1 X105.424 Y109.609 E13.53698 ; infill G1 X105.725 Y109.482 E13.54031 ; infill G1 X106.391 Y109.505 E13.5471 ; infill ;WIDTH:0.352703 G1 X106.698 Y109.674 E13.5505 ; infill G1 X106.791 Y109.814 E13.55213 ; infill G1 X106.657 Y109.814 E13.55343 ; infill ;WIDTH:0.376615 G1 X105.451 Y109.805 E13.56605 ; infill G1 X107.107 Y115.613 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X107.551 Y115.526 E13.57111 ; infill G1 X107.818 Y115.39 E13.57446 ; infill G1 X108.742 Y114.722 E13.58722 ; infill G1 X108.921 Y114.561 E13.58992 ; infill G1 X109.064 Y114.351 E13.59276 ; infill ;WIDTH:0.423282 G1 X109.657 Y113.176 E13.60845 ; infill ;WIDTH:0.468328 G1 X109.708 Y113.081 E13.60989 ; infill ;WIDTH:0.513374 G1 X109.76 Y112.985 E13.6115 ; infill ;WIDTH:0.55842 G1 X109.811 Y112.89 E13.61324 ; infill G1 X109.834 Y113.003 E13.6151 ; infill ;WIDTH:0.513374 G1 X109.856 Y113.115 E13.61678 ; infill ;WIDTH:0.468328 G1 X109.879 Y113.228 E13.61832 ; infill ;WIDTH:0.423282 G1 X109.89 Y114.543 E13.634 ; infill ;WIDTH:0.399999 G1 X109.89 Y116.033 E13.65068 ; infill G1 X107.527 Y116.033 E13.67713 ; infill G1 X107.233 Y115.739 E13.68178 ; infill G1 X108.033 Y115.676 F9000 ; move to first infill point G1 F3150 G1 X108.951 Y115.011 E13.69447 ; infill G1 X109.217 Y114.764 E13.69853 ; infill G1 X109.533 Y114.207 E13.7057 ; infill G1 X109.533 Y115.676 E13.72215 ; infill G1 X108.211 Y115.676 E13.73695 ; infill G1 X109.154 Y115.263 F9000 ; move to first infill point ;WIDTH:0.41975 G1 F3150 G1 X109.133 Y115.342 E13.73792 ; infill G1 X109.212 Y115.321 E13.73889 ; infill G1 X109.2 Y115.275 E13.73945 ; infill G1 X109.811 Y112.89 F9000 ; move to first infill point ;WIDTH:0.55842 G1 F3150 G1 X109.835 Y112.478 E13.74612 ; infill ;WIDTH:0.509808 G1 X109.86 Y112.067 E13.75215 ; infill ;WIDTH:0.461196 G1 X109.884 Y111.655 E13.75756 ; infill ;WIDTH:0.412584 G1 X109.908 Y111.244 E13.76233 ; infill ;WIDTH:0.371104 G1 X109.905 Y110.989 E13.76495 ; infill G1 X108.49 Y110.147 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X108.956 Y110.147 E13.77017 ; infill G1 X109.206 Y110.185 E13.773 ; infill G1 X109.392 Y110.264 E13.77526 ; infill G1 X109.707 Y110.548 E13.78001 ; infill G1 X109.905 Y110.989 E13.78542 ; infill G1 X109.89 Y109.039 E13.80725 ; infill G1 X109.599 Y109.039 E13.81051 ; infill G1 X109.618 Y109.15 E13.81177 ; infill G1 X109.514 Y109.449 E13.81531 ; infill G1 X109.321 Y109.741 E13.81923 ; infill G1 X109.163 Y109.867 E13.82149 ; infill G1 X108.926 Y109.972 E13.82439 ; infill G1 X108.311 Y110.147 E13.83155 ; infill G1 X99.365 Y112.236 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X99.653 Y112.236 E13.83477 ; infill G1 X99.873 Y112.016 E13.83825 ; infill G1 X99.873 Y110.473 E13.85552 ; infill G1 X100.626 Y111.225 E13.86743 ; infill G1 X100.626 Y113.775 E13.89598 ; infill G1 X99.873 Y114.527 E13.90789 ; infill G1 X99.873 Y112.998 E13.92501 ; infill G1 X99.653 Y112.778 E13.92849 ; infill G1 X94.383 Y112.778 E13.98749 ; infill G1 X94.163 Y112.998 E13.99097 ; infill G1 X94.163 Y114.863 E14.01185 ; infill G1 X93.411 Y114.11 E14.02376 ; infill G1 X93.411 Y110.89 E14.05981 ; infill G1 X94.163 Y110.137 E14.07172 ; infill G1 X94.163 Y112.016 E14.09275 ; infill G1 X94.35 Y112.203 E14.09571 ; infill G1 X94.52 Y109.269 F9000 ; move to first infill point ;TYPE:Solid infill ;WIDTH:0.399999 G1 F3150 G1 X94.52 Y111.868 E14.12481 ; infill G1 X97.308 Y111.879 E14.15602 ; infill G1 X94.52 Y109.09 E14.20017 ; infill G1 X94.52 Y108.585 E14.20582 ; infill G1 X97.939 Y111.99 E14.25984 ; infill ;WIDTH:0.38292 G1 X97.92 Y112.061 E14.26062 ; infill G1 X97.991 Y112.042 E14.2614 ; infill G1 X97.98 Y112.001 E14.26185 ; infill ;WIDTH:0.399999 G1 X98.318 Y111.879 E14.26587 ; infill G1 X94.765 Y108.325 E14.32213 ; infill G1 X94.476 Y108.221 E14.32557 ; infill ;WIDTH:0.38292 G1 X94.487 Y108.262 E14.32602 ; infill G1 X94.416 Y108.281 E14.3268 ; infill G1 X94.435 Y108.21 E14.32758 ; infill G1 X95.27 Y108.325 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X98.823 Y111.879 E14.38384 ; infill G1 X99.64 Y111.877 F9000 ; move to first infill point ;WIDTH:0.38292 G1 F3150 G1 X99.651 Y111.918 E14.38429 ; infill G1 X99.58 Y111.937 E14.38507 ; infill G1 X99.599 Y111.866 E14.38585 ; infill ;WIDTH:0.399999 G1 X99.328 Y111.879 E14.38889 ; infill G1 X95.775 Y108.325 E14.44515 ; infill G1 X96.28 Y108.325 E14.4508 ; infill G1 X99.516 Y111.561 E14.50203 ; infill G1 X99.516 Y111.056 E14.50768 ; infill G1 X96.785 Y108.325 E14.55092 ; infill G1 X97.29 Y108.325 E14.55657 ; infill G1 X99.516 Y110.551 E14.59181 ; infill G1 X97.921 Y108.452 F9000 ; move to first infill point G1 F3150 G1 X99.516 Y110.046 E14.61705 ; infill G1 X99.516 Y108.325 E14.63632 ; infill G1 X97.795 Y108.325 E14.65559 ; infill G1 X98.619 Y108.667 F9000 ; move to first infill point ;WIDTH:0.368503 G1 F3150 G1 X99.175 Y108.667 E14.66127 ; infill G1 X99.175 Y109.222 E14.66694 ; infill G1 X98.745 Y108.793 E14.67314 ; infill G1 X94.877 Y109.953 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X96.446 Y111.522 E14.69798 ; infill G1 X94.877 Y111.522 E14.71554 ; infill G1 X94.877 Y110.131 E14.73111 ; infill G1 X95.319 Y110.994 F9000 ; move to first infill point ;WIDTH:0.604936 G1 F3150 G1 X95.269 Y111.044 E14.73236 ; infill G1 X95.287 Y111.112 E14.7336 ; infill G1 X95.355 Y111.13 E14.73484 ; infill G1 X95.405 Y111.08 E14.73609 ; infill G1 X95.387 Y111.012 E14.73733 ; infill G1 X94.56 Y116.635 F9000 ; move to first infill point ;WIDTH:0.51025 G1 F3150 G1 X94.519 Y116.677 E14.73819 ; infill G1 X94.534 Y116.733 E14.73904 ; infill G1 X94.59 Y116.748 E14.73989 ; infill G1 X94.632 Y116.707 E14.74075 ; infill G1 X94.617 Y116.651 E14.7416 ; infill ;WIDTH:0.399999 G1 X94.52 Y116.054 E14.74837 ; infill G1 X95.339 Y116.858 E14.76122 ; infill ;WIDTH:0.38292 G1 X95.32 Y116.929 E14.762 ; infill G1 X95.392 Y116.91 E14.76279 ; infill G1 X95.381 Y116.869 E14.76324 ; infill ;WIDTH:0.399999 G1 X95.718 Y116.747 E14.76725 ; infill G1 X94.52 Y115.549 E14.78622 ; infill G1 X94.52 Y115.044 E14.79187 ; infill G1 X96.223 Y116.747 E14.81883 ; infill G1 X96.728 Y116.747 E14.82448 ; infill G1 X94.52 Y114.539 E14.85944 ; infill G1 X94.52 Y114.034 E14.86509 ; infill G1 X97.233 Y116.747 E14.90804 ; infill G1 X97.738 Y116.747 E14.91369 ; infill G1 X94.52 Y113.529 E14.96464 ; infill G1 X94.398 Y113.059 E14.97008 ; infill ;WIDTH:0.38292 G1 X94.379 Y113.13 E14.97086 ; infill G1 X94.45 Y113.111 E14.97164 ; infill G1 X94.439 Y113.07 E14.97209 ; infill ;WIDTH:0.399999 G1 X94.631 Y113.135 E14.97436 ; infill G1 X98.243 Y116.747 E15.03154 ; infill G1 X98.748 Y116.747 E15.03719 ; infill G1 X95.136 Y113.135 E15.09437 ; infill G1 X95.641 Y113.135 E15.10002 ; infill G1 X99.253 Y116.747 E15.1572 ; infill G1 X99.579 Y116.78 E15.16087 ; infill ;WIDTH:0.38292 G1 X99.56 Y116.851 E15.16165 ; infill G1 X99.631 Y116.832 E15.16243 ; infill G1 X99.62 Y116.791 E15.16288 ; infill ;WIDTH:0.399999 G1 X99.516 Y116.505 E15.16629 ; infill G1 X96.146 Y113.135 E15.21964 ; infill G1 X96.651 Y113.135 E15.22529 ; infill G1 X99.516 Y116 E15.27065 ; infill G1 X99.516 Y115.495 E15.2763 ; infill G1 X97.156 Y113.135 E15.31366 ; infill G1 X97.661 Y113.135 E15.31931 ; infill G1 X99.516 Y114.99 E15.34868 ; infill G1 X98.293 Y113.261 F9000 ; move to first infill point G1 F3150 G1 X99.516 Y114.485 E15.36805 ; infill G1 X99.516 Y113.146 E15.38304 ; infill G1 X98.166 Y113.135 E15.39815 ; infill G1 X99.107 Y113.478 F9000 ; move to first infill point ;WIDTH:0.476534 G1 F3150 G1 X99.068 Y113.516 E15.39889 ; infill G1 X99.082 Y113.569 E15.39964 ; infill G1 X99.135 Y113.583 E15.40039 ; infill G1 X99.173 Y113.544 E15.40113 ; infill G1 X99.159 Y113.492 E15.40186 ; infill G1 X92.766 Y116.77 F9000 ; move to first infill point ;WIDTH:0.353675 G1 F3150 G1 X92.766 Y108.302 E15.48436 ; infill G1 X93.077 Y108.302 E15.48739 ; infill G1 X93.077 Y116.77 E15.56989 ; infill G1 X92.945 Y116.77 E15.57118 ; infill G1 X131.443 Y108.093 F9000 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.399999 G1 F3000 G1 X131.443 Y112.536 E15.62092 ; perimeter G1 X131.443 Y116.979 E15.67066 ; perimeter G1 X114.975 Y116.979 E15.85502 ; perimeter G1 X114.912 Y116.983 E15.85573 ; perimeter G1 X114.82 Y117.042 E15.85695 ; perimeter G1 X113.953 Y117.042 E15.86666 ; perimeter G1 X113.911 Y116.991 E15.8674 ; perimeter G1 X113.797 Y116.979 E15.86868 ; perimeter G1 X111.889 Y116.979 E15.89004 ; perimeter G1 X111.826 Y116.983 E15.89075 ; perimeter G1 X111.734 Y117.042 E15.89197 ; perimeter G1 X110.867 Y117.042 E15.90168 ; perimeter G1 X110.826 Y116.991 E15.90241 ; perimeter G1 X110.712 Y116.979 E15.90369 ; perimeter G1 X92.557 Y116.979 E16.10693 ; perimeter G1 X92.557 Y108.093 E16.20641 ; perimeter G1 X104.912 Y108.093 E16.34472 ; perimeter G1 X105.28 Y108.012 E16.34894 ; perimeter G1 X105.943 Y107.96 E16.35638 ; perimeter G1 X107.078 Y108.093 E16.36917 ; perimeter G1 X118.74 Y108.093 E16.49972 ; perimeter G1 X119.101 Y108.013 E16.50386 ; perimeter G1 X119.758 Y107.959 E16.51124 ; perimeter G1 X120.173 Y107.992 E16.5159 ; perimeter G1 X120.801 Y108.093 E16.52302 ; perimeter G1 X131.383 Y108.093 E16.64148 ; perimeter G1 X131.8 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter G1 F1500 G1 X131.8 Y112.536 E16.69521 ; perimeter G1 X131.8 Y117.336 E16.74894 ; perimeter G1 X114.975 Y117.336 E16.93729 ; perimeter G1 X114.889 Y117.4 E16.93849 ; perimeter G1 X113.883 Y117.4 E16.94975 ; perimeter G1 X113.797 Y117.336 E16.95095 ; perimeter G1 X111.889 Y117.336 E16.97231 ; perimeter G1 X111.804 Y117.4 E16.9735 ; perimeter G1 X110.797 Y117.4 E16.98477 ; perimeter G1 X110.712 Y117.336 E16.98596 ; perimeter G1 X92.2 Y117.336 E17.1932 ; perimeter G1 X92.2 Y107.736 E17.30067 ; perimeter G1 X104.912 Y107.736 E17.44298 ; perimeter G1 X105.219 Y107.659 E17.44652 ; perimeter G1 X105.947 Y107.601 E17.4547 ; perimeter G1 X107.078 Y107.736 E17.46745 ; perimeter G1 X118.74 Y107.736 E17.598 ; perimeter G1 X119.038 Y107.66 E17.60144 ; perimeter G1 X119.758 Y107.601 E17.60953 ; perimeter G1 X120.201 Y107.636 E17.6145 ; perimeter G1 X120.801 Y107.736 E17.62131 ; perimeter G1 X131.74 Y107.736 E17.74377 ; perimeter G1 X131.799 Y108.132 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:1.6 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 7; ;LAYER:7 G1 E11.24377 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z1.6 F9000 ; simple layer change G1 X125.697 Y108.325 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Solid infill G1 F3150 G1 X122.31 Y108.325 E6.53792 ; infill G1 X122.649 Y108.811 E6.54455 ; infill G1 X122.925 Y109.477 E6.55262 ; infill G1 X123.096 Y110.291 E6.56193 ; infill G1 X123.124 Y111.077 E6.57073 ; infill G1 X125.875 Y108.325 E6.61429 ; infill G1 X126.558 Y108.162 E6.62215 ; infill ;WIDTH:0.38292 G1 X126.487 Y108.143 E6.62293 ; infill G1 X126.506 Y108.214 E6.62371 ; infill G1 X126.547 Y108.203 E6.62416 ; infill ;WIDTH:0.399999 G1 X126.38 Y108.325 E6.62648 ; infill G1 X123.017 Y111.7 E6.67982 ; infill ;WIDTH:0.38292 G1 X122.946 Y111.681 E6.6806 ; infill G1 X122.965 Y111.752 E6.68138 ; infill G1 X123.006 Y111.741 E6.68183 ; infill ;WIDTH:0.399999 G1 X123.103 Y112.107 E6.68607 ; infill G1 X126.885 Y108.325 E6.74595 ; infill G1 X127.39 Y108.325 E6.7516 ; infill G1 X122.989 Y112.726 E6.82128 ; infill G1 X122.889 Y112.968 E6.82421 ; infill ;WIDTH:0.38292 G1 X122.818 Y112.949 E6.82499 ; infill G1 X122.837 Y113.02 E6.82577 ; infill G1 X122.878 Y113.009 E6.82622 ; infill ;WIDTH:0.399999 G1 X122.741 Y113.479 E6.8317 ; infill G1 X127.895 Y108.325 E6.9133 ; infill G1 X125.013 Y108.682 F9000 ; move to first infill point G1 F3150 G1 X123.449 Y110.246 E6.93806 ; infill G1 X123.256 Y109.342 E6.94841 ; infill G1 X122.983 Y108.682 E6.95641 ; infill G1 X124.835 Y108.682 E6.97714 ; infill G1 X124.17 Y109.032 F9000 ; move to first infill point ;WIDTH:0.384208 G1 F3150 G1 X123.662 Y109.539 E6.98482 ; infill G1 X123.506 Y109.032 E6.9905 ; infill G1 X123.992 Y109.032 E6.9957 ; infill G1 X122.553 Y113.732 F9000 ; move to first infill point ;WIDTH:0.38292 G1 F3150 G1 X122.267 Y114.08 E7.0005 ; infill G1 X121.835 Y114.49 E7.00685 ; infill G1 X117.268 Y108.325 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X116.884 Y108.911 E7.01469 ; infill G1 X116.625 Y109.587 E7.02279 ; infill G1 X116.473 Y110.365 E7.03166 ; infill G1 X116.426 Y111.238 E7.04145 ; infill G1 X116.634 Y112.879 E7.05997 ; infill G1 X117.236 Y114.062 E7.07483 ; infill G1 X117.317 Y114.154 E7.0762 ; infill G1 X118.279 Y114.82 E7.0893 ; infill G1 X118.383 Y114.862 E7.09056 ; infill G1 X119.824 Y115.093 E7.1069 ; infill G1 X120.62 Y115.03 E7.11584 ; infill G1 X121.277 Y114.859 E7.12344 ; infill G1 X121.442 Y114.779 E7.12549 ; infill G1 X119.6 Y116.621 E7.15465 ; infill G1 X119.6 Y116.749 E7.15608 ; infill G1 X115.082 Y116.751 E7.20666 ; infill G1 X115.082 Y108.325 E7.30099 ; infill G1 X117.089 Y108.325 E7.32346 ; infill G1 X116.602 Y108.682 E7.33022 ; infill G1 X116.275 Y109.518 E7.34027 ; infill G1 X116.117 Y110.344 E7.34968 ; infill G1 X116.072 Y111.283 E7.3602 ; infill G1 X116.28 Y112.924 E7.37872 ; infill G1 X116.336 Y113.104 E7.38083 ; infill G1 X116.919 Y114.227 E7.39499 ; infill G1 X117.113 Y114.447 E7.39827 ; infill G1 X118.076 Y115.114 E7.41138 ; infill G1 X118.325 Y115.215 E7.41439 ; infill G1 X119.725 Y115.444 E7.43027 ; infill G1 X120.3 Y115.415 E7.43672 ; infill G1 X119.347 Y116.392 E7.452 ; infill G1 X115.439 Y116.393 E7.49575 ; infill G1 X115.439 Y108.682 E7.58207 ; infill G1 X116.424 Y108.682 E7.5931 ; infill G1 X115.907 Y109.15 E7.60091 ; infill ;WIDTH:0.621106 G1 X115.883 Y109.361 E7.60476 ; infill ;WIDTH:0.57267 G1 X115.858 Y109.572 E7.60829 ; infill ;WIDTH:0.524233 G1 X115.834 Y109.782 E7.61148 ; infill ;WIDTH:0.475796 G1 X115.81 Y109.993 E7.61436 ; infill ;WIDTH:0.427359 G1 X115.786 Y110.204 E7.61692 ; infill ;WIDTH:0.378922 G1 X115.77 Y110.685 E7.62199 ; infill ;WIDTH:0.347142 G1 X115.754 Y111.167 E7.62659 ; infill ;WIDTH:0.320722 G1 X115.757 Y111.322 E7.62794 ; infill ;WIDTH:0.362468 G1 X115.778 Y111.653 E7.63126 ; infill ;WIDTH:0.404213 G1 X115.798 Y111.984 E7.63502 ; infill ;WIDTH:0.445958 G1 X115.819 Y112.315 E7.63921 ; infill ;WIDTH:0.487703 G1 X115.84 Y112.646 E7.64383 ; infill ;WIDTH:0.529448 G1 X115.861 Y112.977 E7.64889 ; infill ;WIDTH:0.536316 G1 X115.849 Y113.111 E7.65097 ; infill ;WIDTH:0.505929 G1 X115.834 Y113.199 E7.65227 ; infill ;WIDTH:0.475541 G1 X115.813 Y113.323 E7.65398 ; infill ;WIDTH:0.432701 G1 X115.796 Y114.588 E7.66944 ; infill ;WIDTH:0.399999 G1 X115.796 Y116.036 E7.68565 ; infill G1 X117.676 Y116.036 E7.7067 ; infill ;WIDTH:0.428589 G1 X117.953 Y116.021 E7.71005 ; infill ;WIDTH:0.457178 G1 X118.23 Y116.007 E7.71365 ; infill G1 X118.668 Y116.025 E7.71934 ; infill ;WIDTH:0.421511 G1 X119.107 Y116.042 E7.72455 ; infill ;WIDTH:0.385844 G1 X119.178 Y116.042 E7.72531 ; infill G1 X119.465 Y115.756 E7.72967 ; infill ;WIDTH:0.421511 G1 X118.864 Y115.676 E7.73687 ; infill ;WIDTH:0.457178 G1 X118.263 Y115.595 E7.74475 ; infill G1 X118.068 Y115.501 E7.74756 ; infill ;WIDTH:0.428589 G1 X117.872 Y115.408 E7.75018 ; infill ;WIDTH:0.399999 G1 X116.91 Y114.741 E7.76328 ; infill G1 X116.724 Y114.57 E7.76611 ; infill G1 X116.602 Y114.391 E7.76854 ; infill ;WIDTH:0.432701 G1 X116.004 Y113.276 E7.784 ; infill ;WIDTH:0.46724 G1 X115.958 Y113.192 E7.78527 ; infill ;WIDTH:0.501778 G1 X115.911 Y113.107 E7.78667 ; infill ;WIDTH:0.536316 G1 X115.865 Y113.023 E7.78815 ; infill G1 X116.153 Y114.302 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X116.456 Y114.806 E7.79473 ; infill G1 X116.707 Y115.034 E7.79853 ; infill G1 X117.637 Y115.679 E7.8112 ; infill G1 X116.153 Y115.679 E7.82781 ; infill G1 X116.153 Y114.481 E7.84122 ; infill G1 X119.978 Y116.747 F9000 ; move to first infill point G1 F3150 G1 X128.4 Y108.325 E7.97456 ; infill G1 X128.905 Y108.325 E7.98021 ; infill G1 X120.483 Y116.747 E8.11355 ; infill G1 X120.988 Y116.747 E8.1192 ; infill G1 X129.41 Y108.325 E8.25254 ; infill G1 X129.915 Y108.325 E8.25819 ; infill G1 X121.493 Y116.747 E8.39153 ; infill G1 X121.998 Y116.747 E8.39718 ; infill G1 X130.42 Y108.325 E8.53052 ; infill G1 X130.925 Y108.325 E8.53617 ; infill G1 X122.503 Y116.747 E8.66951 ; infill G1 X123.008 Y116.747 E8.67516 ; infill G1 X131.211 Y108.544 E8.80503 ; infill G1 X131.317 Y108.28 E8.80821 ; infill ;WIDTH:0.38292 G1 X131.275 Y108.291 E8.80867 ; infill G1 X131.256 Y108.22 E8.80945 ; infill G1 X131.328 Y108.239 E8.81024 ; infill G1 X131.211 Y109.049 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X123.513 Y116.747 E8.93211 ; infill G1 X124.018 Y116.747 E8.93776 ; infill G1 X131.211 Y109.554 E9.05164 ; infill G1 X131.211 Y110.059 E9.05729 ; infill G1 X124.523 Y116.747 E9.16317 ; infill G1 X125.028 Y116.747 E9.16882 ; infill G1 X131.211 Y110.564 E9.26671 ; infill G1 X131.211 Y111.069 E9.27236 ; infill G1 X125.533 Y116.747 E9.36225 ; infill G1 X126.038 Y116.747 E9.3679 ; infill G1 X131.211 Y111.574 E9.4498 ; infill G1 X131.211 Y112.079 E9.45545 ; infill G1 X126.543 Y116.747 E9.52935 ; infill G1 X127.048 Y116.747 E9.535 ; infill G1 X131.211 Y112.584 E9.60091 ; infill G1 X131.211 Y113.089 E9.60656 ; infill G1 X127.553 Y116.747 E9.66447 ; infill G1 X128.058 Y116.747 E9.67012 ; infill G1 X131.211 Y113.594 E9.72004 ; infill G1 X131.211 Y114.099 E9.72569 ; infill G1 X128.563 Y116.747 E9.76761 ; infill G1 X129.068 Y116.747 E9.77326 ; infill G1 X131.211 Y114.604 E9.80719 ; infill G1 X131.393 Y114.497 E9.80955 ; infill ;WIDTH:0.38292 G1 X131.352 Y114.508 E9.81 ; infill G1 X131.333 Y114.437 E9.81078 ; infill G1 X131.404 Y114.456 E9.81156 ; infill ;WIDTH:0.399999 G1 X131.211 Y115.109 E9.81918 ; infill G1 X131.211 Y116.747 E9.83752 ; infill G1 X129.573 Y116.747 E9.85586 ; infill G1 X131.085 Y115.235 E9.8798 ; infill G1 X130.804 Y116.248 F9000 ; move to first infill point ;WIDTH:0.645178 G1 F3150 G1 X130.751 Y116.195 E9.88122 ; infill G1 X130.678 Y116.214 E9.88264 ; infill G1 X130.658 Y116.287 E9.88407 ; infill G1 X130.712 Y116.34 E9.8855 ; infill G1 X130.784 Y116.32 E9.88691 ; infill G1 X122.614 Y109.712 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X122.744 Y110.345 E9.89414 ; infill G1 X122.795 Y111.212 E9.90386 ; infill G1 X122.76 Y111.839 E9.91089 ; infill G1 X121.906 Y112.694 E9.92442 ; infill G1 X121.968 Y112.368 E9.92813 ; infill G1 X122.557 Y112.957 E9.93745 ; infill G1 X122.377 Y113.433 E9.94315 ; infill G1 X122.066 Y113.905 E9.94948 ; infill G1 X121.666 Y114.263 E9.95549 ; infill G1 X121.161 Y114.522 E9.96184 ; infill G1 X120.539 Y114.682 E9.96903 ; infill G1 X119.868 Y114.732 E9.97656 ; infill G1 X120.259 Y114.341 E9.98275 ; infill G1 X119.802 Y114.378 E9.98788 ; infill G1 X119.287 Y114.333 E9.99367 ; infill G1 X118.762 Y114.168 E9.99983 ; infill G1 X118.391 Y113.936 E10.00473 ; infill G1 X118.06 Y113.579 E10.01018 ; infill G1 X117.802 Y113.09 E10.01637 ; infill G1 X117.643 Y112.552 E10.02265 ; infill G1 X117.551 Y111.944 E10.02953 ; infill G1 X117.519 Y111.203 E10.03783 ; infill G1 X117.646 Y109.87 E10.05282 ; infill G1 X117.81 Y109.326 E10.05918 ; infill G1 X118.024 Y108.901 E10.06451 ; infill G1 X118.238 Y108.639 E10.0683 ; infill G1 X117.925 Y108.325 E10.07326 ; infill G1 X117.723 Y108.325 E10.07552 ; infill G1 X117.74 Y108.369 E10.07605 ; infill G1 X117.538 Y108.557 E10.07914 ; infill G1 X117.213 Y109.05 E10.08575 ; infill G1 X116.975 Y109.655 E10.09303 ; infill G1 X116.901 Y110.025 E10.09725 ; infill G1 X118.539 Y108.702 F9000 ; move to first infill point ;TYPE:Solid infill ;WIDTH:0.38292 G1 F3150 G1 X118.253 Y109.01 E10.10173 ; infill ;WIDTH:0.399999 G1 X118.132 Y109.486 E10.10723 ; infill G1 X119.132 Y108.486 E10.12306 ; infill G1 X119.733 Y108.389 E10.12988 ; infill G1 X117.962 Y110.161 E10.15793 ; infill G1 X117.897 Y110.731 E10.16435 ; infill G1 X120.2 Y108.428 E10.20081 ; infill G1 X120.593 Y108.54 E10.20538 ; infill G1 X117.878 Y111.255 E10.24836 ; infill G1 X117.899 Y111.739 E10.25378 ; infill G1 X120.915 Y108.723 E10.30153 ; infill G1 X121.169 Y108.974 E10.30553 ; infill G1 X117.95 Y112.193 E10.35649 ; infill G1 X118.032 Y112.615 E10.3613 ; infill G1 X121.361 Y109.287 E10.414 ; infill G1 X121.501 Y109.652 E10.41838 ; infill G1 X118.153 Y112.999 E10.47138 ; infill G1 X118.327 Y113.331 E10.47558 ; infill G1 X121.602 Y110.056 E10.52743 ; infill G1 X121.666 Y110.496 E10.53241 ; infill G1 X118.561 Y113.602 E10.58158 ; infill G1 X118.86 Y113.808 E10.58564 ; infill G1 X121.689 Y110.979 E10.63043 ; infill G1 X121.688 Y111.485 E10.63609 ; infill G1 X119.228 Y113.945 E10.67504 ; infill G1 X119.67 Y114.008 E10.68004 ; infill G1 X121.656 Y112.022 E10.71148 ; infill G1 X121.57 Y112.599 E10.71801 ; infill ;WIDTH:0.381507 G1 X121.452 Y113.005 E10.7225 ; infill G1 X121.247 Y113.401 E10.72723 ; infill ;WIDTH:0.390886 G1 X121.022 Y113.646 E10.73086 ; infill G1 X120.684 Y113.864 E10.73525 ; infill G1 X120.183 Y113.994 E10.7409 ; infill G1 X121.001 Y113.168 E10.75358 ; infill ;WIDTH:0.381507 G1 X121.444 Y112.726 E10.76022 ; infill G1 X114.725 Y113.083 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X114.725 Y115.225 E10.7842 ; infill G1 X114.047 Y114.547 E10.79493 ; infill G1 X114.047 Y110.453 E10.84076 ; infill G1 X114.725 Y109.775 E10.85149 ; infill G1 X114.725 Y108.325 E10.86772 ; infill G1 X114.047 Y108.34 E10.87531 ; infill G1 X113.512 Y108.325 F9000 ; move to first infill point ;TYPE:Solid infill ;WIDTH:0.399999 G1 F3150 G1 X111.996 Y108.325 E10.89228 ; infill G1 X111.997 Y116.75 E10.9866 ; infill G1 X113.69 Y116.747 E11.00555 ; infill G1 X113.69 Y108.325 E11.09983 ; infill G1 X113.333 Y108.682 E11.10548 ; infill G1 X113.333 Y116.391 E11.19178 ; infill G1 X112.354 Y116.393 E11.20274 ; infill G1 X112.354 Y108.682 E11.28906 ; infill G1 X113.155 Y108.682 E11.29803 ; infill G1 X112.999 Y109.017 E11.30217 ; infill ;WIDTH:0.354153 G1 X112.999 Y116.057 E11.37086 ; infill G1 X112.688 Y116.058 E11.37389 ; infill G1 X112.688 Y109.017 E11.44259 ; infill G1 X112.82 Y109.017 E11.44388 ; infill G1 X110.962 Y109.319 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X110.962 Y111.462 E11.46787 ; infill G1 X111.639 Y112.139 E11.47859 ; infill G1 X111.639 Y112.861 E11.48667 ; infill G1 X110.962 Y113.538 E11.49739 ; infill G1 X110.962 Y115.681 E11.52138 ; infill G1 X107.578 Y111.969 F9000 ; move to first infill point ;TYPE:Solid infill ;WIDTH:0.399999 G1 F3150 G1 X104.022 Y111.969 E11.56119 ; infill G1 X104.053 Y112.358 E11.56556 ; infill G1 X104.172 Y112.807 E11.57076 ; infill G1 X104.355 Y113.19 E11.57551 ; infill G1 X104.599 Y113.508 E11.58 ; infill G1 X104.898 Y113.752 E11.58432 ; infill G1 X105.219 Y113.907 E11.58831 ; infill G1 X105.571 Y113.992 E11.59236 ; infill G1 X105.96 Y114.014 E11.59672 ; infill G1 X106.379 Y113.966 E11.60144 ; infill G1 X106.746 Y113.848 E11.60576 ; infill G1 X107.044 Y113.667 E11.60966 ; infill G1 X107.13 Y113.594 E11.61092 ; infill G1 X107.419 Y113.243 E11.61601 ; infill G1 X107.602 Y112.822 E11.62115 ; infill G1 X107.714 Y112.403 E11.62601 ; infill G1 X107.756 Y111.969 E11.63089 ; infill G1 X107.365 Y112.326 E11.63682 ; infill G1 X107.258 Y112.727 E11.64147 ; infill G1 X107.13 Y113.017 E11.64502 ; infill G1 X106.9 Y113.322 E11.6493 ; infill G1 X106.758 Y113.441 E11.65137 ; infill G1 X106.458 Y113.577 E11.65506 ; infill G1 X105.934 Y113.658 E11.661 ; infill G1 X105.474 Y113.611 E11.66618 ; infill G1 X105.075 Y113.442 E11.67103 ; infill G1 X104.843 Y113.247 E11.67442 ; infill G1 X104.648 Y112.986 E11.67807 ; infill G1 X104.499 Y112.665 E11.68203 ; infill G1 X104.413 Y112.326 E11.68595 ; infill G1 X107.186 Y112.326 E11.71699 ; infill G1 X106.123 Y112.744 F9000 ; move to first infill point ;WIDTH:0.522591 G1 F3150 G1 X106.795 Y112.744 E11.7271 ; infill G1 X106.629 Y113.002 E11.73171 ; infill G1 X106.526 Y113.09 E11.73375 ; infill G1 X106.141 Y113.223 E11.73988 ; infill G1 X105.618 Y113.218 E11.74775 ; infill ;WIDTH:0.521272 G1 X105.264 Y113.069 E11.75351 ; infill G1 X104.995 Y112.747 E11.7598 ; infill G1 X105.507 Y112.743 E11.76748 ; infill ;WIDTH:0.522209 G1 X105.945 Y112.744 E11.77406 ; infill G1 X105.445 Y111.218 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X103.85 Y111.218 E11.79192 ; infill G1 X103.628 Y110.984 E11.79553 ; infill G1 X103.64 Y110.76 E11.79804 ; infill G1 X102.907 Y111.493 E11.80964 ; infill G1 X102.943 Y112.071 E11.81612 ; infill G1 X103.093 Y112.777 E11.8242 ; infill G1 X103.452 Y113.535 E11.83359 ; infill G1 X99.365 Y112.236 F9000 ; move to first infill point G1 F4200 G1 X99.653 Y112.236 E11.83681 ; infill G1 X99.873 Y112.016 E11.84029 ; infill G1 X99.873 Y110.473 E11.85756 ; infill G1 X100.626 Y111.225 E11.86947 ; infill G1 X100.626 Y113.775 E11.89802 ; infill G1 X99.873 Y114.527 E11.90993 ; infill G1 X99.873 Y112.998 E11.92705 ; infill G1 X99.653 Y112.778 E11.93053 ; infill G1 X94.383 Y112.778 E11.98953 ; infill G1 X94.163 Y112.998 E11.99301 ; infill G1 X94.163 Y114.863 E12.01389 ; infill G1 X93.411 Y114.11 E12.0258 ; infill G1 X93.411 Y110.89 E12.06185 ; infill G1 X94.163 Y110.137 E12.07376 ; infill G1 X94.163 Y112.016 E12.09479 ; infill G1 X94.35 Y112.203 E12.09775 ; infill G1 X97.13 Y113.135 F9000 ; move to first infill point ;TYPE:Solid infill ;WIDTH:0.399999 G1 F3150 G1 X94.531 Y113.135 E12.12685 ; infill G1 X94.52 Y115.923 E12.15806 ; infill G1 X97.308 Y113.135 E12.2022 ; infill G1 X97.991 Y112.972 E12.21006 ; infill ;WIDTH:0.38292 G1 X97.92 Y112.953 E12.21084 ; infill G1 X97.939 Y113.024 E12.21162 ; infill G1 X97.98 Y113.013 E12.21207 ; infill ;WIDTH:0.399999 G1 X97.813 Y113.135 E12.21439 ; infill G1 X94.52 Y116.428 E12.26652 ; infill G1 X94.468 Y116.859 E12.27138 ; infill ;WIDTH:0.38292 G1 X94.427 Y116.87 E12.27183 ; infill G1 X94.408 Y116.799 E12.27261 ; infill G1 X94.479 Y116.818 E12.27339 ; infill ;WIDTH:0.399999 G1 X94.706 Y116.747 E12.27605 ; infill G1 X98.318 Y113.135 E12.33323 ; infill G1 X98.823 Y113.135 E12.33888 ; infill G1 X95.211 Y116.747 E12.39606 ; infill G1 X95.716 Y116.747 E12.40171 ; infill G1 X99.328 Y113.135 E12.45889 ; infill G1 X99.64 Y113.137 E12.46238 ; infill ;WIDTH:0.38292 G1 X99.599 Y113.148 E12.46283 ; infill G1 X99.58 Y113.077 E12.46361 ; infill G1 X99.651 Y113.096 E12.46439 ; infill ;WIDTH:0.399999 G1 X99.516 Y113.452 E12.46865 ; infill G1 X96.221 Y116.747 E12.52082 ; infill G1 X96.726 Y116.747 E12.52647 ; infill G1 X99.516 Y113.957 E12.57064 ; infill G1 X99.516 Y114.462 E12.57629 ; infill G1 X97.231 Y116.747 E12.61247 ; infill G1 X99.39 Y115.093 F9000 ; move to first infill point G1 F3150 G1 X97.736 Y116.747 E12.63866 ; infill G1 X99.516 Y116.747 E12.65859 ; infill G1 X99.516 Y114.967 E12.67852 ; infill G1 X99.166 Y115.812 F9000 ; move to first infill point ;WIDTH:0.385668 G1 F3150 G1 X99.166 Y116.397 E12.68481 ; infill G1 X98.581 Y116.397 E12.6911 ; infill G1 X99.04 Y115.938 E12.69808 ; infill G1 X96.446 Y113.492 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X94.877 Y115.061 E12.72292 ; infill G1 X94.877 Y113.492 E12.74048 ; infill G1 X96.268 Y113.492 E12.75605 ; infill G1 X95.405 Y113.933 F9000 ; move to first infill point ;WIDTH:0.604936 G1 F3150 G1 X95.355 Y113.884 E12.75728 ; infill G1 X95.287 Y113.902 E12.75852 ; infill G1 X95.269 Y113.97 E12.75976 ; infill G1 X95.319 Y114.019 E12.76099 ; infill G1 X95.387 Y114.001 E12.76223 ; infill G1 X94.632 Y108.365 F9000 ; move to first infill point ;WIDTH:0.51025 G1 F3150 G1 X94.59 Y108.324 E12.76309 ; infill G1 X94.534 Y108.339 E12.76394 ; infill G1 X94.519 Y108.396 E12.7648 ; infill G1 X94.56 Y108.437 E12.76565 ; infill G1 X94.617 Y108.422 E12.76651 ; infill ;WIDTH:0.399999 G1 X94.52 Y109.018 E12.77327 ; infill G1 X95.213 Y108.325 E12.78424 ; infill G1 X95.381 Y108.203 E12.78656 ; infill ;WIDTH:0.38292 G1 X95.339 Y108.214 E12.78702 ; infill G1 X95.32 Y108.143 E12.7878 ; infill G1 X95.392 Y108.162 E12.78859 ; infill ;WIDTH:0.399999 G1 X95.718 Y108.325 E12.79267 ; infill G1 X94.52 Y109.523 E12.81164 ; infill G1 X94.52 Y110.028 E12.81729 ; infill G1 X96.223 Y108.325 E12.84425 ; infill G1 X96.728 Y108.325 E12.8499 ; infill G1 X94.52 Y110.533 E12.88486 ; infill G1 X94.52 Y111.038 E12.89051 ; infill G1 X97.233 Y108.325 E12.93346 ; infill G1 X97.738 Y108.325 E12.93911 ; infill G1 X94.52 Y111.543 E12.99006 ; infill G1 X94.453 Y111.938 E12.99455 ; infill ;WIDTH:0.38292 G1 X94.412 Y111.949 E12.995 ; infill G1 X94.393 Y111.878 E12.99578 ; infill G1 X94.464 Y111.897 E12.99656 ; infill ;WIDTH:0.399999 G1 X94.69 Y111.879 E12.9991 ; infill G1 X98.243 Y108.325 E13.05536 ; infill G1 X98.748 Y108.325 E13.06101 ; infill G1 X95.195 Y111.879 E13.11727 ; infill G1 X95.7 Y111.879 E13.12292 ; infill G1 X99.253 Y108.325 E13.17918 ; infill G1 X99.631 Y108.24 E13.18352 ; infill ;WIDTH:0.38292 G1 X99.56 Y108.221 E13.1843 ; infill G1 X99.579 Y108.292 E13.18508 ; infill G1 X99.62 Y108.281 E13.18553 ; infill ;WIDTH:0.399999 G1 X99.516 Y108.567 E13.18894 ; infill G1 X96.205 Y111.879 E13.24137 ; infill G1 X96.71 Y111.879 E13.24702 ; infill G1 X99.516 Y109.072 E13.29145 ; infill G1 X99.516 Y109.577 E13.2971 ; infill G1 X97.215 Y111.879 E13.33354 ; infill G1 X99.39 Y110.209 F9000 ; move to first infill point G1 F3150 G1 X97.72 Y111.879 E13.35998 ; infill G1 X99.505 Y111.879 E13.37996 ; infill G1 X99.516 Y110.082 E13.40008 ; infill G1 X99.164 Y110.933 F9000 ; move to first infill point ;WIDTH:0.390469 G1 F3150 G1 X99.164 Y111.526 E13.40654 ; infill G1 X98.57 Y111.526 E13.41301 ; infill G1 X99.038 Y111.059 E13.42021 ; infill G1 X92.766 Y108.302 F9000 ; move to first infill point ;WIDTH:0.353675 G1 F3150 G1 X93.077 Y108.302 E13.42324 ; infill G1 X93.077 Y116.77 E13.50574 ; infill G1 X92.766 Y116.77 E13.50877 ; infill G1 X92.766 Y108.481 E13.58953 ; infill G1 X106.074 Y108.416 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X106.751 Y108.517 E13.59719 ; infill G1 X107.056 Y108.658 E13.60095 ; infill G1 X107.47 Y108.963 E13.60671 ; infill G1 X107.738 Y109.355 E13.61203 ; infill G1 X107.917 Y109.472 E13.61442 ; infill G1 X108.041 Y109.482 E13.61581 ; infill G1 X108.782 Y109.263 E13.62446 ; infill G1 X108.907 Y109.044 E13.62728 ; infill G1 X108.897 Y108.887 E13.62904 ; infill G1 X108.567 Y108.325 E13.63634 ; infill G1 X110.605 Y108.325 E13.65915 ; infill G1 X110.605 Y111.643 E13.69629 ; infill G1 X110.478 Y111.643 E13.69771 ; infill G1 X108.753 Y113.368 E13.72502 ; infill G1 X109.023 Y112.797 E13.73209 ; infill G1 X109.217 Y111.162 E13.75052 ; infill G1 X109.216 Y111.11 E13.7511 ; infill G1 X109.084 Y110.921 E13.75368 ; infill G1 X108.951 Y110.861 E13.75531 ; infill G1 X104.011 Y110.861 E13.81061 ; infill G1 X104.022 Y110.371 E13.8161 ; infill G1 X104.11 Y109.897 E13.8215 ; infill G1 X104.249 Y109.492 E13.82629 ; infill G1 X104.442 Y109.144 E13.83074 ; infill G1 X104.779 Y108.763 E13.83643 ; infill G1 X105.112 Y108.563 E13.84078 ; infill G1 X105.505 Y108.442 E13.84538 ; infill G1 X105.896 Y108.424 E13.84976 ; infill G1 X105.857 Y108.78 E13.85377 ; infill G1 X105.574 Y108.795 E13.85694 ; infill G1 X105.171 Y108.944 E13.86175 ; infill G1 X104.929 Y109.119 E13.86509 ; infill G1 X104.745 Y109.333 E13.86825 ; infill G1 X104.584 Y109.617 E13.8719 ; infill G1 X104.461 Y109.966 E13.87604 ; infill G1 X104.372 Y110.504 E13.88214 ; infill G1 X107.496 Y110.504 E13.91711 ; infill ;WIDTH:0.437707 G1 X107.62 Y110.485 E13.91866 ; infill ;WIDTH:0.475415 G1 X107.744 Y110.467 E13.92036 ; infill ;WIDTH:0.513123 G1 X107.868 Y110.448 E13.92221 ; infill ;WIDTH:0.550831 G1 X107.992 Y110.429 E13.92421 ; infill G1 X108.232 Y110.448 E13.92804 ; infill ;WIDTH:0.513123 G1 X108.471 Y110.467 E13.93157 ; infill ;WIDTH:0.475415 G1 X108.711 Y110.485 E13.93483 ; infill ;WIDTH:0.437707 G1 X108.95 Y110.504 E13.9378 ; infill ;WIDTH:0.399999 G1 X109.216 Y110.575 E13.94088 ; infill G1 X109.44 Y110.785 E13.94432 ; infill G1 X109.567 Y111.048 E13.94759 ; infill G1 X109.459 Y112.157 E13.96006 ; infill G1 X110.226 Y111.39 E13.9722 ; infill G1 X110.247 Y110.478 E13.98241 ; infill G1 X110.247 Y108.682 E14.00252 ; infill G1 X109.191 Y108.682 E14.01434 ; infill G1 X109.268 Y109.081 E14.01889 ; infill G1 X109.183 Y109.314 E14.02167 ; infill G1 X108.973 Y109.565 E14.02533 ; infill ;WIDTH:0.440459 G1 X108.7 Y109.671 E14.02898 ; infill ;WIDTH:0.480918 G1 X108.428 Y109.777 E14.03299 ; infill ;WIDTH:0.521377 G1 X108.155 Y109.883 E14.03738 ; infill ;WIDTH:0.550831 G1 X107.992 Y109.921 E14.04005 ; infill G1 X107.91 Y109.878 E14.04152 ; infill ;WIDTH:0.513123 G1 X107.828 Y109.834 E14.04289 ; infill ;WIDTH:0.475415 G1 X107.746 Y109.791 E14.04415 ; infill ;WIDTH:0.437707 G1 X107.664 Y109.748 E14.0453 ; infill ;WIDTH:0.399999 G1 X107.432 Y109.538 E14.0488 ; infill G1 X107.149 Y109.143 E14.05424 ; infill G1 X106.671 Y108.867 E14.06042 ; infill G1 X106.035 Y108.771 E14.06762 ; infill G1 X105.996 Y109.126 E14.07162 ; infill G1 X106.527 Y109.195 E14.07761 ; infill G1 X106.919 Y109.42 E14.08267 ; infill G1 X107.126 Y109.722 E14.08677 ; infill G1 X107.513 Y110.071 E14.0926 ; infill ;WIDTH:0.405073 G1 X107.674 Y110.14 E14.09459 ; infill G1 X107.496 Y110.147 E14.09661 ; infill ;WIDTH:0.399999 G1 X104.789 Y110.147 E14.12691 ; infill G1 X104.919 Y109.742 E14.13167 ; infill G1 X105.049 Y109.521 E14.13454 ; infill G1 X105.224 Y109.329 E14.13745 ; infill G1 X105.592 Y109.163 E14.14197 ; infill G1 X105.818 Y109.142 E14.14451 ; infill G1 X105.725 Y109.482 E14.14846 ; infill ;WIDTH:0.36777 G1 X106.391 Y109.505 E14.15525 ; infill ;WIDTH:0.352703 G1 X106.698 Y109.674 E14.15865 ; infill G1 X106.791 Y109.814 E14.16028 ; infill G1 X106.657 Y109.814 E14.16158 ; infill ;WIDTH:0.376615 G1 X105.273 Y109.806 E14.17606 ; infill ;WIDTH:0.36777 G1 X105.436 Y109.599 E14.17874 ; infill G1 X105.56 Y109.549 E14.1801 ; infill G1 X103.389 Y108.339 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X103.012 Y108.9 E14.18767 ; infill G1 X102.743 Y109.585 E14.19591 ; infill G1 X102.586 Y110.38 E14.20498 ; infill G1 X102.536 Y111.287 E14.21515 ; infill G1 X102.595 Y112.151 E14.22484 ; infill G1 X102.763 Y112.912 E14.23356 ; infill G1 X103.039 Y113.566 E14.24151 ; infill G1 X103.464 Y114.148 E14.24958 ; infill G1 X103.92 Y114.549 E14.25638 ; infill G1 X104.5 Y114.854 E14.26372 ; infill G1 X105.167 Y115.035 E14.27146 ; infill G1 X105.938 Y115.09 E14.28011 ; infill G1 X107.289 Y114.833 E14.29551 ; infill ;WIDTH:0.387407 G1 X107.322 Y114.82 E14.29589 ; infill G1 X107.3 Y114.854 E14.29633 ; infill ;WIDTH:0.399999 G1 X105.5 Y116.621 E14.32457 ; infill G1 X105.5 Y116.747 E14.32598 ; infill G1 X100.983 Y116.747 E14.37655 ; infill G1 X100.983 Y108.325 E14.47083 ; infill G1 X103.21 Y108.335 E14.49576 ; infill G1 X102.726 Y108.682 E14.50243 ; infill G1 X102.68 Y108.768 E14.50352 ; infill G1 X102.393 Y109.515 E14.51248 ; infill G1 X102.229 Y110.36 E14.52212 ; infill G1 X102.18 Y111.31 E14.53277 ; infill G1 X102.246 Y112.227 E14.54306 ; infill G1 X102.433 Y113.049 E14.5525 ; infill G1 X102.746 Y113.77 E14.5613 ; infill G1 X103.226 Y114.414 E14.57029 ; infill G1 X103.751 Y114.864 E14.57803 ; infill G1 X104.405 Y115.198 E14.58625 ; infill G1 X105.14 Y115.391 E14.59476 ; infill G1 X105.866 Y115.448 E14.60291 ; infill G1 X106.211 Y115.405 E14.6068 ; infill G1 X105.248 Y116.39 E14.62222 ; infill G1 X101.34 Y116.39 E14.66597 ; infill G1 X101.34 Y108.682 E14.75226 ; infill G1 X102.547 Y108.682 E14.76577 ; infill G1 X102.173 Y109.05 E14.77164 ; infill ;WIDTH:0.420395 G1 X102.033 Y109.443 E14.77658 ; infill ;WIDTH:0.463776 G1 X101.973 Y109.631 E14.77918 ; infill ;WIDTH:0.507157 G1 X101.913 Y109.819 E14.78205 ; infill ;WIDTH:0.550538 G1 X101.854 Y110.008 E14.7852 ; infill ;WIDTH:0.593918 G1 X101.794 Y110.196 E14.78861 ; infill G1 X101.772 Y110 E14.79202 ; infill ;WIDTH:0.550538 G1 X101.75 Y109.803 E14.79517 ; infill ;WIDTH:0.507157 G1 X101.729 Y109.607 E14.79804 ; infill ;WIDTH:0.463776 G1 X101.707 Y109.41 E14.80066 ; infill ;WIDTH:0.420395 G1 X101.707 Y109.05 E14.80492 ; infill G1 X101.995 Y109.05 E14.80833 ; infill G1 X101.794 Y110.196 F9000 ; move to first infill point ;WIDTH:0.593918 G1 F3150 G1 X101.777 Y110.709 E14.8172 ; infill ;WIDTH:0.5602 G1 X101.76 Y111.221 E14.82551 ; infill ;WIDTH:0.554218 G1 X101.774 Y111.7 E14.83319 ; infill ;WIDTH:0.581954 G1 X101.788 Y112.178 E14.84127 ; infill ;WIDTH:0.594746 G1 X101.772 Y112.462 E14.84619 ; infill ;WIDTH:0.550864 G1 X101.753 Y112.614 E14.84863 ; infill ;WIDTH:0.513147 G1 X101.735 Y112.766 E14.85089 ; infill ;WIDTH:0.475431 G1 X101.716 Y112.919 E14.85298 ; infill ;WIDTH:0.437715 G1 X101.697 Y113.071 E14.85488 ; infill ;WIDTH:0.399999 G1 X101.697 Y116.033 E14.88804 ; infill G1 X105.078 Y116.033 E14.92589 ; infill G1 X105.345 Y115.765 E14.93013 ; infill G1 X104.944 Y115.718 E14.93465 ; infill G1 X104.31 Y115.543 E14.94201 ; infill G1 X103.583 Y115.178 E14.95112 ; infill G1 X102.988 Y114.68 E14.95981 ; infill G1 X102.815 Y114.494 E14.96265 ; infill G1 X102.453 Y113.974 E14.96974 ; infill G1 X102.103 Y113.187 E14.97938 ; infill ;WIDTH:0.443881 G1 X102.03 Y112.97 E14.98226 ; infill ;WIDTH:0.487763 G1 X101.957 Y112.754 E14.98544 ; infill ;WIDTH:0.531645 G1 X101.884 Y112.537 E14.98895 ; infill ;WIDTH:0.575527 G1 X101.811 Y112.321 E14.99276 ; infill ;WIDTH:0.594746 G1 X101.794 Y112.285 E14.99345 ; infill G1 X102.054 Y113.984 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X102.16 Y114.178 E14.99592 ; infill G1 X102.715 Y114.915 E15.00625 ; infill G1 X103.171 Y115.323 E15.0131 ; infill G1 X103.755 Y115.676 E15.02074 ; infill G1 X102.054 Y115.676 E15.03978 ; infill G1 X102.054 Y114.163 E15.05672 ; infill G1 X102.529 Y115.243 F9000 ; move to first infill point ;WIDTH:0.52122 G1 F3150 G1 X102.487 Y115.2 E15.05762 ; infill G1 X102.429 Y115.216 E15.05852 ; infill G1 X102.414 Y115.273 E15.0594 ; infill G1 X102.456 Y115.316 E15.0603 ; infill G1 X102.514 Y115.3 E15.0612 ; infill G1 X107.379 Y114.787 F9000 ; move to first infill point ;WIDTH:0.38292 G1 F3150 G1 X108.305 Y113.991 E15.07422 ; infill G1 X110.605 Y112.021 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X105.879 Y116.747 E15.14904 ; infill G1 X106.384 Y116.747 E15.15469 ; infill G1 X110.605 Y112.526 E15.22152 ; infill G1 X110.605 Y113.031 E15.22717 ; infill G1 X106.889 Y116.747 E15.286 ; infill G1 X107.394 Y116.747 E15.29165 ; infill G1 X110.605 Y113.536 E15.34249 ; infill G1 X110.605 Y114.041 E15.34814 ; infill G1 X107.899 Y116.747 E15.39098 ; infill G1 X108.404 Y116.747 E15.39663 ; infill G1 X110.605 Y114.546 E15.43148 ; infill G1 X110.605 Y116.747 E15.45612 ; infill G1 X108.909 Y116.747 E15.47511 ; infill G1 X110.478 Y115.178 E15.49995 ; infill G1 X110.267 Y115.866 F9000 ; move to first infill point ;WIDTH:0.361032 G1 F3150 G1 X110.267 Y116.409 E15.50537 ; infill G1 X109.724 Y116.409 E15.51079 ; infill G1 X110.141 Y115.993 E15.51666 ; infill G1 X109.596 Y109.213 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X109.514 Y109.449 E15.51946 ; infill G1 X109.321 Y109.741 E15.52338 ; infill G1 X109.163 Y109.867 E15.52564 ; infill G1 X108.926 Y109.972 E15.52854 ; infill G1 X108.311 Y110.147 E15.5357 ; infill G1 X108.956 Y110.147 E15.54292 ; infill G1 X109.206 Y110.185 E15.54575 ; infill G1 X109.392 Y110.264 E15.54801 ; infill G1 X109.707 Y110.548 E15.55276 ; infill G1 X109.905 Y110.989 E15.55817 ; infill G1 X109.89 Y109.039 E15.58 ; infill G1 X109.599 Y109.039 E15.58326 ; infill G1 X108.469 Y108.859 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X108.295 Y108.553 E15.5872 ; infill G1 X108.097 Y108.386 E15.5901 ; infill G1 X108.119 Y108.325 E15.59083 ; infill G1 X107.825 Y108.325 E15.59412 ; infill G1 X108.484 Y108.984 E15.60455 ; infill G1 X108.021 Y109.116 E15.60994 ; infill G1 X107.638 Y108.618 E15.61697 ; infill G1 X107.219 Y108.325 E15.62269 ; infill G1 X107.647 Y108.325 E15.62748 ; infill G1 X131.443 Y108.093 F9000 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.399999 G1 F3000 G1 X131.443 Y112.536 E15.67722 ; perimeter G1 X131.443 Y116.979 E15.72696 ; perimeter G1 X114.975 Y116.979 E15.91132 ; perimeter G1 X114.912 Y116.983 E15.91203 ; perimeter G1 X114.82 Y117.042 E15.91325 ; perimeter G1 X113.953 Y117.042 E15.92296 ; perimeter G1 X113.911 Y116.991 E15.9237 ; perimeter G1 X113.797 Y116.979 E15.92498 ; perimeter G1 X111.889 Y116.979 E15.94634 ; perimeter G1 X111.826 Y116.983 E15.94705 ; perimeter G1 X111.734 Y117.042 E15.94827 ; perimeter G1 X110.867 Y117.042 E15.95798 ; perimeter G1 X110.826 Y116.991 E15.95871 ; perimeter G1 X110.712 Y116.979 E15.95999 ; perimeter G1 X92.557 Y116.979 E16.16323 ; perimeter G1 X92.557 Y108.093 E16.26271 ; perimeter G1 X104.912 Y108.093 E16.40102 ; perimeter G1 X105.28 Y108.012 E16.40524 ; perimeter G1 X105.943 Y107.96 E16.41268 ; perimeter G1 X107.078 Y108.093 E16.42547 ; perimeter G1 X118.74 Y108.093 E16.55602 ; perimeter G1 X119.101 Y108.013 E16.56016 ; perimeter G1 X119.758 Y107.959 E16.56754 ; perimeter G1 X120.173 Y107.992 E16.5722 ; perimeter G1 X120.801 Y108.093 E16.57932 ; perimeter G1 X131.383 Y108.093 E16.69778 ; perimeter G1 X131.8 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter G1 F1500 G1 X131.8 Y112.536 E16.75151 ; perimeter G1 X131.8 Y117.336 E16.80524 ; perimeter G1 X114.975 Y117.336 E16.99359 ; perimeter G1 X114.889 Y117.4 E16.99479 ; perimeter G1 X113.883 Y117.4 E17.00605 ; perimeter G1 X113.797 Y117.336 E17.00725 ; perimeter G1 X111.889 Y117.336 E17.02861 ; perimeter G1 X111.804 Y117.4 E17.0298 ; perimeter G1 X110.797 Y117.4 E17.04107 ; perimeter G1 X110.712 Y117.336 E17.04226 ; perimeter G1 X92.2 Y117.336 E17.2495 ; perimeter G1 X92.2 Y107.736 E17.35697 ; perimeter G1 X104.912 Y107.736 E17.49928 ; perimeter G1 X105.219 Y107.659 E17.50282 ; perimeter G1 X105.947 Y107.601 E17.511 ; perimeter G1 X107.078 Y107.736 E17.52375 ; perimeter G1 X118.74 Y107.736 E17.6543 ; perimeter G1 X119.038 Y107.66 E17.65774 ; perimeter G1 X119.758 Y107.601 E17.66583 ; perimeter G1 X120.201 Y107.636 E17.6708 ; perimeter G1 X120.801 Y107.736 E17.67761 ; perimeter G1 X131.74 Y107.736 E17.80007 ; perimeter G1 X131.799 Y108.132 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:1.8 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 8; ;LAYER:8 G1 E11.30007 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z1.8 F9000 ; simple layer change G1 X122.614 Y109.712 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X122.744 Y110.345 E6.50723 ; infill G1 X122.795 Y111.212 E6.51695 ; infill G1 X122.76 Y111.839 E6.52398 ; infill G1 X121.906 Y112.694 E6.53751 ; infill G1 X121.968 Y112.368 E6.54122 ; infill G1 X122.557 Y112.957 E6.55054 ; infill G1 X122.377 Y113.433 E6.55624 ; infill G1 X122.066 Y113.905 E6.56257 ; infill G1 X121.666 Y114.263 E6.56858 ; infill G1 X121.161 Y114.522 E6.57493 ; infill G1 X120.539 Y114.682 E6.58212 ; infill G1 X119.868 Y114.732 E6.58965 ; infill G1 X120.259 Y114.341 E6.59584 ; infill G1 X119.802 Y114.378 E6.60097 ; infill G1 X119.287 Y114.333 E6.60676 ; infill G1 X118.762 Y114.168 E6.61292 ; infill G1 X118.391 Y113.936 E6.61782 ; infill G1 X118.06 Y113.579 E6.62327 ; infill G1 X117.802 Y113.09 E6.62946 ; infill G1 X117.643 Y112.552 E6.63574 ; infill G1 X117.551 Y111.944 E6.64262 ; infill G1 X117.519 Y111.203 E6.65092 ; infill G1 X117.646 Y109.87 E6.66591 ; infill G1 X117.81 Y109.326 E6.67227 ; infill G1 X118.024 Y108.901 E6.6776 ; infill G1 X118.238 Y108.639 E6.68139 ; infill G1 X117.925 Y108.325 E6.68635 ; infill G1 X117.723 Y108.325 E6.68861 ; infill G1 X117.74 Y108.369 E6.68914 ; infill G1 X117.538 Y108.557 E6.69223 ; infill G1 X117.213 Y109.05 E6.69884 ; infill G1 X116.975 Y109.655 E6.70612 ; infill G1 X116.901 Y110.025 E6.71034 ; infill G1 X114.047 Y108.34 F9000 ; move to first infill point G1 F4200 G1 X114.725 Y108.325 E6.71793 ; infill G1 X114.725 Y109.775 E6.73416 ; infill G1 X114.047 Y110.453 E6.74489 ; infill G1 X114.047 Y114.547 E6.79072 ; infill G1 X114.725 Y115.225 E6.80145 ; infill G1 X114.725 Y113.083 E6.82543 ; infill G1 X118.243 Y113.394 F9000 ; move to first infill point ;TYPE:Solid infill ;WIDTH:0.38292 G1 F3150 G1 X118.534 Y113.706 E6.82998 ; infill ;WIDTH:0.399999 G1 X119.117 Y113.911 E6.8369 ; infill G1 X118.122 Y112.916 E6.85265 ; infill G1 X117.958 Y112.246 E6.86037 ; infill G1 X119.724 Y114.013 E6.88834 ; infill G1 X120.204 Y113.987 E6.89372 ; infill G1 X117.896 Y111.68 E6.93025 ; infill G1 X117.879 Y111.157 E6.93611 ; infill G1 X120.605 Y113.884 E6.97928 ; infill G1 X120.932 Y113.706 E6.98345 ; infill G1 X117.9 Y110.673 E7.03146 ; infill G1 X117.953 Y110.222 E7.03654 ; infill G1 X121.187 Y113.456 E7.08774 ; infill G1 X121.377 Y113.14 E7.09187 ; infill G1 X118.039 Y109.802 E7.14472 ; infill G1 X118.162 Y109.421 E7.1492 ; infill G1 X121.513 Y112.772 E7.20225 ; infill G1 X121.608 Y112.362 E7.20696 ; infill G1 X118.331 Y109.085 E7.25884 ; infill G1 X118.561 Y108.81 E7.26285 ; infill G1 X121.67 Y111.919 E7.31207 ; infill G1 X121.69 Y111.434 E7.3175 ; infill G1 X118.854 Y108.598 E7.3624 ; infill G1 X119.218 Y108.457 E7.36677 ; infill G1 X121.687 Y110.926 E7.40586 ; infill G1 X121.65 Y110.384 E7.41194 ; infill G1 X119.663 Y108.396 E7.44341 ; infill G1 X120.172 Y108.416 E7.44911 ; infill ;WIDTH:0.378068 G1 X120.646 Y108.548 E7.45428 ; infill G1 X121.014 Y108.785 E7.45888 ; infill G1 X121.255 Y109.053 E7.46267 ; infill ;WIDTH:0.364961 G1 X121.459 Y109.451 E7.46719 ; infill G1 X121.566 Y109.82 E7.47107 ; infill G1 X121.307 Y109.561 E7.47477 ; infill ;WIDTH:0.378068 G1 X120.298 Y108.543 E7.48983 ; infill G1 X111.996 Y108.504 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X111.996 Y116.75 E7.58214 ; infill G1 X113.69 Y116.747 E7.6011 ; infill G1 X113.69 Y108.325 E7.69538 ; infill G1 X111.996 Y108.325 E7.71434 ; infill G1 X112.354 Y108.682 E7.72 ; infill G1 X113.333 Y108.682 E7.73096 ; infill G1 X113.333 Y116.391 E7.81726 ; infill G1 X112.354 Y116.393 E7.82822 ; infill G1 X112.354 Y108.861 E7.91254 ; infill G1 X112.688 Y109.017 E7.91667 ; infill ;WIDTH:0.354153 G1 X112.999 Y109.017 E7.9197 ; infill G1 X112.999 Y116.057 E7.98839 ; infill G1 X112.688 Y116.058 E7.99142 ; infill G1 X112.688 Y109.195 E8.05839 ; infill G1 X110.962 Y109.319 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X110.962 Y111.462 E8.08238 ; infill G1 X111.639 Y112.139 E8.0931 ; infill G1 X111.639 Y112.861 E8.10118 ; infill G1 X110.962 Y113.538 E8.1119 ; infill G1 X110.962 Y115.681 E8.13589 ; infill G1 X115.123 Y116.637 F9000 ; move to first infill point ;TYPE:Solid infill ;WIDTH:0.511856 G1 F3150 G1 X115.082 Y116.679 E8.13675 ; infill G1 X115.097 Y116.735 E8.1376 ; infill G1 X115.153 Y116.75 E8.13845 ; infill G1 X115.195 Y116.709 E8.13931 ; infill G1 X115.18 Y116.652 E8.14018 ; infill ;WIDTH:0.399999 G1 X115.775 Y116.747 E8.14693 ; infill G1 X115.082 Y116.054 E8.1579 ; infill G1 X114.911 Y115.847 E8.16091 ; infill ;WIDTH:0.621106 G1 X114.86 Y115.898 E8.16222 ; infill G1 X114.879 Y115.968 E8.16353 ; infill G1 X114.949 Y115.986 E8.16484 ; infill G1 X115 Y115.935 E8.16615 ; infill G1 X114.981 Y115.866 E8.16745 ; infill G1 X115.001 Y115.802 E8.16867 ; infill ;WIDTH:0.576885 G1 X115.021 Y115.739 E8.16978 ; infill ;WIDTH:0.532664 G1 X115.042 Y115.675 E8.17081 ; infill ;WIDTH:0.488442 G1 X115.062 Y115.612 E8.17173 ; infill ;WIDTH:0.444221 G1 X115.082 Y115.549 E8.17256 ; infill ;WIDTH:0.399999 G1 X116.28 Y116.747 E8.19153 ; infill G1 X116.785 Y116.747 E8.19718 ; infill G1 X115.082 Y115.044 E8.22414 ; infill G1 X115.082 Y114.539 E8.22979 ; infill G1 X117.29 Y116.747 E8.26475 ; infill G1 X117.795 Y116.747 E8.2704 ; infill G1 X115.082 Y114.034 E8.31335 ; infill G1 X115.082 Y113.529 E8.319 ; infill G1 X118.3 Y116.747 E8.36995 ; infill G1 X118.805 Y116.747 E8.3756 ; infill G1 X115.082 Y113.024 E8.43454 ; infill G1 X115.082 Y112.519 E8.44019 ; infill G1 X119.31 Y116.747 E8.50713 ; infill G1 X120.057 Y116.81 F9000 ; move to first infill point ;WIDTH:0.38292 G1 F3150 G1 X120.038 Y116.882 E8.50792 ; infill G1 X120.109 Y116.863 E8.5087 ; infill G1 X120.098 Y116.821 E8.50916 ; infill ;WIDTH:0.399999 G1 X119.815 Y116.747 E8.51243 ; infill G1 X115.082 Y112.014 E8.58736 ; infill G1 X115.082 Y111.509 E8.59301 ; infill G1 X116.804 Y113.23 E8.62026 ; infill G1 X116.978 Y113.442 E8.62333 ; infill ;WIDTH:0.38292 G1 X116.959 Y113.513 E8.62411 ; infill G1 X117.03 Y113.494 E8.62489 ; infill G1 X117.019 Y113.453 E8.62534 ; infill G1 X116.739 Y112.727 F9000 ; move to first infill point G1 F3150 G1 X116.75 Y112.768 E8.62579 ; infill G1 X116.679 Y112.787 E8.62657 ; infill G1 X116.698 Y112.716 E8.62735 ; infill ;WIDTH:0.399999 G1 X116.583 Y112.504 E8.63005 ; infill G1 X115.082 Y111.004 E8.65381 ; infill G1 X115.082 Y108.325 E8.6838 ; infill G1 X117.268 Y108.325 E8.70827 ; infill G1 X116.884 Y108.911 E8.71611 ; infill G1 X116.625 Y109.587 E8.72421 ; infill G1 X116.473 Y110.365 E8.73308 ; infill G1 X116.426 Y111.237 E8.74286 ; infill G1 X116.511 Y111.928 E8.75065 ; infill G1 X115.245 Y110.662 E8.77069 ; infill G1 X115.439 Y110.373 E8.77459 ; infill G1 X115.439 Y108.682 E8.79352 ; infill G1 X116.602 Y108.682 E8.80654 ; infill G1 X116.275 Y109.518 E8.81659 ; infill G1 X116.117 Y110.344 E8.826 ; infill G1 X116.079 Y110.991 E8.83326 ; infill G1 X115.568 Y110.497 E8.84122 ; infill G1 X115.958 Y109.099 F9000 ; move to first infill point ;WIDTH:0.621106 G1 F3150 G1 X115.977 Y109.169 E8.84253 ; infill G1 X115.926 Y109.22 E8.84384 ; infill G1 X115.856 Y109.201 E8.84515 ; infill G1 X115.837 Y109.131 E8.84646 ; infill G1 X115.888 Y109.08 E8.84777 ; infill G1 X118.183 Y114.655 F9000 ; move to first infill point ;WIDTH:0.38292 G1 F3150 G1 X118.164 Y114.726 E8.84855 ; infill G1 X118.235 Y114.707 E8.84933 ; infill G1 X118.224 Y114.666 E8.84978 ; infill ;WIDTH:0.399999 G1 X120.32 Y116.747 E8.88284 ; infill ;WIDTH:0.436839 G1 X120.408 Y116.804 E8.88413 ; infill ;WIDTH:0.473678 G1 X120.495 Y116.861 E8.88553 ; infill G1 X120.509 Y116.913 E8.88626 ; infill G1 X120.471 Y116.951 E8.88699 ; infill G1 X120.419 Y116.937 E8.88772 ; infill G1 X120.405 Y116.885 E8.88845 ; infill G1 X120.443 Y116.847 E8.88918 ; infill ;WIDTH:0.399999 G1 X120.825 Y116.747 E8.8936 ; infill G1 X119.051 Y114.973 E8.92169 ; infill G1 X119.824 Y115.093 E8.93045 ; infill G1 X120.62 Y115.03 E8.93939 ; infill G1 X121.314 Y114.845 E8.94743 ; infill G1 X121.895 Y114.537 E8.95479 ; infill G1 X122.294 Y114.176 E8.96081 ; infill G1 X124.865 Y116.747 E9.00151 ; infill G1 X121.204 Y116.747 E9.04249 ; infill G1 X121.204 Y116.621 E9.0439 ; infill G1 X119.784 Y115.201 E9.06638 ; infill G1 X120.489 Y115.401 F9000 ; move to first infill point G1 F3150 G1 X120.71 Y115.376 E9.06887 ; infill G1 X121.478 Y115.162 E9.0778 ; infill G1 X122.022 Y114.88 E9.08466 ; infill G1 X122.282 Y114.669 E9.08841 ; infill G1 X124.003 Y116.39 E9.11566 ; infill G1 X122.19 Y116.39 E9.13596 ; infill G1 X121.457 Y116.368 E9.14417 ; infill G1 X120.616 Y115.527 E9.15748 ; infill G1 X121.208 Y115.615 E9.16418 ; infill G1 X121.643 Y115.479 E9.16928 ; infill G1 X122.257 Y115.148 E9.17709 ; infill G1 X123.141 Y116.033 E9.19109 ; infill G1 X121.626 Y116.033 E9.20805 ; infill G1 X121.335 Y115.741 E9.21266 ; infill G1 X122.176 Y115.587 F9000 ; move to first infill point ;WIDTH:0.473678 G1 F3150 G1 X122.138 Y115.625 E9.21339 ; infill G1 X122.152 Y115.677 E9.21412 ; infill G1 X122.204 Y115.691 E9.21485 ; infill G1 X122.242 Y115.653 E9.21558 ; infill G1 X122.228 Y115.601 E9.21631 ; infill G1 X122.507 Y113.884 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X125.496 Y116.858 E9.26351 ; infill ;WIDTH:0.38292 G1 X125.477 Y116.929 E9.26429 ; infill G1 X125.548 Y116.91 E9.26507 ; infill G1 X125.537 Y116.869 E9.26552 ; infill ;WIDTH:0.399999 G1 X125.875 Y116.747 E9.26954 ; infill G1 X122.704 Y113.576 E9.31974 ; infill G1 X122.843 Y113.21 E9.32412 ; infill G1 X126.38 Y116.747 E9.38012 ; infill G1 X126.885 Y116.747 E9.38577 ; infill G1 X122.969 Y112.831 E9.44777 ; infill G1 X123.05 Y112.407 E9.4526 ; infill G1 X127.39 Y116.747 E9.52131 ; infill G1 X127.895 Y116.747 E9.52696 ; infill G1 X123.111 Y111.963 E9.6027 ; infill G1 X123.137 Y111.484 E9.60807 ; infill G1 X128.4 Y116.747 E9.69139 ; infill G1 X128.905 Y116.747 E9.69704 ; infill G1 X123.139 Y110.981 E9.78833 ; infill G1 X123.107 Y110.444 E9.79435 ; infill G1 X129.41 Y116.747 E9.89414 ; infill G1 X129.915 Y116.747 E9.89979 ; infill G1 X123.004 Y109.836 E10.0092 ; infill G1 X122.194 Y108.244 F9000 ; move to first infill point ;WIDTH:0.38292 G1 F3150 G1 X122.167 Y108.288 E10.00975 ; infill G1 X122.204 Y108.371 E10.01072 ; infill G1 X122.603 Y108.847 E10.01734 ; infill ;WIDTH:0.399999 G1 X122.772 Y109.099 E10.02074 ; infill G1 X130.42 Y116.747 E10.14182 ; infill G1 X131.317 Y116.793 F9000 ; move to first infill point ;WIDTH:0.38292 G1 F3150 G1 X131.328 Y116.834 E10.14227 ; infill G1 X131.256 Y116.853 E10.14306 ; infill G1 X131.275 Y116.782 E10.14384 ; infill ;WIDTH:0.399999 G1 X130.925 Y116.747 E10.14778 ; infill G1 X122.503 Y108.325 E10.28112 ; infill G1 X123.008 Y108.325 E10.28677 ; infill G1 X131.211 Y116.528 E10.41664 ; infill G1 X131.211 Y116.023 E10.42229 ; infill G1 X123.513 Y108.325 E10.54416 ; infill G1 X124.018 Y108.325 E10.54981 ; infill G1 X131.211 Y115.518 E10.66369 ; infill G1 X131.211 Y115.013 E10.66934 ; infill G1 X124.523 Y108.325 E10.77522 ; infill G1 X125.028 Y108.325 E10.78087 ; infill G1 X131.211 Y114.508 E10.87876 ; infill G1 X131.211 Y114.003 E10.88441 ; infill G1 X125.533 Y108.325 E10.9743 ; infill G1 X126.038 Y108.325 E10.97995 ; infill G1 X131.211 Y113.498 E11.06185 ; infill G1 X131.211 Y112.993 E11.0675 ; infill G1 X126.543 Y108.325 E11.1414 ; infill G1 X127.048 Y108.325 E11.14705 ; infill G1 X131.211 Y112.488 E11.21296 ; infill G1 X131.211 Y111.983 E11.21861 ; infill G1 X127.553 Y108.325 E11.27652 ; infill G1 X128.058 Y108.325 E11.28217 ; infill G1 X131.211 Y111.478 E11.33209 ; infill G1 X131.211 Y110.973 E11.33774 ; infill G1 X128.563 Y108.325 E11.37966 ; infill G1 X129.068 Y108.325 E11.38531 ; infill G1 X131.211 Y110.468 E11.41924 ; infill G1 X129.699 Y108.452 F9000 ; move to first infill point G1 F3150 G1 X131.211 Y109.963 E11.44317 ; infill G1 X131.211 Y108.325 E11.46151 ; infill G1 X129.573 Y108.325 E11.47985 ; infill G1 X130.712 Y108.732 F9000 ; move to first infill point ;WIDTH:0.645176 G1 F3150 G1 X130.658 Y108.785 E11.48128 ; infill G1 X130.678 Y108.858 E11.48271 ; infill G1 X130.751 Y108.878 E11.48414 ; infill G1 X130.804 Y108.824 E11.48557 ; infill G1 X130.784 Y108.752 E11.48698 ; infill G1 X108.469 Y108.859 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X108.295 Y108.553 E11.49092 ; infill G1 X108.097 Y108.386 E11.49382 ; infill G1 X108.119 Y108.325 E11.49455 ; infill G1 X107.825 Y108.325 E11.49784 ; infill G1 X108.484 Y108.984 E11.50827 ; infill G1 X108.021 Y109.116 E11.51366 ; infill G1 X107.638 Y108.618 E11.52069 ; infill G1 X107.219 Y108.325 E11.52641 ; infill G1 X107.647 Y108.325 E11.5312 ; infill G1 X105.445 Y111.218 F9000 ; move to first infill point G1 F4200 G1 X103.85 Y111.218 E11.54906 ; infill G1 X103.628 Y110.984 E11.55267 ; infill G1 X103.64 Y110.76 E11.55518 ; infill G1 X102.907 Y111.493 E11.56678 ; infill G1 X102.943 Y112.071 E11.57326 ; infill G1 X103.093 Y112.777 E11.58134 ; infill G1 X103.452 Y113.535 E11.59073 ; infill G1 X104.053 Y112.358 F9000 ; move to first infill point ;TYPE:Solid infill ;WIDTH:0.399999 G1 F3150 G1 X104.022 Y111.969 E11.5951 ; infill G1 X107.77 Y111.975 E11.63706 ; infill G1 X107.714 Y112.403 E11.64189 ; infill G1 X107.602 Y112.822 E11.64675 ; infill G1 X107.454 Y113.166 E11.65094 ; infill G1 X107.279 Y113.435 E11.65453 ; infill G1 X107.044 Y113.667 E11.65823 ; infill G1 X106.746 Y113.848 E11.66213 ; infill G1 X106.379 Y113.966 E11.66645 ; infill G1 X105.96 Y114.014 E11.67117 ; infill G1 X105.571 Y113.992 E11.67553 ; infill G1 X105.219 Y113.907 E11.67958 ; infill G1 X104.898 Y113.752 E11.68357 ; infill G1 X104.599 Y113.508 E11.68789 ; infill G1 X104.355 Y113.19 E11.69238 ; infill G1 X104.172 Y112.807 E11.69713 ; infill G1 X104.099 Y112.53 E11.70034 ; infill G1 X104.457 Y112.499 E11.70436 ; infill G1 X104.499 Y112.665 E11.70628 ; infill G1 X104.648 Y112.986 E11.71024 ; infill G1 X104.843 Y113.247 E11.71389 ; infill G1 X105.075 Y113.442 E11.71728 ; infill G1 X105.474 Y113.611 E11.72213 ; infill G1 X105.934 Y113.658 E11.72731 ; infill G1 X106.458 Y113.577 E11.73325 ; infill G1 X106.758 Y113.441 E11.73694 ; infill G1 X106.99 Y113.224 E11.7405 ; infill G1 X107.24 Y112.776 E11.74624 ; infill G1 X107.365 Y112.326 E11.75147 ; infill G1 X104.413 Y112.326 E11.78452 ; infill G1 X104.995 Y112.747 F9000 ; move to first infill point ;WIDTH:0.521272 G1 F3150 G1 X105.507 Y112.743 E11.7922 ; infill ;WIDTH:0.522591 G1 X106.795 Y112.744 E11.81157 ; infill G1 X106.75 Y112.842 E11.81319 ; infill G1 X106.526 Y113.09 E11.81822 ; infill G1 X106.141 Y113.223 E11.82435 ; infill G1 X105.618 Y113.218 E11.83222 ; infill ;WIDTH:0.521272 G1 X105.264 Y113.069 E11.83798 ; infill G1 X105.109 Y112.884 E11.8416 ; infill G1 X101.023 Y116.635 F9000 ; move to first infill point ;WIDTH:0.51025 G1 F3150 G1 X100.981 Y116.677 E11.84247 ; infill G1 X100.997 Y116.733 E11.84332 ; infill G1 X101.053 Y116.748 E11.84417 ; infill G1 X101.094 Y116.707 E11.84502 ; infill G1 X101.079 Y116.651 E11.84587 ; infill ;WIDTH:0.399999 G1 X100.983 Y116.054 E11.85264 ; infill G1 X101.802 Y116.858 E11.86549 ; infill ;WIDTH:0.38292 G1 X101.783 Y116.929 E11.86627 ; infill G1 X101.854 Y116.91 E11.86705 ; infill G1 X101.843 Y116.869 E11.8675 ; infill ;WIDTH:0.399999 G1 X102.181 Y116.747 E11.87152 ; infill G1 X100.983 Y115.549 E11.89049 ; infill G1 X100.983 Y115.044 E11.89614 ; infill G1 X102.686 Y116.747 E11.9231 ; infill G1 X103.191 Y116.747 E11.92875 ; infill G1 X100.983 Y114.539 E11.96371 ; infill G1 X100.983 Y114.034 E11.96936 ; infill G1 X103.696 Y116.747 E12.01231 ; infill G1 X104.201 Y116.747 E12.01796 ; infill G1 X100.983 Y113.529 E12.06891 ; infill G1 X100.983 Y113.024 E12.07456 ; infill G1 X104.706 Y116.747 E12.1335 ; infill G1 X105.211 Y116.747 E12.13915 ; infill G1 X100.983 Y112.519 E12.20609 ; infill G1 X100.983 Y112.014 E12.21174 ; infill G1 X105.716 Y116.747 E12.28667 ; infill G1 X105.957 Y116.81 E12.28946 ; infill ;WIDTH:0.38292 G1 X105.938 Y116.882 E12.29025 ; infill G1 X106.009 Y116.863 E12.29103 ; infill G1 X105.998 Y116.821 E12.29149 ; infill ;WIDTH:0.399999 G1 X106.346 Y116.854 E12.2954 ; infill ;WIDTH:0.41975 G1 X106.325 Y116.933 E12.29637 ; infill G1 X106.403 Y116.912 E12.29732 ; infill G1 X106.391 Y116.866 E12.29788 ; infill G1 X103.89 Y114.474 F9000 ; move to first infill point ;WIDTH:0.38292 G1 F3150 G1 X103.249 Y113.816 E12.30767 ; infill ;WIDTH:0.399999 G1 X103.038 Y113.564 E12.31135 ; infill G1 X100.983 Y111.509 E12.34388 ; infill G1 X100.983 Y111.004 E12.34953 ; infill G1 X102.721 Y112.742 E12.37705 ; infill G1 X102.865 Y112.951 E12.37989 ; infill ;WIDTH:0.38292 G1 X102.846 Y113.022 E12.38067 ; infill G1 X102.917 Y113.003 E12.38145 ; infill G1 X102.906 Y112.962 E12.3819 ; infill G1 X101.468 Y110.497 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X102.183 Y111.194 E12.39308 ; infill G1 X102.229 Y110.36 E12.40243 ; infill G1 X102.393 Y109.515 E12.41207 ; infill G1 X102.726 Y108.682 E12.42211 ; infill G1 X101.34 Y108.682 E12.43763 ; infill G1 X101.34 Y110.373 E12.45656 ; infill G1 X101.146 Y110.662 E12.46046 ; infill G1 X102.59 Y112.106 E12.48332 ; infill G1 X102.536 Y111.287 E12.49251 ; infill G1 X102.586 Y110.38 E12.50268 ; infill G1 X102.743 Y109.585 E12.51175 ; infill G1 X103.012 Y108.9 E12.51999 ; infill G1 X103.4 Y108.325 E12.52776 ; infill G1 X100.983 Y108.325 E12.55482 ; infill G1 X100.983 Y110.625 E12.58057 ; infill G1 X101.707 Y110.199 F9000 ; move to first infill point ;WIDTH:0.420394 G1 F3150 G1 X101.707 Y109.05 E12.59417 ; infill G1 X102.173 Y109.05 E12.59968 ; infill G1 X102.033 Y109.443 E12.60462 ; infill G1 X101.863 Y110.34 E12.61542 ; infill G1 X101.839 Y110.319 E12.6158 ; infill G1 X104.143 Y114.669 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X106.221 Y116.747 E12.6487 ; infill G1 X106.726 Y116.747 E12.65435 ; infill G1 X104.962 Y114.983 E12.68228 ; infill G1 X104.739 Y114.805 E12.68547 ; infill ;WIDTH:0.38292 G1 X104.75 Y114.846 E12.68592 ; infill G1 X104.679 Y114.865 E12.6867 ; infill G1 X104.698 Y114.794 E12.68748 ; infill G1 X104.19 Y110.861 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X108.951 Y110.861 E12.74078 ; infill G1 X109.084 Y110.921 E12.74241 ; infill G1 X109.216 Y111.11 E12.74499 ; infill G1 X109.217 Y111.162 E12.74557 ; infill G1 X109.023 Y112.797 E12.764 ; infill G1 X108.424 Y114.035 E12.7794 ; infill G1 X108.323 Y114.143 E12.78106 ; infill G1 X107.399 Y114.812 E12.79383 ; infill G1 X107.293 Y114.856 E12.79511 ; infill G1 X105.938 Y115.09 E12.8105 ; infill G1 X105.549 Y115.065 E12.81486 ; infill G1 X107.105 Y116.621 E12.83949 ; infill G1 X107.105 Y116.747 E12.8409 ; infill G1 X110.605 Y116.747 E12.88008 ; infill G1 X110.605 Y108.325 E12.97436 ; infill G1 X108.567 Y108.325 E12.99717 ; infill G1 X108.897 Y108.887 E13.00447 ; infill G1 X108.907 Y109.044 E13.00623 ; infill G1 X108.782 Y109.263 E13.00905 ; infill G1 X108.041 Y109.482 E13.0177 ; infill G1 X107.917 Y109.472 E13.01909 ; infill G1 X107.738 Y109.355 E13.02148 ; infill G1 X107.47 Y108.963 E13.0268 ; infill G1 X107.056 Y108.658 E13.03256 ; infill G1 X106.751 Y108.517 E13.03632 ; infill G1 X106.074 Y108.416 E13.04398 ; infill G1 X105.505 Y108.442 E13.05036 ; infill G1 X105.112 Y108.563 E13.05496 ; infill G1 X104.76 Y108.778 E13.05958 ; infill G1 X104.444 Y109.141 E13.06497 ; infill G1 X104.249 Y109.492 E13.06947 ; infill G1 X104.11 Y109.897 E13.07426 ; infill G1 X104.022 Y110.371 E13.07966 ; infill G1 X104.011 Y110.861 E13.08515 ; infill G1 X104.372 Y110.504 E13.09083 ; infill G1 X104.461 Y109.966 E13.09693 ; infill G1 X104.641 Y109.5 E13.10252 ; infill G1 X104.913 Y109.132 E13.10764 ; infill G1 X105.17 Y108.946 E13.11119 ; infill G1 X105.574 Y108.795 E13.11602 ; infill G1 X106.035 Y108.771 E13.12119 ; infill G1 X106.671 Y108.867 E13.12839 ; infill G1 X107.149 Y109.143 E13.13457 ; infill G1 X107.432 Y109.538 E13.14001 ; infill G1 X107.664 Y109.748 E13.14351 ; infill ;WIDTH:0.437707 G1 X107.746 Y109.791 E13.14466 ; infill ;WIDTH:0.475415 G1 X107.828 Y109.834 E13.14592 ; infill ;WIDTH:0.513123 G1 X107.91 Y109.878 E13.14729 ; infill ;WIDTH:0.550831 G1 X107.992 Y109.921 E13.14876 ; infill G1 X108.155 Y109.883 E13.15143 ; infill ;WIDTH:0.521377 G1 X108.428 Y109.777 E13.15582 ; infill ;WIDTH:0.480918 G1 X108.7 Y109.671 E13.15983 ; infill ;WIDTH:0.440459 G1 X108.973 Y109.565 E13.16348 ; infill ;WIDTH:0.399999 G1 X109.183 Y109.314 E13.16714 ; infill G1 X109.268 Y109.081 E13.16992 ; infill G1 X109.191 Y108.682 E13.17447 ; infill G1 X110.247 Y108.682 E13.18629 ; infill G1 X110.247 Y116.39 E13.27258 ; infill G1 X108.026 Y116.39 E13.29744 ; infill G1 X107.357 Y116.368 E13.30493 ; infill G1 X106.367 Y115.378 E13.3206 ; infill G1 X107.354 Y115.208 E13.33181 ; infill G1 X107.609 Y115.101 E13.33491 ; infill G1 X108.533 Y114.433 E13.34767 ; infill G1 X108.744 Y114.193 E13.35125 ; infill G1 X109.326 Y113.013 E13.36598 ; infill G1 X109.378 Y112.839 E13.36801 ; infill G1 X109.572 Y111.204 E13.38644 ; infill G1 X109.567 Y111.048 E13.38819 ; infill G1 X109.44 Y110.785 E13.39146 ; infill G1 X109.216 Y110.575 E13.3949 ; infill G1 X108.95 Y110.504 E13.39798 ; infill ;WIDTH:0.437707 G1 X108.711 Y110.485 E13.40095 ; infill ;WIDTH:0.475415 G1 X108.471 Y110.467 E13.40421 ; infill ;WIDTH:0.513123 G1 X108.232 Y110.448 E13.40774 ; infill ;WIDTH:0.550831 G1 X107.992 Y110.429 E13.41157 ; infill G1 X107.868 Y110.448 E13.41357 ; infill ;WIDTH:0.513123 G1 X107.744 Y110.467 E13.41542 ; infill ;WIDTH:0.475415 G1 X107.62 Y110.485 E13.41712 ; infill ;WIDTH:0.437707 G1 X107.496 Y110.504 E13.41867 ; infill ;WIDTH:0.399999 G1 X104.55 Y110.504 E13.45165 ; infill G1 X104.789 Y110.147 E13.45646 ; infill G1 X104.919 Y109.742 E13.46122 ; infill G1 X105.051 Y109.517 E13.46414 ; infill G1 X105.258 Y109.311 E13.46741 ; infill G1 X105.592 Y109.163 E13.4715 ; infill G1 X105.996 Y109.126 E13.47604 ; infill G1 X106.527 Y109.195 E13.48203 ; infill G1 X106.919 Y109.42 E13.48709 ; infill G1 X107.126 Y109.722 E13.49119 ; infill G1 X107.513 Y110.071 E13.49702 ; infill ;WIDTH:0.405073 G1 X107.674 Y110.14 E13.49901 ; infill G1 X107.496 Y110.147 E13.50103 ; infill ;WIDTH:0.399999 G1 X104.968 Y110.147 E13.52933 ; infill G1 X105.273 Y109.806 E13.53445 ; infill ;WIDTH:0.367771 G1 X105.424 Y109.609 E13.53698 ; infill G1 X105.725 Y109.482 E13.54031 ; infill G1 X106.391 Y109.505 E13.5471 ; infill ;WIDTH:0.352703 G1 X106.698 Y109.674 E13.5505 ; infill G1 X106.791 Y109.814 E13.55213 ; infill G1 X106.657 Y109.814 E13.55343 ; infill ;WIDTH:0.376615 G1 X105.451 Y109.805 E13.56605 ; infill G1 X107.107 Y115.613 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X107.551 Y115.526 E13.57111 ; infill G1 X107.818 Y115.39 E13.57446 ; infill G1 X108.742 Y114.722 E13.58722 ; infill G1 X108.921 Y114.561 E13.58992 ; infill G1 X109.064 Y114.351 E13.59276 ; infill ;WIDTH:0.423282 G1 X109.657 Y113.176 E13.60845 ; infill ;WIDTH:0.468328 G1 X109.708 Y113.081 E13.60989 ; infill ;WIDTH:0.513374 G1 X109.76 Y112.985 E13.6115 ; infill ;WIDTH:0.55842 G1 X109.811 Y112.89 E13.61324 ; infill G1 X109.834 Y113.003 E13.6151 ; infill ;WIDTH:0.513374 G1 X109.856 Y113.115 E13.61678 ; infill ;WIDTH:0.468328 G1 X109.879 Y113.228 E13.61832 ; infill ;WIDTH:0.423282 G1 X109.89 Y114.543 E13.634 ; infill ;WIDTH:0.399999 G1 X109.89 Y116.033 E13.65068 ; infill G1 X107.527 Y116.033 E13.67713 ; infill G1 X107.233 Y115.739 E13.68178 ; infill G1 X108.033 Y115.676 F9000 ; move to first infill point G1 F3150 G1 X108.951 Y115.011 E13.69447 ; infill G1 X109.217 Y114.764 E13.69853 ; infill G1 X109.533 Y114.207 E13.7057 ; infill G1 X109.533 Y115.676 E13.72215 ; infill G1 X108.211 Y115.676 E13.73695 ; infill G1 X109.154 Y115.263 F9000 ; move to first infill point ;WIDTH:0.41975 G1 F3150 G1 X109.133 Y115.342 E13.73792 ; infill G1 X109.212 Y115.321 E13.73889 ; infill G1 X109.2 Y115.275 E13.73945 ; infill G1 X109.811 Y112.89 F9000 ; move to first infill point ;WIDTH:0.55842 G1 F3150 G1 X109.835 Y112.478 E13.74612 ; infill ;WIDTH:0.509808 G1 X109.86 Y112.067 E13.75215 ; infill ;WIDTH:0.461196 G1 X109.884 Y111.655 E13.75756 ; infill ;WIDTH:0.412584 G1 X109.908 Y111.244 E13.76233 ; infill ;WIDTH:0.371104 G1 X109.905 Y110.989 E13.76495 ; infill G1 X108.49 Y110.147 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X108.956 Y110.147 E13.77017 ; infill G1 X109.206 Y110.185 E13.773 ; infill G1 X109.392 Y110.264 E13.77526 ; infill G1 X109.707 Y110.548 E13.78001 ; infill G1 X109.905 Y110.989 E13.78542 ; infill G1 X109.89 Y109.039 E13.80725 ; infill G1 X109.599 Y109.039 E13.81051 ; infill G1 X109.618 Y109.15 E13.81177 ; infill G1 X109.514 Y109.449 E13.81531 ; infill G1 X109.321 Y109.741 E13.81923 ; infill G1 X109.163 Y109.867 E13.82149 ; infill G1 X108.926 Y109.972 E13.82439 ; infill G1 X108.311 Y110.147 E13.83155 ; infill G1 X99.365 Y112.236 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X99.653 Y112.236 E13.83477 ; infill G1 X99.873 Y112.016 E13.83825 ; infill G1 X99.873 Y110.473 E13.85552 ; infill G1 X100.626 Y111.225 E13.86743 ; infill G1 X100.626 Y113.775 E13.89598 ; infill G1 X99.873 Y114.527 E13.90789 ; infill G1 X99.873 Y112.998 E13.92501 ; infill G1 X99.653 Y112.778 E13.92849 ; infill G1 X94.383 Y112.778 E13.98749 ; infill G1 X94.163 Y112.998 E13.99097 ; infill G1 X94.163 Y114.863 E14.01185 ; infill G1 X93.411 Y114.11 E14.02376 ; infill G1 X93.411 Y110.89 E14.05981 ; infill G1 X94.163 Y110.137 E14.07172 ; infill G1 X94.163 Y112.016 E14.09275 ; infill G1 X94.35 Y112.203 E14.09571 ; infill G1 X94.52 Y109.269 F9000 ; move to first infill point ;TYPE:Solid infill ;WIDTH:0.399999 G1 F3150 G1 X94.52 Y111.868 E14.12481 ; infill G1 X97.308 Y111.879 E14.15602 ; infill G1 X94.52 Y109.09 E14.20017 ; infill G1 X94.52 Y108.585 E14.20582 ; infill G1 X97.939 Y111.99 E14.25984 ; infill ;WIDTH:0.38292 G1 X97.92 Y112.061 E14.26062 ; infill G1 X97.991 Y112.042 E14.2614 ; infill G1 X97.98 Y112.001 E14.26185 ; infill ;WIDTH:0.399999 G1 X98.318 Y111.879 E14.26587 ; infill G1 X94.765 Y108.325 E14.32213 ; infill G1 X94.476 Y108.221 E14.32557 ; infill ;WIDTH:0.38292 G1 X94.487 Y108.262 E14.32602 ; infill G1 X94.416 Y108.281 E14.3268 ; infill G1 X94.435 Y108.21 E14.32758 ; infill G1 X95.27 Y108.325 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X98.823 Y111.879 E14.38384 ; infill G1 X99.64 Y111.877 F9000 ; move to first infill point ;WIDTH:0.38292 G1 F3150 G1 X99.651 Y111.918 E14.38429 ; infill G1 X99.58 Y111.937 E14.38507 ; infill G1 X99.599 Y111.866 E14.38585 ; infill ;WIDTH:0.399999 G1 X99.328 Y111.879 E14.38889 ; infill G1 X95.775 Y108.325 E14.44515 ; infill G1 X96.28 Y108.325 E14.4508 ; infill G1 X99.516 Y111.561 E14.50203 ; infill G1 X99.516 Y111.056 E14.50768 ; infill G1 X96.785 Y108.325 E14.55092 ; infill G1 X97.29 Y108.325 E14.55657 ; infill G1 X99.516 Y110.551 E14.59181 ; infill G1 X97.921 Y108.452 F9000 ; move to first infill point G1 F3150 G1 X99.516 Y110.046 E14.61705 ; infill G1 X99.516 Y108.325 E14.63632 ; infill G1 X97.795 Y108.325 E14.65559 ; infill G1 X98.619 Y108.667 F9000 ; move to first infill point ;WIDTH:0.368503 G1 F3150 G1 X99.175 Y108.667 E14.66127 ; infill G1 X99.175 Y109.222 E14.66694 ; infill G1 X98.745 Y108.793 E14.67314 ; infill G1 X94.877 Y109.953 F9000 ; move to first infill point ;WIDTH:0.399999 G1 F3150 G1 X96.446 Y111.522 E14.69798 ; infill G1 X94.877 Y111.522 E14.71554 ; infill G1 X94.877 Y110.131 E14.73111 ; infill G1 X95.319 Y110.994 F9000 ; move to first infill point ;WIDTH:0.604936 G1 F3150 G1 X95.269 Y111.044 E14.73236 ; infill G1 X95.287 Y111.112 E14.7336 ; infill G1 X95.355 Y111.13 E14.73484 ; infill G1 X95.405 Y111.08 E14.73609 ; infill G1 X95.387 Y111.012 E14.73733 ; infill G1 X94.56 Y116.635 F9000 ; move to first infill point ;WIDTH:0.51025 G1 F3150 G1 X94.519 Y116.677 E14.73819 ; infill G1 X94.534 Y116.733 E14.73904 ; infill G1 X94.59 Y116.748 E14.73989 ; infill G1 X94.632 Y116.707 E14.74075 ; infill G1 X94.617 Y116.651 E14.7416 ; infill ;WIDTH:0.399999 G1 X94.52 Y116.054 E14.74837 ; infill G1 X95.339 Y116.858 E14.76122 ; infill ;WIDTH:0.38292 G1 X95.32 Y116.929 E14.762 ; infill G1 X95.392 Y116.91 E14.76279 ; infill G1 X95.381 Y116.869 E14.76324 ; infill ;WIDTH:0.399999 G1 X95.718 Y116.747 E14.76725 ; infill G1 X94.52 Y115.549 E14.78622 ; infill G1 X94.52 Y115.044 E14.79187 ; infill G1 X96.223 Y116.747 E14.81883 ; infill G1 X96.728 Y116.747 E14.82448 ; infill G1 X94.52 Y114.539 E14.85944 ; infill G1 X94.52 Y114.034 E14.86509 ; infill G1 X97.233 Y116.747 E14.90804 ; infill G1 X97.738 Y116.747 E14.91369 ; infill G1 X94.52 Y113.529 E14.96464 ; infill G1 X94.398 Y113.059 E14.97008 ; infill ;WIDTH:0.38292 G1 X94.379 Y113.13 E14.97086 ; infill G1 X94.45 Y113.111 E14.97164 ; infill G1 X94.439 Y113.07 E14.97209 ; infill ;WIDTH:0.399999 G1 X94.631 Y113.135 E14.97436 ; infill G1 X98.243 Y116.747 E15.03154 ; infill G1 X98.748 Y116.747 E15.03719 ; infill G1 X95.136 Y113.135 E15.09437 ; infill G1 X95.641 Y113.135 E15.10002 ; infill G1 X99.253 Y116.747 E15.1572 ; infill G1 X99.579 Y116.78 E15.16087 ; infill ;WIDTH:0.38292 G1 X99.56 Y116.851 E15.16165 ; infill G1 X99.631 Y116.832 E15.16243 ; infill G1 X99.62 Y116.791 E15.16288 ; infill ;WIDTH:0.399999 G1 X99.516 Y116.505 E15.16629 ; infill G1 X96.146 Y113.135 E15.21964 ; infill G1 X96.651 Y113.135 E15.22529 ; infill G1 X99.516 Y116 E15.27065 ; infill G1 X99.516 Y115.495 E15.2763 ; infill G1 X97.156 Y113.135 E15.31366 ; infill G1 X97.661 Y113.135 E15.31931 ; infill G1 X99.516 Y114.99 E15.34868 ; infill G1 X98.293 Y113.261 F9000 ; move to first infill point G1 F3150 G1 X99.516 Y114.485 E15.36805 ; infill G1 X99.516 Y113.146 E15.38304 ; infill G1 X98.166 Y113.135 E15.39815 ; infill G1 X99.107 Y113.478 F9000 ; move to first infill point ;WIDTH:0.476534 G1 F3150 G1 X99.068 Y113.516 E15.39889 ; infill G1 X99.082 Y113.569 E15.39964 ; infill G1 X99.135 Y113.583 E15.40039 ; infill G1 X99.173 Y113.544 E15.40113 ; infill G1 X99.159 Y113.492 E15.40186 ; infill G1 X92.766 Y116.77 F9000 ; move to first infill point ;WIDTH:0.353675 G1 F3150 G1 X92.766 Y108.302 E15.48436 ; infill G1 X93.077 Y108.302 E15.48739 ; infill G1 X93.077 Y116.77 E15.56989 ; infill G1 X92.945 Y116.77 E15.57118 ; infill G1 X131.443 Y108.093 F9000 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.399999 G1 F3000 G1 X131.443 Y112.536 E15.62092 ; perimeter G1 X131.443 Y116.979 E15.67066 ; perimeter G1 X114.975 Y116.979 E15.85502 ; perimeter G1 X114.912 Y116.983 E15.85573 ; perimeter G1 X114.82 Y117.042 E15.85695 ; perimeter G1 X113.953 Y117.042 E15.86666 ; perimeter G1 X113.911 Y116.991 E15.8674 ; perimeter G1 X113.797 Y116.979 E15.86868 ; perimeter G1 X111.889 Y116.979 E15.89004 ; perimeter G1 X111.826 Y116.983 E15.89075 ; perimeter G1 X111.734 Y117.042 E15.89197 ; perimeter G1 X110.867 Y117.042 E15.90168 ; perimeter G1 X110.826 Y116.991 E15.90241 ; perimeter G1 X110.712 Y116.979 E15.90369 ; perimeter G1 X92.557 Y116.979 E16.10693 ; perimeter G1 X92.557 Y108.093 E16.20641 ; perimeter G1 X104.912 Y108.093 E16.34472 ; perimeter G1 X105.28 Y108.012 E16.34894 ; perimeter G1 X105.943 Y107.96 E16.35638 ; perimeter G1 X107.078 Y108.093 E16.36917 ; perimeter G1 X118.74 Y108.093 E16.49972 ; perimeter G1 X119.101 Y108.013 E16.50386 ; perimeter G1 X119.758 Y107.959 E16.51124 ; perimeter G1 X120.173 Y107.992 E16.5159 ; perimeter G1 X120.801 Y108.093 E16.52302 ; perimeter G1 X131.383 Y108.093 E16.64148 ; perimeter G1 X131.8 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter G1 F1500 G1 X131.8 Y112.536 E16.69521 ; perimeter G1 X131.8 Y117.336 E16.74894 ; perimeter G1 X114.975 Y117.336 E16.93729 ; perimeter G1 X114.889 Y117.4 E16.93849 ; perimeter G1 X113.883 Y117.4 E16.94975 ; perimeter G1 X113.797 Y117.336 E16.95095 ; perimeter G1 X111.889 Y117.336 E16.97231 ; perimeter G1 X111.804 Y117.4 E16.9735 ; perimeter G1 X110.797 Y117.4 E16.98477 ; perimeter G1 X110.712 Y117.336 E16.98596 ; perimeter G1 X92.2 Y117.336 E17.1932 ; perimeter G1 X92.2 Y107.736 E17.30067 ; perimeter G1 X104.912 Y107.736 E17.44298 ; perimeter G1 X105.219 Y107.659 E17.44652 ; perimeter G1 X105.947 Y107.601 E17.4547 ; perimeter G1 X107.078 Y107.736 E17.46745 ; perimeter G1 X118.74 Y107.736 E17.598 ; perimeter G1 X119.038 Y107.66 E17.60144 ; perimeter G1 X119.758 Y107.601 E17.60953 ; perimeter G1 X120.201 Y107.636 E17.6145 ; perimeter G1 X120.801 Y107.736 E17.62131 ; perimeter G1 X131.74 Y107.736 E17.74377 ; perimeter G1 X131.799 Y108.132 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:2 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 9; ;LAYER:9 G1 E11.24377 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z2 F9000 ; simple layer change G1 X130.641 Y116.908 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Top solid infill ;WIDTH:0.40395 G1 F1575 G1 X131.211 Y116.338 E6.50912 ; infill G1 X131.211 Y115.828 E6.51489 ; infill G1 X130.291 Y116.747 E6.52961 ; infill G1 X129.781 Y116.747 E6.53538 ; infill G1 X131.211 Y115.317 E6.55827 ; infill G1 X131.211 Y114.806 E6.56405 ; infill G1 X129.27 Y116.747 E6.59512 ; infill G1 X128.76 Y116.747 E6.60089 ; infill G1 X131.211 Y114.296 E6.64012 ; infill G1 X131.211 Y113.785 E6.6459 ; infill G1 X128.249 Y116.747 E6.69331 ; infill G1 X127.739 Y116.747 E6.69908 ; infill G1 X131.211 Y113.275 E6.75466 ; infill G1 X131.211 Y112.764 E6.76044 ; infill G1 X127.228 Y116.747 E6.8242 ; infill G1 X126.717 Y116.747 E6.82998 ; infill G1 X131.211 Y112.254 E6.90191 ; infill G1 X131.211 Y111.743 E6.90769 ; infill G1 X126.207 Y116.747 E6.98779 ; infill G1 X125.696 Y116.747 E6.99357 ; infill G1 X131.211 Y111.232 E7.08185 ; infill G1 X131.211 Y110.722 E7.08762 ; infill G1 X125.186 Y116.747 E7.18406 ; infill G1 X124.675 Y116.747 E7.18984 ; infill G1 X131.211 Y110.211 E7.29446 ; infill G1 X131.211 Y109.701 E7.30023 ; infill G1 X124.165 Y116.747 E7.41302 ; infill G1 X123.654 Y116.747 E7.4188 ; infill G1 X131.211 Y109.19 E7.53976 ; infill G1 X131.211 Y108.679 E7.54554 ; infill G1 X123.143 Y116.747 E7.67468 ; infill G1 X122.633 Y116.747 E7.68045 ; infill G1 X131.054 Y108.325 E7.81525 ; infill G1 X130.544 Y108.325 E7.82102 ; infill G1 X122.122 Y116.747 E7.95583 ; infill G1 X121.612 Y116.747 E7.9616 ; infill G1 X130.033 Y108.325 E8.0964 ; infill G1 X129.523 Y108.325 E8.10217 ; infill G1 X121.101 Y116.747 E8.23698 ; infill G1 X120.591 Y116.747 E8.24275 ; infill G1 X129.012 Y108.325 E8.37755 ; infill G1 X128.502 Y108.325 E8.38332 ; infill G1 X120.08 Y116.747 E8.51813 ; infill G1 X119.569 Y116.747 E8.52391 ; infill G1 X127.991 Y108.325 E8.65872 ; infill G1 X127.48 Y108.325 E8.6645 ; infill G1 X122.539 Y113.266 E8.74359 ; infill G1 X122.696 Y112.854 E8.74858 ; infill G1 X122.755 Y112.54 E8.7522 ; infill G1 X126.97 Y108.325 E8.81967 ; infill G1 X126.459 Y108.325 E8.82545 ; infill G1 X122.848 Y111.936 E8.88325 ; infill G1 X122.878 Y111.396 E8.88937 ; infill G1 X125.949 Y108.325 E8.93853 ; infill G1 X125.438 Y108.325 E8.94431 ; infill G1 X122.869 Y110.894 E8.98543 ; infill G1 X122.841 Y110.412 E8.99089 ; infill G1 X124.928 Y108.325 E9.0243 ; infill G1 X124.417 Y108.325 E9.03008 ; infill G1 X122.764 Y109.979 E9.05655 ; infill G1 X122.673 Y109.559 E9.06141 ; infill G1 X123.906 Y108.325 E9.08115 ; infill G1 X123.396 Y108.325 E9.08692 ; infill G1 X122.526 Y109.195 E9.10085 ; infill G1 X122.432 Y108.961 E9.1037 ; infill G1 X122.357 Y108.854 E9.10518 ; infill G1 X122.885 Y108.325 E9.11364 ; infill G1 X122.375 Y108.325 E9.11941 ; infill G1 X122.032 Y108.668 E9.1249 ; infill G1 X122.403 Y109.999 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X122.481 Y110.38 E9.12925 ; infill G1 X122.53 Y111.213 E9.13859 ; infill G1 X122.484 Y112.056 E9.14804 ; infill G1 X122.235 Y112.365 E9.15248 ; infill G1 X122.202 Y112.602 E9.15516 ; infill G1 X122.351 Y112.757 E9.15757 ; infill G1 X122.14 Y113.312 E9.16422 ; infill G1 X121.864 Y113.731 E9.16984 ; infill G1 X121.486 Y114.058 E9.17544 ; infill G1 X121.823 Y113.638 E9.18147 ; infill G1 E2.68147 F1500 ; retract G92 E0 ; reset extrusion distance G1 X118.03 Y108.43 F9000 ; move to first infill point G1 E6.5 F1500 ;  ; unretract G1 F4200 G1 X118.051 Y108.451 E6.50033 ; infill G1 X117.709 Y109.417 F9000 ; move to first infill point ;TYPE:Top solid infill ;WIDTH:0.40395 G1 F1575 G1 X118.807 Y108.319 E6.51791 ; infill G1 X119.142 Y108.242 E6.5218 ; infill G1 X119.417 Y108.22 E6.52492 ; infill G1 X117.734 Y109.902 E6.55185 ; infill G1 X117.644 Y110.503 E6.55873 ; infill G1 X119.941 Y108.206 E6.5955 ; infill G1 X120.41 Y108.248 E6.60083 ; infill G1 X117.619 Y111.038 E6.6455 ; infill G1 X117.626 Y111.542 E6.65121 ; infill G1 X120.818 Y108.351 E6.7023 ; infill G1 X121.132 Y108.547 E6.70649 ; infill G1 X117.657 Y112.022 E6.76211 ; infill G1 X117.724 Y112.466 E6.76719 ; infill G1 X121.378 Y108.812 E6.82568 ; infill G1 X121.461 Y108.907 E6.82711 ; infill G1 X121.575 Y109.125 E6.82989 ; infill G1 X117.832 Y112.868 E6.8898 ; infill G1 X117.894 Y113.072 E6.89221 ; infill G1 X117.977 Y113.233 E6.89426 ; infill G1 X121.727 Y109.483 E6.95429 ; infill G1 X121.841 Y109.873 E6.95889 ; infill G1 X118.165 Y113.557 E7.0178 ; infill G1 X118.406 Y113.825 E7.02188 ; infill G1 X121.908 Y110.324 E7.07793 ; infill G1 X121.946 Y110.796 E7.08329 ; infill G1 X118.597 Y114.145 E7.1369 ; infill G1 E.6369 F1500 ; retract G92 E0 ; reset extrusion distance G1 X118.898 Y116.908 F9000 ; move to first infill point G1 E6.5 F1500 ;  ; unretract G1 F1575 G1 X121.199 Y114.607 E6.53683 ; infill G1 X120.841 Y114.7 E6.54102 ; infill G1 X120.767 Y114.528 E6.54314 ; infill G1 X118.548 Y116.747 E6.57866 ; infill G1 X118.038 Y116.747 E6.58443 ; infill G1 X121.698 Y113.087 E6.64302 ; infill G1 X121.844 Y112.572 E6.64908 ; infill G1 X121.869 Y112.405 E6.65099 ; infill G1 X117.527 Y116.747 E6.72049 ; infill G1 X117.017 Y116.747 E6.72626 ; infill G1 X121.939 Y111.824 E6.80505 ; infill G1 X121.96 Y111.293 E6.81106 ; infill G1 X116.506 Y116.747 E6.89836 ; infill G1 X115.995 Y116.747 E6.90414 ; infill G1 X118.258 Y114.484 E6.94036 ; infill G1 X117.956 Y114.275 E6.94452 ; infill G1 X115.485 Y116.747 E6.98408 ; infill G1 X114.974 Y116.747 E6.98986 ; infill G1 X117.655 Y114.066 E7.03277 ; infill G1 X117.469 Y113.938 E7.03533 ; infill G1 X117.402 Y113.809 E7.03698 ; infill G1 X114.818 Y116.393 E7.07834 ; infill G1 X114.818 Y115.882 E7.08412 ; infill G1 X117.227 Y113.473 E7.12268 ; infill G1 X117.053 Y113.137 E7.12696 ; infill G1 X114.818 Y115.371 E7.16273 ; infill G1 X114.818 Y114.861 E7.1685 ; infill G1 X116.885 Y112.794 E7.20159 ; infill G1 X116.829 Y112.34 E7.20677 ; infill G1 X114.818 Y114.35 E7.23895 ; infill G1 X114.818 Y113.84 E7.24472 ; infill G1 X116.772 Y111.885 E7.27601 ; infill G1 X116.716 Y111.431 E7.28119 ; infill G1 X114.818 Y113.329 E7.31157 ; infill G1 X114.818 Y112.819 E7.31734 ; infill G1 X116.704 Y110.932 E7.34754 ; infill G1 X116.736 Y110.39 E7.35369 ; infill G1 X114.818 Y112.308 E7.38439 ; infill G1 X114.818 Y111.797 E7.39017 ; infill G1 X116.861 Y109.755 E7.42286 ; infill G1 X116.886 Y109.629 E7.42431 ; infill G1 X117.13 Y109.007 E7.43187 ; infill G1 X117.193 Y108.912 E7.43316 ; infill G1 X114.818 Y111.287 E7.47118 ; infill G1 X114.818 Y110.776 E7.47696 ; infill G1 X117.269 Y108.325 E7.51619 ; infill G1 X116.758 Y108.325 E7.52197 ; infill G1 X114.818 Y110.266 E7.55303 ; infill G1 X114.818 Y109.755 E7.55881 ; infill G1 X116.248 Y108.325 E7.5817 ; infill G1 X115.737 Y108.325 E7.58748 ; infill G1 X114.818 Y109.245 E7.6022 ; infill G1 X114.818 Y108.734 E7.60798 ; infill G1 X115.387 Y108.165 E7.61709 ; infill G1 X114.312 Y108.605 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X114.312 Y108.325 E7.62022 ; infill G1 X114.461 Y108.325 E7.62189 ; infill G1 X114.461 Y110.039 E7.64108 ; infill G1 X114.312 Y110.188 E7.64344 ; infill G1 X114.312 Y114.812 E7.6952 ; infill G1 X114.461 Y114.961 E7.69756 ; infill G1 X114.461 Y112.818 E7.72155 ; infill G1 E1.22155 F1500 ; retract G92 E0 ; reset extrusion distance G1 X113.388 Y116.908 F9000 ; move to first infill point G1 E6.5 F1500 ;  ; unretract ;TYPE:Top solid infill ;WIDTH:0.408394 G1 F1575 G1 X113.954 Y116.342 E6.50917 ; infill G1 X113.954 Y115.825 E6.51509 ; infill G1 X113.032 Y116.747 E6.53003 ; infill G1 X112.515 Y116.747 E6.53595 ; infill G1 X113.954 Y115.308 E6.55927 ; infill G1 X113.954 Y114.791 E6.56519 ; infill G1 X111.998 Y116.747 E6.59688 ; infill G1 X111.732 Y116.764 E6.59993 ; infill G1 X111.732 Y116.496 E6.603 ; infill G1 X113.954 Y114.274 E6.63901 ; infill G1 X113.954 Y113.757 E6.64493 ; infill G1 X111.732 Y115.979 E6.68094 ; infill G1 X111.732 Y115.463 E6.68685 ; infill G1 X113.954 Y113.24 E6.72286 ; infill G1 X113.954 Y112.724 E6.72877 ; infill G1 X111.732 Y114.946 E6.76478 ; infill G1 X111.732 Y114.429 E6.7707 ; infill G1 X113.954 Y112.207 E6.80671 ; infill G1 X113.954 Y111.69 E6.81263 ; infill G1 X111.732 Y113.912 E6.84864 ; infill G1 X111.732 Y113.395 E6.85456 ; infill G1 X113.954 Y111.173 E6.89057 ; infill G1 X113.954 Y110.656 E6.89649 ; infill G1 X111.732 Y112.878 E6.9325 ; infill G1 X111.732 Y112.361 E6.93842 ; infill G1 X113.954 Y110.139 E6.97443 ; infill G1 X113.954 Y109.622 E6.98035 ; infill G1 X111.732 Y111.845 E7.01636 ; infill G1 X111.732 Y111.328 E7.02228 ; infill G1 X113.954 Y109.106 E7.05829 ; infill G1 X113.954 Y108.589 E7.06421 ; infill G1 X111.732 Y110.811 E7.10022 ; infill G1 X111.732 Y110.294 E7.10614 ; infill G1 X113.701 Y108.325 E7.13805 ; infill G1 X113.184 Y108.325 E7.14397 ; infill G1 X111.732 Y109.777 E7.1675 ; infill G1 X111.732 Y109.26 E7.17342 ; infill G1 X112.667 Y108.325 E7.18857 ; infill G1 X112.15 Y108.325 E7.19449 ; infill G1 X111.572 Y108.904 E7.20386 ; infill G1 X111.226 Y109.583 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X111.226 Y111.726 E7.22785 ; infill G1 X111.375 Y111.875 E7.23021 ; infill G1 X111.375 Y113.125 E7.2442 ; infill G1 X111.226 Y113.274 E7.24656 ; infill G1 X111.226 Y115.417 E7.27055 ; infill G1 E.77055 F1500 ; retract G92 E0 ; reset extrusion distance G1 X110.316 Y116.908 F9000 ; move to first infill point G1 E6.5 F1500 ;  ; unretract ;TYPE:Top solid infill ;WIDTH:0.402037 G1 F1575 G1 X110.869 Y116.355 E6.5088 ; infill G1 X110.869 Y115.847 E6.51452 ; infill G1 X109.969 Y116.747 E6.52885 ; infill G1 X109.461 Y116.747 E6.53457 ; infill G1 X110.869 Y115.339 E6.55699 ; infill G1 X110.869 Y114.831 E6.56271 ; infill G1 X108.953 Y116.747 E6.59322 ; infill G1 X108.445 Y116.747 E6.59894 ; infill G1 X110.869 Y114.324 E6.63753 ; infill G1 X110.869 Y113.816 E6.64325 ; infill G1 X107.937 Y116.747 E6.68993 ; infill G1 X107.43 Y116.747 E6.69564 ; infill G1 X110.869 Y113.308 E6.7504 ; infill G1 X110.869 Y112.8 E6.75612 ; infill G1 X106.922 Y116.747 E6.81896 ; infill G1 X106.414 Y116.747 E6.82468 ; infill G1 X110.869 Y112.292 E6.89561 ; infill G1 X110.869 Y111.784 E6.90133 ; infill G1 X105.906 Y116.747 E6.98035 ; infill G1 X105.398 Y116.747 E6.98607 ; infill G1 X110.869 Y111.276 E7.07318 ; infill G1 X110.869 Y110.768 E7.0789 ; infill G1 X108.65 Y112.987 E7.11423 ; infill G1 X108.761 Y112.764 E7.11703 ; infill G1 X108.814 Y112.315 E7.12212 ; infill G1 X110.869 Y110.261 E7.15483 ; infill G1 X110.869 Y109.753 E7.16055 ; infill G1 X108.883 Y111.739 E7.19217 ; infill G1 X108.951 Y111.163 E7.1987 ; infill G1 X110.869 Y109.245 E7.22924 ; infill G1 X110.869 Y108.737 E7.23496 ; infill G1 X108.319 Y111.286 E7.27555 ; infill G1 X108.013 Y111.593 F9000 ; move to first infill point G1 F1575 G1 X102.859 Y116.747 E7.35761 ; infill G1 X103.367 Y116.747 E7.36333 ; infill G1 X108.028 Y112.086 E7.43754 ; infill G1 X107.975 Y112.459 E7.44178 ; infill G1 X107.908 Y112.714 E7.44475 ; infill G1 X103.875 Y116.747 E7.50896 ; infill G1 X104.382 Y116.747 E7.51467 ; infill G1 X107.172 Y113.957 E7.55909 ; infill G1 X107.396 Y114.241 E7.56316 ; infill G1 X104.73 Y116.908 E7.60562 ; infill G1 E1.10562 F1500 ; retract G92 E0 ; reset extrusion distance G1 X102.19 Y116.908 F9000 ; move to first infill point G1 E6.5 F1500 ;  ; unretract G1 F1575 G1 X104.524 Y114.574 E6.53716 ; infill G1 X104.194 Y114.396 E6.54138 ; infill G1 X101.843 Y116.747 E6.57881 ; infill G1 X101.335 Y116.747 E6.58453 ; infill G1 X103.898 Y114.184 E6.62534 ; infill G1 X103.631 Y113.943 E6.62939 ; infill G1 X100.827 Y116.747 E6.67404 ; infill G1 X100.718 Y116.747 E6.67527 ; infill G1 X100.718 Y116.348 E6.67976 ; infill G1 X103.418 Y113.649 E6.72274 ; infill G1 X103.256 Y113.416 E6.72594 ; infill G1 X103.223 Y113.335 E6.72692 ; infill G1 X100.718 Y115.84 E6.7668 ; infill G1 X100.718 Y115.332 E6.77252 ; infill G1 X103.075 Y112.976 E6.81004 ; infill G1 X103.004 Y112.805 E6.81212 ; infill G1 X102.957 Y112.585 E6.81465 ; infill G1 X100.718 Y114.824 E6.8503 ; infill G1 X100.718 Y114.316 E6.85602 ; infill G1 X102.868 Y112.167 E6.89024 ; infill G1 X102.827 Y111.7 E6.89552 ; infill G1 X100.718 Y113.809 E6.9291 ; infill G1 X100.718 Y113.301 E6.93482 ; infill G1 X102.801 Y111.218 E6.96799 ; infill G1 X102.833 Y110.678 E6.97408 ; infill G1 X100.718 Y112.793 E7.00776 ; infill G1 X100.718 Y112.285 E7.01348 ; infill G1 X102.909 Y110.095 E7.04836 ; infill G1 X103.005 Y109.627 E7.05374 ; infill G1 X103.096 Y109.4 E7.05649 ; infill G1 X100.718 Y111.777 E7.09434 ; infill G1 X100.718 Y111.269 E7.10006 ; infill G1 X103.662 Y108.325 E7.14693 ; infill G1 X103.155 Y108.325 E7.15264 ; infill G1 X100.718 Y110.761 E7.19143 ; infill G1 X100.718 Y110.254 E7.19714 ; infill G1 X102.647 Y108.325 E7.22785 ; infill G1 X102.139 Y108.325 E7.23357 ; infill G1 X100.718 Y109.746 E7.2562 ; infill G1 X100.718 Y109.238 E7.26192 ; infill G1 X101.631 Y108.325 E7.27646 ; infill G1 X101.123 Y108.325 E7.28218 ; infill G1 X100.558 Y108.891 E7.29118 ; infill G1 E.79118 F1500 ; retract G92 E0 ; reset extrusion distance G1 X103.157 Y111.243 F9000 ; move to first infill point G1 E6.5 F1500 ;  ; unretract ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X103.377 Y111.023 E6.50348 ; infill G1 X103.688 Y109.823 F9000 ; move to first infill point ;TYPE:Top solid infill ;WIDTH:0.402037 G1 F1575 G1 X105.251 Y108.261 E6.52836 ; infill G1 X105.817 Y108.203 E6.53477 ; infill G1 X103.772 Y110.247 E6.56732 ; infill G1 X103.731 Y110.796 E6.57352 ; infill G1 X106.298 Y108.229 E6.61439 ; infill G1 X106.758 Y108.276 E6.6196 ; infill G1 X103.909 Y111.126 E6.66497 ; infill G1 X104.264 Y111.279 E6.66932 ; infill G1 X107.15 Y108.393 E6.71527 ; infill G1 X107.318 Y108.485 E6.71743 ; infill G1 X107.458 Y108.592 E6.71941 ; infill G1 X103.776 Y112.275 E6.77804 ; infill G1 X103.79 Y112.405 E6.77951 ; infill G1 X103.863 Y112.696 E6.78289 ; infill G1 X107.72 Y108.839 E6.8443 ; infill G1 X107.931 Y109.135 E6.84839 ; infill G1 X103.996 Y113.07 E6.91104 ; infill G1 X104.09 Y113.278 E6.91361 ; infill G1 X104.175 Y113.399 E6.91527 ; infill G1 X109.249 Y108.325 E6.99606 ; infill G1 X109.757 Y108.325 E7.00178 ; infill G1 X104.397 Y113.685 E7.08712 ; infill G1 X104.664 Y113.926 E7.09117 ; infill G1 X110.265 Y108.325 E7.18035 ; infill G1 X110.773 Y108.325 E7.18607 ; infill G1 X104.871 Y114.227 E7.28004 ; infill G1 E.78004 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.195 Y116.908 F9000 ; move to first infill point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.411566 G1 F1575 G1 X99.78 Y116.322 E6.50957 ; infill G1 X99.78 Y115.801 E6.51559 ; infill G1 X98.834 Y116.747 E6.53105 ; infill G1 X98.313 Y116.747 E6.53707 ; infill G1 X99.78 Y115.279 E6.56106 ; infill G1 X99.78 Y114.758 E6.56708 ; infill G1 X97.791 Y116.747 E6.59959 ; infill G1 X97.27 Y116.747 E6.60561 ; infill G1 X99.78 Y114.237 E6.64664 ; infill G1 X99.78 Y113.715 E6.65267 ; infill G1 X96.749 Y116.747 E6.70222 ; infill G1 X96.227 Y116.747 E6.70825 ; infill G1 X99.78 Y113.194 E6.76632 ; infill G1 X99.78 Y113.055 E6.76793 ; infill G1 X99.726 Y112.925 E6.76956 ; infill G1 X99.582 Y112.871 E6.77134 ; infill G1 X95.706 Y116.747 E6.83469 ; infill G1 X95.185 Y116.747 E6.84071 ; infill G1 X99.061 Y112.871 E6.90406 ; infill G1 X98.539 Y112.871 E6.91009 ; infill G1 X94.663 Y116.747 E6.97344 ; infill G1 X94.256 Y116.747 E6.97814 ; infill G1 X94.256 Y116.633 E6.97946 ; infill G1 X98.018 Y112.871 E7.04095 ; infill G1 X97.497 Y112.871 E7.04697 ; infill G1 X94.256 Y116.112 E7.09994 ; infill G1 X94.256 Y115.59 E7.10597 ; infill G1 X96.975 Y112.871 E7.15041 ; infill G1 X96.454 Y112.871 E7.15643 ; infill G1 X94.256 Y115.069 E7.19236 ; infill G1 X94.256 Y114.548 E7.19838 ; infill G1 X95.933 Y112.871 E7.22579 ; infill G1 X95.411 Y112.871 E7.23182 ; infill G1 X94.256 Y114.026 E7.2507 ; infill G1 X94.256 Y113.505 E7.25672 ; infill G1 X94.89 Y112.871 E7.26708 ; infill G1 X94.44 Y112.871 E7.27228 ; infill G1 X94.318 Y112.921 E7.2738 ; infill G1 X94.095 Y113.144 E7.27744 ; infill G1 X94.189 Y112.425 F9000 ; move to first infill point ;TYPE:Internal infill ;WIDTH:0.4 G1 F4200 G1 X94.01 Y112.297 E7.2799 ; infill G1 X93.899 Y112.029 E7.28315 ; infill G1 X93.899 Y110.402 E7.30136 ; infill G1 X93.675 Y110.626 E7.30491 ; infill G1 X93.675 Y114.374 E7.34687 ; infill G1 X93.899 Y114.598 E7.35042 ; infill G1 X93.899 Y112.984 E7.36849 ; infill G1 X94.102 Y112.625 E7.37311 ; infill G1 X94.369 Y112.514 E7.37635 ; infill G1 X99.667 Y112.514 E7.43566 ; infill G1 X100.027 Y112.717 E7.44029 ; infill G1 X100.137 Y112.984 E7.44352 ; infill G1 X100.137 Y114.263 E7.45784 ; infill G1 X100.361 Y114.039 E7.46139 ; infill G1 X100.361 Y110.961 E7.49585 ; infill G1 X100.137 Y110.737 E7.4994 ; infill G1 X100.137 Y112.029 E7.51386 ; infill G1 X99.935 Y112.389 E7.51848 ; infill G1 X99.526 Y112.5 E7.52322 ; infill G1 X99.508 Y112.304 F9000 ; move to first infill point ;TYPE:Top solid infill ;WIDTH:0.409385 G1 F1575 G1 X99.729 Y112.083 E7.52681 ; infill G1 X99.78 Y111.958 E7.52836 ; infill G1 X99.78 Y111.513 E7.53347 ; infill G1 X99.151 Y112.143 E7.5437 ; infill G1 X98.633 Y112.143 E7.54965 ; infill G1 X99.78 Y110.995 E7.56829 ; infill G1 X99.78 Y110.477 E7.57424 ; infill G1 X98.114 Y112.143 E7.60131 ; infill G1 X97.596 Y112.143 E7.60726 ; infill G1 X99.78 Y109.959 E7.64275 ; infill G1 X99.78 Y109.44 E7.64871 ; infill G1 X97.078 Y112.143 E7.69262 ; infill G1 X96.559 Y112.143 E7.69858 ; infill G1 X99.78 Y108.922 E7.75091 ; infill G1 X99.78 Y108.404 E7.75686 ; infill G1 X96.041 Y112.143 E7.81761 ; infill G1 X95.523 Y112.143 E7.82356 ; infill G1 X99.341 Y108.325 E7.88559 ; infill G1 X98.822 Y108.325 E7.89155 ; infill G1 X95.005 Y112.143 E7.95358 ; infill G1 X94.486 Y112.143 E7.95954 ; infill G1 X98.304 Y108.325 E8.02157 ; infill G1 X97.786 Y108.325 E8.02752 ; infill G1 X94.256 Y111.855 E8.08488 ; infill G1 X94.256 Y111.337 E8.09083 ; infill G1 X97.268 Y108.325 E8.13977 ; infill G1 X96.749 Y108.325 E8.14573 ; infill G1 X94.256 Y110.819 E8.18624 ; infill G1 X94.256 Y110.3 E8.1922 ; infill G1 X96.231 Y108.325 E8.22429 ; infill G1 X95.713 Y108.325 E8.23024 ; infill G1 X94.256 Y109.782 E8.25391 ; infill G1 X94.256 Y109.264 E8.25986 ; infill G1 X95.194 Y108.325 E8.27511 ; infill G1 X94.676 Y108.325 E8.28106 ; infill G1 X94.095 Y108.906 E8.2905 ; infill G1 X93.356 Y108.165 F9000 ; move to first infill point ;WIDTH:0.402596 G1 F1575 G1 X92.789 Y108.731 E8.29953 ; infill G1 X92.789 Y109.24 E8.30527 ; infill G1 X93.318 Y108.711 E8.31371 ; infill G1 X93.318 Y109.22 E8.31945 ; infill G1 X92.789 Y109.748 E8.32788 ; infill G1 X92.789 Y110.257 E8.33362 ; infill G1 X93.318 Y109.728 E8.34206 ; infill G1 X93.318 Y110.237 E8.3478 ; infill G1 X92.789 Y110.766 E8.35624 ; infill G1 X92.789 Y111.274 E8.36197 ; infill G1 X93.318 Y110.746 E8.3704 ; infill G1 X93.318 Y111.254 E8.37613 ; infill G1 X92.789 Y111.783 E8.38457 ; infill G1 X92.789 Y112.292 E8.39031 ; infill G1 X93.318 Y111.763 E8.39875 ; infill G1 X93.318 Y112.272 E8.40449 ; infill G1 X92.789 Y112.8 E8.41292 ; infill G1 X92.789 Y113.309 E8.41866 ; infill G1 X93.318 Y112.78 E8.4271 ; infill G1 X93.318 Y113.289 E8.43284 ; infill G1 X92.789 Y113.818 E8.44128 ; infill G1 X92.789 Y114.326 E8.44701 ; infill G1 X93.318 Y113.798 E8.45544 ; infill G1 X93.318 Y114.306 E8.46117 ; infill G1 X92.789 Y114.835 E8.46961 ; infill G1 X92.789 Y115.344 E8.47535 ; infill G1 X93.318 Y114.815 E8.48379 ; infill G1 X93.318 Y115.324 E8.48953 ; infill G1 X92.789 Y115.852 E8.49796 ; infill G1 X92.789 Y116.361 E8.5037 ; infill G1 X93.318 Y115.832 E8.51214 ; infill G1 X93.318 Y116.341 E8.51788 ; infill G1 X92.751 Y116.908 E8.52692 ; infill G1 E2.02692 F1500 ; retract G92 E0 ; reset extrusion distance G1 X108.09 Y108.469 F9000 ; move to first infill point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.402037 G1 F1575 G1 X108.233 Y108.325 E6.50228 ; infill G1 X108.741 Y108.325 E6.508 ; infill G1 X108.324 Y108.742 E6.51464 ; infill G1 E.01464 F1500 ; retract G92 E0 ; reset extrusion distance G1 X131.443 Y108.093 F9000 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.399999 G1 F3000 G1 X131.443 Y112.536 E6.54974 ; perimeter G1 X131.443 Y116.979 E6.59948 ; perimeter G1 X114.975 Y116.979 E6.78384 ; perimeter G1 X114.912 Y116.983 E6.78455 ; perimeter G1 X114.82 Y117.042 E6.78577 ; perimeter G1 X113.953 Y117.042 E6.79548 ; perimeter G1 X113.911 Y116.991 E6.79622 ; perimeter G1 X113.797 Y116.979 E6.7975 ; perimeter G1 X111.889 Y116.979 E6.81886 ; perimeter G1 X111.826 Y116.983 E6.81957 ; perimeter G1 X111.734 Y117.042 E6.82079 ; perimeter G1 X110.867 Y117.042 E6.8305 ; perimeter G1 X110.826 Y116.991 E6.83123 ; perimeter G1 X110.712 Y116.979 E6.83251 ; perimeter G1 X92.557 Y116.979 E7.03575 ; perimeter G1 X92.557 Y108.093 E7.13523 ; perimeter G1 X104.912 Y108.093 E7.27354 ; perimeter G1 X105.28 Y108.012 E7.27776 ; perimeter G1 X105.943 Y107.96 E7.2852 ; perimeter G1 X107.078 Y108.093 E7.29799 ; perimeter G1 X118.74 Y108.093 E7.42854 ; perimeter G1 X119.101 Y108.013 E7.43268 ; perimeter G1 X119.758 Y107.959 E7.44006 ; perimeter G1 X120.173 Y107.992 E7.44472 ; perimeter G1 X120.801 Y108.093 E7.45184 ; perimeter G1 X131.383 Y108.093 E7.5703 ; perimeter G1 X131.8 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter G1 F1500 G1 X131.8 Y112.536 E7.62403 ; perimeter G1 X131.8 Y117.336 E7.67776 ; perimeter G1 X114.975 Y117.336 E7.86611 ; perimeter G1 X114.889 Y117.4 E7.86731 ; perimeter G1 X113.883 Y117.4 E7.87857 ; perimeter G1 X113.797 Y117.336 E7.87977 ; perimeter G1 X111.889 Y117.336 E7.90113 ; perimeter G1 X111.804 Y117.4 E7.90232 ; perimeter G1 X110.797 Y117.4 E7.91359 ; perimeter G1 X110.712 Y117.336 E7.91478 ; perimeter G1 X92.2 Y117.336 E8.12202 ; perimeter G1 X92.2 Y107.736 E8.22949 ; perimeter G1 X104.912 Y107.736 E8.3718 ; perimeter G1 X105.219 Y107.659 E8.37534 ; perimeter G1 X105.947 Y107.601 E8.38352 ; perimeter G1 X107.078 Y107.736 E8.39627 ; perimeter G1 X118.74 Y107.736 E8.52682 ; perimeter G1 X119.038 Y107.66 E8.53026 ; perimeter G1 X119.758 Y107.601 E8.53835 ; perimeter G1 X120.201 Y107.636 E8.54332 ; perimeter G1 X120.801 Y107.736 E8.55013 ; perimeter G1 X131.74 Y107.736 E8.67259 ; perimeter G1 X131.799 Y108.132 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:2.2 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 10; ;LAYER:10 G1 E2.17259 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z2.2 F9000 ; simple layer change G1 X122.227 Y109.224 ; travel to first layer point G1 X120.708 Y107.856 ; travel to first layer point G1 X118.223 Y108.142 ; travel to first layer point G1 X117.206 Y109.653 ; travel to first layer point G1 X114.52 Y109.933 ; travel to first layer point G1 X114.252 Y109.961 ; travel to first layer point G1 X111.434 Y110.255 ; travel to first layer point G1 X111.167 Y110.283 ; travel to first layer point G1 X103.508 Y111.082 ; travel to first layer point G1 X103.138 Y111.12 ; travel to first layer point G1 X100.383 Y111.407 ; travel to first layer point G1 X100.01 Y112.641 ; travel to first layer point G1 X93.675 Y112.551 ; travel to first layer point G1 X93.657 Y112.1 ; travel to first layer point G1 X93.792 Y112.095 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.59053 G1 F2250 G1 X93.787 Y111.986 E6.50187 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y108.184 E6.56601 ; perimeter G1 X93.787 Y116.443 F9000 ; move to first perimeter point G1 F2250 G1 X93.787 Y113.028 E6.62362 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.399111 G1 F2250 G1 X94.175 Y112.549 E6.62581 ; perimeter ;WIDTH:0.420375 G1 X94.028 Y112.641 E6.62786 ; perimeter ;WIDTH:0.460542 G1 X93.968 Y112.737 E6.62934 ; perimeter ;WIDTH:0.500709 G1 X93.908 Y112.834 E6.63098 ; perimeter ;WIDTH:0.540876 G1 X93.847 Y112.931 E6.63277 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y113.028 E6.63469 ; perimeter G1 X93.767 Y112.898 E6.63691 ; perimeter ;WIDTH:0.540876 G1 X93.747 Y112.767 E6.63898 ; perimeter ;WIDTH:0.500709 G1 X93.727 Y112.637 E6.64087 ; perimeter ;WIDTH:0.460542 G1 X93.707 Y112.507 E6.64259 ; perimeter ;WIDTH:0.462914 G1 X93.728 Y112.404 E6.64397 ; perimeter ;WIDTH:0.505453 G1 X93.749 Y112.301 E6.64549 ; perimeter ;WIDTH:0.547992 G1 X93.77 Y112.198 E6.64715 ; perimeter ;WIDTH:0.59053 G1 X93.792 Y112.095 E6.64896 ; perimeter G1 X93.851 Y112.164 E6.65052 ; perimeter ;WIDTH:0.547992 G1 X93.91 Y112.234 E6.65197 ; perimeter ;WIDTH:0.505453 G1 X93.969 Y112.303 E6.65329 ; perimeter ;WIDTH:0.462914 G1 X94.028 Y112.373 E6.6545 ; perimeter ;WIDTH:0.420375 G1 X94.175 Y112.465 E6.65655 ; perimeter ;WIDTH:0.399111 G1 X94.309 Y112.494 E6.65808 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.374822 G1 F2250 G1 X99.623 Y112.507 E6.71277 ; perimeter G1 X100.249 Y116.443 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y113.028 E6.77038 ; perimeter G1 X100.245 Y112.095 F9000 ; move to first perimeter point ;WIDTH:0.590528 G1 F2250 G1 X100.266 Y112.198 E6.77218 ; perimeter ;WIDTH:0.54799 G1 X100.287 Y112.301 E6.77384 ; perimeter ;WIDTH:0.505452 G1 X100.308 Y112.404 E6.77536 ; perimeter ;WIDTH:0.462914 G1 X100.33 Y112.507 E6.77675 ; perimeter ;WIDTH:0.460542 G1 X100.31 Y112.637 E6.77847 ; perimeter ;WIDTH:0.500708 G1 X100.29 Y112.767 E6.78036 ; perimeter ;WIDTH:0.540874 G1 X100.269 Y112.898 E6.78243 ; perimeter ;WIDTH:0.58104 G1 X100.249 Y113.028 E6.78465 ; perimeter G1 X100.189 Y112.931 E6.78657 ; perimeter ;WIDTH:0.540874 G1 X100.129 Y112.834 E6.78835 ; perimeter ;WIDTH:0.500708 G1 X100.068 Y112.737 E6.78999 ; perimeter ;WIDTH:0.460542 G1 X100.008 Y112.641 E6.79147 ; perimeter ;WIDTH:0.420375 G1 X99.862 Y112.547 E6.79352 ; perimeter ;WIDTH:0.402898 G1 X99.623 Y112.507 E6.79625 ; perimeter G1 X99.862 Y112.467 E6.79898 ; perimeter ;WIDTH:0.420375 G1 X100.008 Y112.373 E6.80103 ; perimeter ;WIDTH:0.462914 G1 X100.067 Y112.303 E6.80224 ; perimeter ;WIDTH:0.505452 G1 X100.126 Y112.234 E6.80356 ; perimeter ;WIDTH:0.54799 G1 X100.185 Y112.164 E6.80501 ; perimeter ;WIDTH:0.590528 G1 X100.206 Y112.14 E6.80556 ; perimeter G1 X100.249 Y108.184 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y111.986 E6.8697 ; perimeter ;WIDTH:0.590528 G1 X100.245 Y112.095 E6.87157 ; perimeter G1 X99.752 Y112.907 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F1500 G1 X99.749 Y112.901 E6.87165 ; perimeter G1 X99.623 Y112.849 E6.87318 ; perimeter G1 X94.413 Y112.849 E6.9315 ; perimeter G1 X94.334 Y112.868 E6.93241 ; perimeter G1 X94.235 Y113.028 E6.93452 ; perimeter G1 X94.235 Y116.891 E6.97777 ; perimeter G1 X93.339 Y116.891 E6.9878 ; perimeter G1 X93.339 Y107.736 E7.09029 ; perimeter G1 X94.235 Y107.736 E7.10032 ; perimeter G1 X94.235 Y111.986 E7.1479 ; perimeter G1 X94.287 Y112.112 E7.14943 ; perimeter G1 X94.413 Y112.164 E7.15096 ; perimeter G1 X99.623 Y112.164 E7.20928 ; perimeter G1 X99.749 Y112.112 E7.21081 ; perimeter G1 X99.802 Y111.986 E7.21234 ; perimeter G1 X99.802 Y107.736 E7.25992 ; perimeter G1 X100.697 Y107.736 E7.26994 ; perimeter G1 X100.697 Y108.184 E7.27496 ; perimeter G1 X100.697 Y116.891 E7.37243 ; perimeter G1 X99.802 Y116.891 E7.38245 ; perimeter G1 X99.802 Y113.028 E7.4257 ; perimeter G1 X99.775 Y112.963 E7.42649 ; perimeter G1 X99.389 Y112.856 F9000 ; move inwards before travel G1 E.92649 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.389 Y112.641 F9000 ; move to first perimeter point G1 X100.364 Y112.61 ; move to first perimeter point G1 X103.157 Y111.905 ; move to first perimeter point G1 X103.764 Y111.549 ; move to first perimeter point G1 X103.764 Y111.752 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.438365 G1 F2250 G1 X103.787 Y111.694 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.839 Y111.666 E6.50155 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.638 E6.50239 ; perimeter G1 X107.9 Y111.638 E6.55849 ; perimeter G1 X107.979 Y111.709 E6.55998 ; perimeter ;WIDTH:0.44468 G1 X108.059 Y111.779 E6.56132 ; perimeter ;WIDTH:0.399999 G1 X108.077 Y111.886 E6.56253 ; perimeter G1 X107.998 Y112.452 E6.56893 ; perimeter G1 X107.87 Y112.939 E6.57457 ; perimeter G1 X107.612 Y113.463 E6.58111 ; perimeter ;WIDTH:0.438032 G1 X107.56 Y113.565 E6.58253 ; perimeter ;WIDTH:0.476065 G1 X107.507 Y113.666 E6.58408 ; perimeter ;WIDTH:0.514097 G1 X107.455 Y113.768 E6.58577 ; perimeter G1 X107.016 Y114.094 E6.59385 ; perimeter ;WIDTH:0.510783 G1 X106.752 Y114.198 E6.59801 ; perimeter ;WIDTH:0.46551 G1 X106.332 Y114.297 E6.60373 ; perimeter ;WIDTH:0.470099 G1 X105.863 Y114.341 E6.61004 ; perimeter ;WIDTH:0.486022 G1 X105.303 Y114.277 E6.61787 ; perimeter ;WIDTH:0.516687 G1 X104.807 Y114.098 E6.6257 ; perimeter ;WIDTH:0.547113 G1 X104.45 Y113.863 E6.63246 ; perimeter G1 X104.391 Y113.766 E6.63425 ; perimeter ;WIDTH:0.498075 G1 X104.331 Y113.67 E6.63587 ; perimeter ;WIDTH:0.449037 G1 X104.272 Y113.574 E6.6373 ; perimeter ;WIDTH:0.399999 G1 X104.063 Y113.273 E6.6414 ; perimeter G1 X103.882 Y112.86 E6.64645 ; perimeter G1 X103.767 Y112.396 E6.6518 ; perimeter G1 X103.714 Y111.88 E6.65761 ; perimeter ;WIDTH:0.438365 G1 X103.742 Y111.808 E6.65857 ; perimeter G1 X104.105 Y111.641 F9000 ; move inwards before travel G1 X104.105 Y111.281 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X107.857 Y113.911 ; move to first perimeter point G1 X105.636 Y114.671 ; move to first perimeter point G1 X103.938 Y113.921 ; move to first perimeter point G1 X103.888 Y113.866 ; move to first perimeter point G1 X103.99 Y113.773 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.415434 G1 F2250 G1 X103.73 Y113.422 E6.66367 ; perimeter ;WIDTH:0.458638 G1 X103.507 Y112.955 E6.67041 ; perimeter ;WIDTH:0.497754 G1 X103.363 Y112.437 E6.67808 ; perimeter ;WIDTH:0.53897 G1 X103.29 Y111.923 E6.68615 ; perimeter ;WIDTH:0.584827 G1 X103.305 Y111.798 E6.68829 ; perimeter ;WIDTH:0.630683 G1 X103.32 Y111.673 E6.69061 ; perimeter ;WIDTH:0.67654 G1 X103.335 Y111.548 E6.69311 ; perimeter ;WIDTH:0.722396 G1 X103.35 Y111.422 E6.69581 ; perimeter G1 X103.322 Y111.337 E6.69772 ; perimeter ;WIDTH:0.676011 G1 X103.293 Y111.251 E6.69952 ; perimeter ;WIDTH:0.629626 G1 X103.282 Y111.093 E6.70243 ; perimeter ;WIDTH:0.588436 G1 X103.271 Y110.935 E6.70514 ; perimeter ;WIDTH:0.547246 G1 X103.327 Y110.24 E6.71616 ; perimeter ;WIDTH:0.520872 G1 X103.437 Y109.703 E6.72437 ; perimeter ;WIDTH:0.50243 G1 X103.638 Y109.175 E6.73251 ; perimeter ;WIDTH:0.471912 G1 X103.905 Y108.751 E6.73925 ; perimeter ;WIDTH:0.43226 G1 X104.067 Y108.577 E6.74215 ; perimeter G1 X103.974 Y108.48 F9000 ; move to first perimeter point G1 X103.134 Y111.014 ; move to first perimeter point G1 X103.815 Y113.785 ; move to first perimeter point G1 X105.892 Y114.691 ; move to first perimeter point G1 X107.984 Y113.786 ; move to first perimeter point G1 X108.602 Y111.694 ; move to first perimeter point G1 X108.594 Y111.571 ; move to first perimeter point G1 X108.443 Y111.58 ; move to first perimeter point ;WIDTH:0.552282 G1 F2250 G1 X108.447 Y111.7 E6.74407 ; perimeter ;WIDTH:0.517227 G1 X108.451 Y111.819 E6.74584 ; perimeter ;WIDTH:0.482172 G1 X108.454 Y111.938 E6.74748 ; perimeter ;WIDTH:0.458504 G1 X108.381 Y112.505 E6.75493 ; perimeter G1 X108.296 Y112.768 E6.75853 ; perimeter ;WIDTH:0.424891 G1 X108.211 Y113.03 E6.76183 ; perimeter ;WIDTH:0.391278 G1 X107.996 Y113.491 E6.76739 ; perimeter ;WIDTH:0.385752 G1 X107.896 Y113.668 E6.76958 ; perimeter G1 X108.014 Y113.735 F9000 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X104.17 Y111.281 ; move to first perimeter point G1 X103.754 Y111.281 ; move to first perimeter point G1 X103.754 Y111.082 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.438365 G1 F2250 G1 X103.779 Y111.139 E6.77035 ; perimeter ;WIDTH:0.463863 G1 X103.835 Y111.165 E6.77116 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.192 E6.77204 ; perimeter G1 X107.9 Y111.192 E6.82814 ; perimeter G1 X108.416 Y111.169 E6.83537 ; perimeter ;WIDTH:0.44468 G1 X108.931 Y111.147 E6.84186 ; perimeter ;WIDTH:0.399999 G1 X108.74 Y112.758 E6.86002 ; perimeter G1 X108.171 Y113.901 E6.87431 ; perimeter ;WIDTH:0.438032 G1 X108.03 Y113.98 E6.87631 ; perimeter ;WIDTH:0.476065 G1 X107.888 Y114.059 E6.87852 ; perimeter ;WIDTH:0.514097 G1 X107.747 Y114.138 E6.88091 ; perimeter G1 X107.26 Y114.492 E6.8898 ; perimeter ;WIDTH:0.510783 G1 X106.878 Y114.604 E6.89564 ; perimeter ;WIDTH:0.467891 G1 X106.382 Y114.699 E6.90237 ; perimeter ;WIDTH:0.470099 G1 X105.827 Y114.767 E6.90986 ; perimeter ;WIDTH:0.486022 G1 X105.18 Y114.702 E6.91889 ; perimeter ;WIDTH:0.516687 G1 X104.578 Y114.513 E6.92826 ; perimeter ;WIDTH:0.537816 G1 X103.924 Y114.116 E6.94013 ; perimeter ;WIDTH:0.491877 G1 X103.773 Y114.011 E6.94272 ; perimeter ;WIDTH:0.445938 G1 X103.622 Y113.906 E6.94504 ; perimeter ;WIDTH:0.399999 G1 X103.275 Y113.405 E6.95186 ; perimeter G1 X103.025 Y112.798 E6.95921 ; perimeter G1 X102.872 Y112.081 E6.96742 ; perimeter G1 X102.82 Y111.252 E6.97672 ; perimeter G1 X102.872 Y110.381 E6.98649 ; perimeter G1 X103.025 Y109.633 E6.99504 ; perimeter G1 X103.276 Y109.009 E7.00257 ; perimeter G1 X103.597 Y108.54 E7.00893 ; perimeter G1 X103.833 Y108.315 E7.01258 ; perimeter ;WIDTH:0.445318 G1 X103.999 Y108.225 E7.01496 ; perimeter ;WIDTH:0.490637 G1 X104.164 Y108.135 E7.0176 ; perimeter ;WIDTH:0.535955 G1 X104.801 Y107.827 E7.02854 ; perimeter ;WIDTH:0.504493 G1 X105.346 Y107.691 E7.03667 ; perimeter ;WIDTH:0.483771 G1 X105.893 Y107.645 E7.04426 ; perimeter ;WIDTH:0.477736 G1 X106.394 Y107.681 E7.05111 ; perimeter ;WIDTH:0.503713 G1 X106.922 Y107.753 E7.05881 ; perimeter G1 X107.265 Y107.869 E7.06404 ; perimeter ;WIDTH:0.535372 G1 X107.758 Y108.095 E7.07241 ; perimeter ;WIDTH:0.559025 G1 X108.253 Y108.529 E7.08306 ; perimeter ;WIDTH:0.559465 G1 X108.52 Y108.965 E7.09134 ; perimeter G1 X108.007 Y109.111 E7.09998 ; perimeter G1 X107.832 Y108.821 E7.10547 ; perimeter ;WIDTH:0.547078 G1 X107.434 Y108.466 E7.1139 ; perimeter ;WIDTH:0.535372 G1 X107.026 Y108.257 E7.12098 ; perimeter ;WIDTH:0.492394 G1 X106.381 Y108.107 E7.13031 ; perimeter ;WIDTH:0.477098 G1 X105.961 Y108.078 E7.13604 ; perimeter ;WIDTH:0.48047 G1 X105.454 Y108.12 E7.14302 ; perimeter ;WIDTH:0.501175 G1 X104.989 Y108.249 E7.14995 ; perimeter ;WIDTH:0.539253 G1 X104.549 Y108.488 E7.15774 ; perimeter G1 X104.451 Y108.624 E7.16035 ; perimeter ;WIDTH:0.492835 G1 X104.352 Y108.76 E7.16272 ; perimeter ;WIDTH:0.446417 G1 X104.254 Y108.895 E7.16483 ; perimeter ;WIDTH:0.399999 G1 X104 Y109.332 E7.17049 ; perimeter G1 X103.829 Y109.829 E7.17637 ; perimeter G1 X103.735 Y110.34 E7.18219 ; perimeter G1 X103.701 Y110.959 E7.18913 ; perimeter ;WIDTH:0.438365 G1 X103.73 Y111.027 E7.19005 ; perimeter G1 X104.096 Y111.188 F9000 ; move inwards before travel G1 E.69005 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.096 Y111.281 F9000 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X107.857 Y113.911 ; move to first perimeter point G1 X107.671 Y114.066 ; move to first perimeter point G1 X111.301 Y117.064 ; move to first perimeter point G1 X111.301 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506442 G1 F2250 G1 X111.301 Y108.146 E6.62851 ; perimeter G1 X111.711 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X111.711 Y108.146 E6.6331 ; perimeter G1 X111.711 Y117.4 E6.7367 ; perimeter G1 X110.89 Y117.4 E6.74589 ; perimeter G1 X110.89 Y107.736 E6.85408 ; perimeter G1 X111.651 Y107.736 E6.8626 ; perimeter G1 X111.71 Y108.132 F9000 ; move inwards before travel G1 E.3626 F1500 ; retract G92 E0 ; reset extrusion distance G1 X111.42 Y108.168 F9000 ; move to first perimeter point G1 X114.386 Y117.064 ; move to first perimeter point G1 X114.386 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.50644 G1 F2250 G1 X114.386 Y108.146 E6.6285 ; perimeter G1 X114.797 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X114.797 Y108.146 E6.63309 ; perimeter G1 X114.797 Y117.4 E6.73669 ; perimeter G1 X113.976 Y117.4 E6.74588 ; perimeter G1 X113.976 Y107.736 E6.85407 ; perimeter G1 X114.737 Y107.736 E6.86259 ; perimeter G1 X114.796 Y108.132 F9000 ; move inwards before travel G1 E.36259 F1500 ; retract G92 E0 ; reset extrusion distance G1 X114.506 Y108.168 F9000 ; move to first perimeter point G1 X117.842 Y108.468 ; move to first perimeter point G1 X118.298 Y108.416 ; move to first perimeter point G1 X118.359 Y108.525 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.534751 G1 F2250 G1 X118.379 Y108.493 E6.50058 ; perimeter G1 X118.786 Y108.251 E6.50788 ; perimeter ;WIDTH:0.496196 G1 X119.247 Y108.112 E6.51472 ; perimeter ;WIDTH:0.474055 G1 X119.745 Y108.068 E6.52148 ; perimeter ;WIDTH:0.473823 G1 X120.275 Y108.111 E6.52866 ; perimeter ;WIDTH:0.49236 G1 X120.76 Y108.244 E6.53575 ; perimeter ;WIDTH:0.529435 G1 X121.2 Y108.489 E6.54343 ; perimeter G1 X121.289 Y108.617 E6.54581 ; perimeter ;WIDTH:0.488852 G1 X121.378 Y108.746 E6.548 ; perimeter ;WIDTH:0.448269 G1 X121.468 Y108.874 E6.54999 ; perimeter ;WIDTH:0.407686 G1 X121.699 Y109.32 E6.55573 ; perimeter ;WIDTH:0.399999 G1 X121.852 Y109.831 E6.5617 ; perimeter G1 X121.949 Y110.456 E6.56878 ; perimeter G1 X121.985 Y111.204 E6.57716 ; perimeter G1 X121.956 Y111.928 E6.58527 ; perimeter G1 X121.87 Y112.552 E6.59232 ; perimeter G1 X121.723 Y113.079 E6.59844 ; perimeter G1 X121.486 Y113.549 E6.60433 ; perimeter ;WIDTH:0.445292 G1 X121.396 Y113.681 E6.60635 ; perimeter ;WIDTH:0.490585 G1 X121.306 Y113.813 E6.60859 ; perimeter ;WIDTH:0.535877 G1 X121.216 Y113.945 E6.61106 ; perimeter G1 X120.805 Y114.171 E6.61831 ; perimeter ;WIDTH:0.495605 G1 X120.335 Y114.3 E6.62523 ; perimeter ;WIDTH:0.473786 G1 X119.834 Y114.342 E6.63202 ; perimeter ;WIDTH:0.470433 G1 X119.298 Y114.287 E6.63924 ; perimeter ;WIDTH:0.497376 G1 X118.766 Y114.144 E6.64709 ; perimeter ;WIDTH:0.516088 G1 X118.355 Y113.887 E6.65428 ; perimeter G1 X118.268 Y113.758 E6.65659 ; perimeter ;WIDTH:0.477392 G1 X118.18 Y113.629 E6.65872 ; perimeter ;WIDTH:0.438696 G1 X118.093 Y113.5 E6.66065 ; perimeter ;WIDTH:0.399999 G1 X117.869 Y113.064 E6.66614 ; perimeter G1 X117.718 Y112.562 E6.67201 ; perimeter G1 X117.623 Y111.937 E6.67909 ; perimeter G1 X117.591 Y111.219 E6.68714 ; perimeter G1 X117.62 Y110.521 E6.69496 ; perimeter G1 X117.711 Y109.91 E6.70188 ; perimeter G1 X117.864 Y109.383 E6.70802 ; perimeter G1 X118.088 Y108.932 E6.71366 ; perimeter G1 X118.158 Y108.845 E6.71491 ; perimeter ;WIDTH:0.444917 G1 X118.231 Y108.727 E6.71666 ; perimeter ;WIDTH:0.489834 G1 X118.305 Y108.61 E6.7186 ; perimeter ;WIDTH:0.534751 G1 X118.327 Y108.575 E6.71924 ; perimeter G1 X118.649 Y108.338 F9000 ; move inwards before travel G1 X118.447 Y108.006 ; move to first perimeter point G1 X121.035 Y107.962 ; move to first perimeter point G1 X121.748 Y108.474 ; move to first perimeter point G1 X121.84 Y108.567 ; move to first perimeter point G1 X121.745 Y108.662 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.432575 G1 F2250 G1 X121.897 Y108.901 E6.7227 ; perimeter ;WIDTH:0.474702 G1 X122.05 Y109.14 E6.72654 ; perimeter ;WIDTH:0.502216 G1 X122.153 Y109.426 E6.73092 ; perimeter ;WIDTH:0.52973 G1 X122.257 Y109.712 E6.73556 ; perimeter ;WIDTH:0.558438 G1 X122.381 Y110.393 E6.74675 ; perimeter ;WIDTH:0.565438 G1 X122.424 Y111.185 E6.75974 ; perimeter G1 X122.391 Y111.945 E6.7722 ; perimeter ;WIDTH:0.555306 G1 X122.289 Y112.611 E6.78302 ; perimeter ;WIDTH:0.532508 G1 X122.113 Y113.189 E6.79229 ; perimeter ;WIDTH:0.495616 G1 X121.981 Y113.434 E6.79624 ; perimeter ;WIDTH:0.467626 G1 X121.849 Y113.679 E6.79995 ; perimeter ;WIDTH:0.439636 G1 X121.705 Y113.842 E6.80266 ; perimeter G1 X121.802 Y113.937 F9000 ; move to first perimeter point G1 X119.801 Y114.691 ; move to first perimeter point G1 X117.686 Y113.795 ; move to first perimeter point G1 X117.654 Y113.736 ; move to first perimeter point G1 X117.769 Y113.674 ; move to first perimeter point ;WIDTH:0.428146 G1 F2250 G1 X117.513 Y113.171 E6.80948 ; perimeter ;WIDTH:0.47733 G1 X117.415 Y112.928 E6.81305 ; perimeter ;WIDTH:0.526514 G1 X117.316 Y112.686 E6.81701 ; perimeter G1 X117.219 Y111.997 E6.82756 ; perimeter ;WIDTH:0.530951 G1 X117.187 Y111.618 E6.83338 ; perimeter ;WIDTH:0.559864 G1 X117.154 Y111.238 E6.83956 ; perimeter G1 X117.186 Y110.503 E6.85148 ; perimeter ;WIDTH:0.554708 G1 X117.294 Y109.847 E6.86215 ; perimeter ;WIDTH:0.52903 G1 X117.48 Y109.269 E6.8714 ; perimeter ;WIDTH:0.486726 G1 X117.617 Y109.021 E6.87534 ; perimeter ;WIDTH:0.45646 G1 X117.754 Y108.773 E6.87901 ; perimeter ;WIDTH:0.426194 G1 X117.888 Y108.617 E6.88148 ; perimeter G1 X117.486 Y113.923 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X116.909 Y112.813 E6.89548 ; perimeter G1 X116.712 Y111.159 E6.91413 ; perimeter G1 X116.765 Y110.336 E6.92336 ; perimeter G1 X116.92 Y109.6 E6.93178 ; perimeter G1 X117.19 Y108.956 E6.9396 ; perimeter G1 X117.515 Y108.48 E6.94605 ; perimeter ;WIDTH:0.441053 G1 X117.668 Y108.37 E6.9484 ; perimeter ;WIDTH:0.482107 G1 X117.821 Y108.259 E6.951 ; perimeter ;WIDTH:0.52316 G1 X117.973 Y108.149 E6.95382 ; perimeter G1 X118.421 Y107.9 E6.96154 ; perimeter ;WIDTH:0.518742 G1 X118.652 Y107.818 E6.9652 ; perimeter ;WIDTH:0.496196 G1 X119.209 Y107.683 E6.97334 ; perimeter ;WIDTH:0.474055 G1 X119.779 Y107.639 E6.98107 ; perimeter ;WIDTH:0.484929 G1 X120.495 Y107.705 E6.99103 ; perimeter ;WIDTH:0.502287 G1 X120.997 Y107.847 E6.99854 ; perimeter ;WIDTH:0.529435 G1 X121.625 Y108.181 E7.00939 ; perimeter ;WIDTH:0.488852 G1 X121.79 Y108.282 E7.01209 ; perimeter ;WIDTH:0.448269 G1 X121.954 Y108.383 E7.01454 ; perimeter ;WIDTH:0.407686 G1 X122.112 Y108.54 E7.01709 ; perimeter ;WIDTH:0.399999 G1 X122.461 Y109.091 E7.02439 ; perimeter G1 X122.692 Y109.735 E7.03205 ; perimeter G1 X122.822 Y110.459 E7.04028 ; perimeter G1 X122.865 Y111.237 E7.049 ; perimeter G1 X122.812 Y112.125 E7.05896 ; perimeter G1 X122.662 Y112.883 E7.06761 ; perimeter G1 X122.41 Y113.513 E7.07521 ; perimeter G1 X122.084 Y113.984 E7.08162 ; perimeter ;WIDTH:0.437479 G1 X121.937 Y114.087 E7.08384 ; perimeter ;WIDTH:0.474958 G1 X121.789 Y114.19 E7.08628 ; perimeter ;WIDTH:0.512437 G1 X121.642 Y114.292 E7.08891 ; perimeter ;WIDTH:0.522118 G1 X121.188 Y114.52 E7.09654 ; perimeter G1 X120.929 Y114.606 E7.10064 ; perimeter ;WIDTH:0.495605 G1 X120.37 Y114.729 E7.10876 ; perimeter ;WIDTH:0.473786 G1 X119.746 Y114.763 E7.1172 ; perimeter ;WIDTH:0.468761 G1 X119.161 Y114.675 E7.1251 ; perimeter ;WIDTH:0.484182 G1 X118.81 Y114.601 E7.13006 ; perimeter ;WIDTH:0.517386 G1 X118.459 Y114.526 E7.1354 ; perimeter G1 X118.044 Y114.24 E7.1429 ; perimeter ;WIDTH:0.516088 G1 X117.858 Y114.134 E7.14608 ; perimeter ;WIDTH:0.477392 G1 X117.672 Y114.029 E7.14899 ; perimeter ;WIDTH:0.438696 G1 X117.538 Y113.953 E7.1509 ; perimeter G1 X117.328 Y113.612 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:2.4 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 11; ;LAYER:11 G1 E.6509 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z2.4 F9000 ; simple layer change G1 X117.531 Y113.507 ; travel to first layer point G1 X114.52 Y113.431 ; travel to first layer point G1 X114.252 Y113.414 ; travel to first layer point G1 X111.434 Y113.232 ; travel to first layer point G1 X111.167 Y113.215 ; travel to first layer point G1 X108.352 Y113.034 ; travel to first layer point G1 X106.859 Y114.529 ; travel to first layer point G1 X104.386 Y114.288 ; travel to first layer point G1 X103.285 Y112.707 ; travel to first layer point G1 X100.363 Y112.518 ; travel to first layer point G1 X93.675 Y112.551 ; travel to first layer point G1 X93.657 Y112.1 ; travel to first layer point G1 X93.792 Y112.095 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.59053 G1 F2250 G1 X93.787 Y111.986 E6.50187 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y108.184 E6.56601 ; perimeter G1 X93.787 Y116.443 F9000 ; move to first perimeter point G1 F2250 G1 X93.787 Y113.028 E6.62362 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.399111 G1 F2250 G1 X94.175 Y112.549 E6.62581 ; perimeter ;WIDTH:0.420375 G1 X94.028 Y112.641 E6.62786 ; perimeter ;WIDTH:0.460542 G1 X93.968 Y112.737 E6.62934 ; perimeter ;WIDTH:0.500709 G1 X93.908 Y112.834 E6.63098 ; perimeter ;WIDTH:0.540876 G1 X93.847 Y112.931 E6.63277 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y113.028 E6.63469 ; perimeter G1 X93.767 Y112.898 E6.63691 ; perimeter ;WIDTH:0.540876 G1 X93.747 Y112.767 E6.63898 ; perimeter ;WIDTH:0.500709 G1 X93.727 Y112.637 E6.64087 ; perimeter ;WIDTH:0.460542 G1 X93.707 Y112.507 E6.64259 ; perimeter ;WIDTH:0.462914 G1 X93.728 Y112.404 E6.64397 ; perimeter ;WIDTH:0.505453 G1 X93.749 Y112.301 E6.64549 ; perimeter ;WIDTH:0.547992 G1 X93.77 Y112.198 E6.64715 ; perimeter ;WIDTH:0.59053 G1 X93.792 Y112.095 E6.64896 ; perimeter G1 X93.851 Y112.164 E6.65052 ; perimeter ;WIDTH:0.547992 G1 X93.91 Y112.234 E6.65197 ; perimeter ;WIDTH:0.505453 G1 X93.969 Y112.303 E6.65329 ; perimeter ;WIDTH:0.462914 G1 X94.028 Y112.373 E6.6545 ; perimeter ;WIDTH:0.420375 G1 X94.175 Y112.465 E6.65655 ; perimeter ;WIDTH:0.399111 G1 X94.309 Y112.494 E6.65808 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.374822 G1 F2250 G1 X99.623 Y112.507 E6.71277 ; perimeter G1 X100.249 Y116.443 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y113.028 E6.77038 ; perimeter G1 X100.245 Y112.095 F9000 ; move to first perimeter point ;WIDTH:0.590528 G1 F2250 G1 X100.266 Y112.198 E6.77218 ; perimeter ;WIDTH:0.54799 G1 X100.287 Y112.301 E6.77384 ; perimeter ;WIDTH:0.505452 G1 X100.308 Y112.404 E6.77536 ; perimeter ;WIDTH:0.462914 G1 X100.33 Y112.507 E6.77675 ; perimeter ;WIDTH:0.460542 G1 X100.31 Y112.637 E6.77847 ; perimeter ;WIDTH:0.500708 G1 X100.29 Y112.767 E6.78036 ; perimeter ;WIDTH:0.540874 G1 X100.269 Y112.898 E6.78243 ; perimeter ;WIDTH:0.58104 G1 X100.249 Y113.028 E6.78465 ; perimeter G1 X100.189 Y112.931 E6.78657 ; perimeter ;WIDTH:0.540874 G1 X100.129 Y112.834 E6.78835 ; perimeter ;WIDTH:0.500708 G1 X100.068 Y112.737 E6.78999 ; perimeter ;WIDTH:0.460542 G1 X100.008 Y112.641 E6.79147 ; perimeter ;WIDTH:0.420375 G1 X99.862 Y112.547 E6.79352 ; perimeter ;WIDTH:0.402898 G1 X99.623 Y112.507 E6.79625 ; perimeter G1 X99.862 Y112.467 E6.79898 ; perimeter ;WIDTH:0.420375 G1 X100.008 Y112.373 E6.80103 ; perimeter ;WIDTH:0.462914 G1 X100.067 Y112.303 E6.80224 ; perimeter ;WIDTH:0.505452 G1 X100.126 Y112.234 E6.80356 ; perimeter ;WIDTH:0.54799 G1 X100.185 Y112.164 E6.80501 ; perimeter ;WIDTH:0.590528 G1 X100.206 Y112.14 E6.80556 ; perimeter G1 X100.249 Y108.184 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y111.986 E6.8697 ; perimeter ;WIDTH:0.590528 G1 X100.245 Y112.095 E6.87157 ; perimeter G1 X99.752 Y112.907 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F1500 G1 X99.749 Y112.901 E6.87165 ; perimeter G1 X99.623 Y112.849 E6.87318 ; perimeter G1 X94.413 Y112.849 E6.9315 ; perimeter G1 X94.334 Y112.868 E6.93241 ; perimeter G1 X94.235 Y113.028 E6.93452 ; perimeter G1 X94.235 Y116.891 E6.97777 ; perimeter G1 X93.339 Y116.891 E6.9878 ; perimeter G1 X93.339 Y107.736 E7.09029 ; perimeter G1 X94.235 Y107.736 E7.10032 ; perimeter G1 X94.235 Y111.986 E7.1479 ; perimeter G1 X94.287 Y112.112 E7.14943 ; perimeter G1 X94.413 Y112.164 E7.15096 ; perimeter G1 X99.623 Y112.164 E7.20928 ; perimeter G1 X99.749 Y112.112 E7.21081 ; perimeter G1 X99.802 Y111.986 E7.21234 ; perimeter G1 X99.802 Y107.736 E7.25992 ; perimeter G1 X100.697 Y107.736 E7.26994 ; perimeter G1 X100.697 Y108.184 E7.27496 ; perimeter G1 X100.697 Y116.891 E7.37243 ; perimeter G1 X99.802 Y116.891 E7.38245 ; perimeter G1 X99.802 Y113.028 E7.4257 ; perimeter G1 X99.775 Y112.963 E7.42649 ; perimeter G1 X99.389 Y112.856 F9000 ; move inwards before travel G1 E.92649 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.389 Y112.641 F9000 ; move to first perimeter point G1 X100.364 Y112.61 ; move to first perimeter point G1 X103.157 Y111.905 ; move to first perimeter point G1 X103.764 Y111.549 ; move to first perimeter point G1 X103.764 Y111.752 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.438365 G1 F2250 G1 X103.787 Y111.694 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.839 Y111.666 E6.50155 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.638 E6.50239 ; perimeter G1 X107.9 Y111.638 E6.55849 ; perimeter G1 X107.979 Y111.709 E6.55998 ; perimeter ;WIDTH:0.44468 G1 X108.059 Y111.779 E6.56132 ; perimeter ;WIDTH:0.399999 G1 X108.077 Y111.886 E6.56253 ; perimeter G1 X107.998 Y112.452 E6.56893 ; perimeter G1 X107.87 Y112.939 E6.57457 ; perimeter G1 X107.612 Y113.463 E6.58111 ; perimeter ;WIDTH:0.438032 G1 X107.56 Y113.565 E6.58253 ; perimeter ;WIDTH:0.476065 G1 X107.507 Y113.666 E6.58408 ; perimeter ;WIDTH:0.514097 G1 X107.455 Y113.768 E6.58577 ; perimeter G1 X107.016 Y114.094 E6.59385 ; perimeter ;WIDTH:0.510783 G1 X106.752 Y114.198 E6.59801 ; perimeter ;WIDTH:0.46551 G1 X106.332 Y114.297 E6.60373 ; perimeter ;WIDTH:0.470099 G1 X105.863 Y114.341 E6.61004 ; perimeter ;WIDTH:0.486022 G1 X105.303 Y114.277 E6.61787 ; perimeter ;WIDTH:0.516688 G1 X104.807 Y114.098 E6.6257 ; perimeter ;WIDTH:0.547117 G1 X104.45 Y113.863 E6.63246 ; perimeter G1 X104.391 Y113.766 E6.63425 ; perimeter ;WIDTH:0.498078 G1 X104.331 Y113.67 E6.63587 ; perimeter ;WIDTH:0.449039 G1 X104.272 Y113.574 E6.6373 ; perimeter ;WIDTH:0.399999 G1 X104.063 Y113.273 E6.6414 ; perimeter G1 X103.882 Y112.86 E6.64645 ; perimeter G1 X103.767 Y112.396 E6.6518 ; perimeter G1 X103.714 Y111.88 E6.65761 ; perimeter ;WIDTH:0.438365 G1 X103.742 Y111.808 E6.65857 ; perimeter G1 X104.105 Y111.641 F9000 ; move inwards before travel G1 X104.105 Y111.281 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X107.986 Y113.784 ; move to first perimeter point G1 X105.853 Y114.689 ; move to first perimeter point G1 X103.938 Y113.921 ; move to first perimeter point G1 X103.888 Y113.866 ; move to first perimeter point G1 X103.99 Y113.773 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.415434 G1 F2250 G1 X103.73 Y113.422 E6.66367 ; perimeter ;WIDTH:0.458638 G1 X103.507 Y112.955 E6.67041 ; perimeter ;WIDTH:0.497754 G1 X103.363 Y112.437 E6.67808 ; perimeter ;WIDTH:0.53897 G1 X103.29 Y111.923 E6.68615 ; perimeter ;WIDTH:0.584827 G1 X103.305 Y111.798 E6.68829 ; perimeter ;WIDTH:0.630683 G1 X103.32 Y111.673 E6.69061 ; perimeter ;WIDTH:0.67654 G1 X103.335 Y111.548 E6.69311 ; perimeter ;WIDTH:0.722396 G1 X103.35 Y111.422 E6.69581 ; perimeter G1 X103.322 Y111.337 E6.69772 ; perimeter ;WIDTH:0.676011 G1 X103.293 Y111.251 E6.69952 ; perimeter ;WIDTH:0.629626 G1 X103.282 Y111.093 E6.70243 ; perimeter ;WIDTH:0.588436 G1 X103.271 Y110.935 E6.70514 ; perimeter ;WIDTH:0.547246 G1 X103.327 Y110.24 E6.71616 ; perimeter ;WIDTH:0.520872 G1 X103.437 Y109.703 E6.72437 ; perimeter ;WIDTH:0.502432 G1 X103.638 Y109.175 E6.73251 ; perimeter ;WIDTH:0.471914 G1 X103.905 Y108.751 E6.73925 ; perimeter ;WIDTH:0.43226 G1 X104.067 Y108.577 E6.74215 ; perimeter G1 X103.973 Y108.482 F9000 ; move to first perimeter point G1 X103.134 Y111.014 ; move to first perimeter point G1 X103.815 Y113.785 ; move to first perimeter point G1 X105.892 Y114.691 ; move to first perimeter point G1 X108.02 Y113.729 ; move to first perimeter point G1 X108.601 Y111.713 ; move to first perimeter point G1 X108.593 Y111.571 ; move to first perimeter point G1 X108.443 Y111.58 ; move to first perimeter point ;WIDTH:0.552282 G1 F2250 G1 X108.447 Y111.7 E6.74407 ; perimeter ;WIDTH:0.517227 G1 X108.451 Y111.819 E6.74584 ; perimeter ;WIDTH:0.482172 G1 X108.454 Y111.938 E6.74748 ; perimeter ;WIDTH:0.458506 G1 X108.381 Y112.505 E6.75493 ; perimeter G1 X108.296 Y112.768 E6.75853 ; perimeter ;WIDTH:0.424891 G1 X108.211 Y113.03 E6.76183 ; perimeter ;WIDTH:0.391276 G1 X107.996 Y113.491 E6.76739 ; perimeter ;WIDTH:0.385752 G1 X107.896 Y113.668 E6.76958 ; perimeter G1 X108.014 Y113.739 F9000 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X104.17 Y111.281 ; move to first perimeter point G1 X103.754 Y111.281 ; move to first perimeter point G1 X103.754 Y111.082 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.438365 G1 F2250 G1 X103.779 Y111.139 E6.77035 ; perimeter ;WIDTH:0.463863 G1 X103.835 Y111.165 E6.77116 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.192 E6.77204 ; perimeter G1 X107.9 Y111.192 E6.82814 ; perimeter G1 X108.416 Y111.169 E6.83537 ; perimeter ;WIDTH:0.44468 G1 X108.931 Y111.147 E6.84186 ; perimeter ;WIDTH:0.399999 G1 X108.74 Y112.758 E6.86002 ; perimeter G1 X108.171 Y113.901 E6.87431 ; perimeter ;WIDTH:0.438032 G1 X108.03 Y113.98 E6.87631 ; perimeter ;WIDTH:0.476065 G1 X107.888 Y114.059 E6.87852 ; perimeter ;WIDTH:0.514097 G1 X107.747 Y114.138 E6.88091 ; perimeter G1 X107.26 Y114.492 E6.8898 ; perimeter ;WIDTH:0.510783 G1 X106.878 Y114.604 E6.89564 ; perimeter ;WIDTH:0.467891 G1 X106.382 Y114.699 E6.90237 ; perimeter ;WIDTH:0.470099 G1 X105.827 Y114.767 E6.90986 ; perimeter ;WIDTH:0.486022 G1 X105.18 Y114.702 E6.91889 ; perimeter ;WIDTH:0.516688 G1 X104.578 Y114.513 E6.92826 ; perimeter ;WIDTH:0.537825 G1 X103.924 Y114.116 E6.94013 ; perimeter ;WIDTH:0.491883 G1 X103.773 Y114.011 E6.94272 ; perimeter ;WIDTH:0.445941 G1 X103.622 Y113.906 E6.94504 ; perimeter ;WIDTH:0.399999 G1 X103.275 Y113.405 E6.95186 ; perimeter G1 X103.025 Y112.798 E6.95921 ; perimeter G1 X102.872 Y112.081 E6.96742 ; perimeter G1 X102.82 Y111.252 E6.97672 ; perimeter G1 X102.872 Y110.381 E6.98649 ; perimeter G1 X103.025 Y109.633 E6.99504 ; perimeter G1 X103.276 Y109.009 E7.00257 ; perimeter G1 X103.597 Y108.54 E7.00893 ; perimeter G1 X103.833 Y108.315 E7.01258 ; perimeter ;WIDTH:0.445318 G1 X103.999 Y108.225 E7.01496 ; perimeter ;WIDTH:0.490637 G1 X104.164 Y108.135 E7.0176 ; perimeter ;WIDTH:0.535955 G1 X104.801 Y107.827 E7.02854 ; perimeter ;WIDTH:0.504491 G1 X105.346 Y107.691 E7.03667 ; perimeter ;WIDTH:0.483772 G1 X105.893 Y107.645 E7.04426 ; perimeter ;WIDTH:0.477737 G1 X106.394 Y107.681 E7.05111 ; perimeter ;WIDTH:0.503713 G1 X106.922 Y107.753 E7.05881 ; perimeter G1 X107.265 Y107.869 E7.06404 ; perimeter ;WIDTH:0.535372 G1 X107.758 Y108.095 E7.07241 ; perimeter ;WIDTH:0.559025 G1 X108.253 Y108.529 E7.08306 ; perimeter ;WIDTH:0.559465 G1 X108.52 Y108.965 E7.09134 ; perimeter G1 X108.007 Y109.111 E7.09998 ; perimeter G1 X107.832 Y108.821 E7.10547 ; perimeter ;WIDTH:0.547078 G1 X107.434 Y108.466 E7.1139 ; perimeter ;WIDTH:0.535372 G1 X107.026 Y108.257 E7.12098 ; perimeter ;WIDTH:0.492394 G1 X106.381 Y108.107 E7.13031 ; perimeter ;WIDTH:0.477099 G1 X105.961 Y108.078 E7.13604 ; perimeter ;WIDTH:0.480471 G1 X105.454 Y108.12 E7.14302 ; perimeter ;WIDTH:0.501175 G1 X104.989 Y108.249 E7.14995 ; perimeter ;WIDTH:0.539254 G1 X104.549 Y108.488 E7.15774 ; perimeter G1 X104.451 Y108.624 E7.16035 ; perimeter ;WIDTH:0.492836 G1 X104.352 Y108.76 E7.16272 ; perimeter ;WIDTH:0.446418 G1 X104.254 Y108.895 E7.16483 ; perimeter ;WIDTH:0.399999 G1 X104 Y109.332 E7.17049 ; perimeter G1 X103.829 Y109.829 E7.17637 ; perimeter G1 X103.735 Y110.34 E7.18219 ; perimeter G1 X103.701 Y110.959 E7.18913 ; perimeter ;WIDTH:0.438365 G1 X103.73 Y111.027 E7.19005 ; perimeter G1 X104.096 Y111.188 F9000 ; move inwards before travel G1 E.69005 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.096 Y111.281 F9000 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X107.986 Y113.784 ; move to first perimeter point G1 X107.671 Y114.067 ; move to first perimeter point G1 X111.301 Y117.064 ; move to first perimeter point G1 X111.301 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506442 G1 F2250 G1 X111.301 Y108.146 E6.62851 ; perimeter G1 X111.711 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X111.711 Y108.146 E6.6331 ; perimeter G1 X111.711 Y117.4 E6.7367 ; perimeter G1 X110.89 Y117.4 E6.74589 ; perimeter G1 X110.89 Y107.736 E6.85408 ; perimeter G1 X111.651 Y107.736 E6.8626 ; perimeter G1 X111.71 Y108.132 F9000 ; move inwards before travel G1 E.3626 F1500 ; retract G92 E0 ; reset extrusion distance G1 X111.42 Y108.168 F9000 ; move to first perimeter point G1 X114.386 Y117.064 ; move to first perimeter point G1 X114.386 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506438 G1 F2250 G1 X114.386 Y108.146 E6.6285 ; perimeter G1 X114.796 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X114.796 Y108.146 E6.63309 ; perimeter G1 X114.796 Y117.4 E6.73669 ; perimeter G1 X113.976 Y117.4 E6.74587 ; perimeter G1 X113.976 Y107.736 E6.85406 ; perimeter G1 X114.736 Y107.736 E6.86257 ; perimeter G1 X114.796 Y108.132 F9000 ; move inwards before travel G1 E.36257 F1500 ; retract G92 E0 ; reset extrusion distance G1 X114.504 Y108.166 F9000 ; move to first perimeter point G1 X117.842 Y108.468 ; move to first perimeter point G1 X118.297 Y108.416 ; move to first perimeter point G1 X118.359 Y108.525 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.534752 G1 F2250 G1 X118.379 Y108.493 E6.50058 ; perimeter G1 X118.786 Y108.251 E6.50788 ; perimeter ;WIDTH:0.496196 G1 X119.247 Y108.112 E6.51472 ; perimeter ;WIDTH:0.475583 G1 X119.743 Y108.072 E6.52147 ; perimeter G1 X120.274 Y108.11 E6.52869 ; perimeter ;WIDTH:0.49236 G1 X120.76 Y108.244 E6.53579 ; perimeter ;WIDTH:0.529434 G1 X121.2 Y108.489 E6.54347 ; perimeter G1 X121.289 Y108.617 E6.54585 ; perimeter ;WIDTH:0.48885 G1 X121.378 Y108.746 E6.54804 ; perimeter ;WIDTH:0.448265 G1 X121.468 Y108.874 E6.55003 ; perimeter ;WIDTH:0.40768 G1 X121.699 Y109.32 E6.55577 ; perimeter ;WIDTH:0.399999 G1 X121.852 Y109.831 E6.56174 ; perimeter G1 X121.949 Y110.456 E6.56882 ; perimeter G1 X121.985 Y111.204 E6.5772 ; perimeter G1 X121.956 Y111.928 E6.58531 ; perimeter G1 X121.87 Y112.552 E6.59236 ; perimeter G1 X121.723 Y113.079 E6.59848 ; perimeter G1 X121.486 Y113.549 E6.60437 ; perimeter ;WIDTH:0.445292 G1 X121.396 Y113.681 E6.60639 ; perimeter ;WIDTH:0.490585 G1 X121.306 Y113.813 E6.60863 ; perimeter ;WIDTH:0.535878 G1 X121.216 Y113.945 E6.6111 ; perimeter G1 X120.805 Y114.171 E6.61835 ; perimeter ;WIDTH:0.495605 G1 X120.335 Y114.3 E6.62527 ; perimeter ;WIDTH:0.473786 G1 X119.834 Y114.342 E6.63206 ; perimeter ;WIDTH:0.470433 G1 X119.298 Y114.287 E6.63928 ; perimeter ;WIDTH:0.497376 G1 X118.766 Y114.144 E6.64713 ; perimeter ;WIDTH:0.516089 G1 X118.355 Y113.887 E6.65432 ; perimeter G1 X118.268 Y113.758 E6.65663 ; perimeter ;WIDTH:0.477393 G1 X118.18 Y113.629 E6.65876 ; perimeter ;WIDTH:0.438696 G1 X118.093 Y113.5 E6.66069 ; perimeter ;WIDTH:0.399999 G1 X117.869 Y113.064 E6.66618 ; perimeter G1 X117.718 Y112.562 E6.67205 ; perimeter G1 X117.623 Y111.937 E6.67913 ; perimeter G1 X117.591 Y111.219 E6.68718 ; perimeter G1 X117.62 Y110.521 E6.695 ; perimeter G1 X117.711 Y109.91 E6.70192 ; perimeter G1 X117.864 Y109.383 E6.70806 ; perimeter G1 X118.088 Y108.932 E6.7137 ; perimeter G1 X118.158 Y108.845 E6.71495 ; perimeter ;WIDTH:0.444917 G1 X118.231 Y108.727 E6.7167 ; perimeter ;WIDTH:0.489835 G1 X118.305 Y108.61 E6.71864 ; perimeter ;WIDTH:0.534752 G1 X118.327 Y108.575 E6.71928 ; perimeter G1 X118.649 Y108.338 F9000 ; move inwards before travel G1 X118.447 Y108.006 ; move to first perimeter point G1 X121.034 Y107.961 ; move to first perimeter point G1 X121.748 Y108.474 ; move to first perimeter point G1 X121.84 Y108.567 ; move to first perimeter point G1 X121.745 Y108.662 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.432577 G1 F2250 G1 X121.897 Y108.901 E6.72274 ; perimeter ;WIDTH:0.474706 G1 X122.05 Y109.14 E6.72658 ; perimeter ;WIDTH:0.502218 G1 X122.153 Y109.426 E6.73096 ; perimeter ;WIDTH:0.52973 G1 X122.257 Y109.712 E6.7356 ; perimeter ;WIDTH:0.558436 G1 X122.381 Y110.393 E6.74679 ; perimeter ;WIDTH:0.565436 G1 X122.424 Y111.185 E6.75978 ; perimeter G1 X122.391 Y111.945 E6.77224 ; perimeter ;WIDTH:0.555308 G1 X122.289 Y112.611 E6.78306 ; perimeter ;WIDTH:0.532508 G1 X122.113 Y113.189 E6.79233 ; perimeter ;WIDTH:0.495618 G1 X121.981 Y113.434 E6.79628 ; perimeter ;WIDTH:0.467625 G1 X121.849 Y113.679 E6.79999 ; perimeter ;WIDTH:0.439632 G1 X121.705 Y113.842 E6.8027 ; perimeter G1 X121.802 Y113.937 F9000 ; move to first perimeter point G1 X119.705 Y114.679 ; move to first perimeter point G1 X117.686 Y113.795 ; move to first perimeter point G1 X117.654 Y113.736 ; move to first perimeter point G1 X117.769 Y113.674 ; move to first perimeter point ;WIDTH:0.428144 G1 F2250 G1 X117.513 Y113.171 E6.80952 ; perimeter ;WIDTH:0.477329 G1 X117.415 Y112.928 E6.81309 ; perimeter ;WIDTH:0.526514 G1 X117.316 Y112.686 E6.81705 ; perimeter G1 X117.219 Y111.997 E6.8276 ; perimeter ;WIDTH:0.530951 G1 X117.187 Y111.618 E6.83342 ; perimeter ;WIDTH:0.559864 G1 X117.154 Y111.238 E6.8396 ; perimeter G1 X117.186 Y110.503 E6.85152 ; perimeter ;WIDTH:0.554708 G1 X117.294 Y109.847 E6.86219 ; perimeter ;WIDTH:0.52903 G1 X117.48 Y109.269 E6.87144 ; perimeter ;WIDTH:0.486726 G1 X117.617 Y109.021 E6.87538 ; perimeter ;WIDTH:0.45646 G1 X117.754 Y108.773 E6.87905 ; perimeter ;WIDTH:0.426194 G1 X117.888 Y108.617 E6.88152 ; perimeter G1 X117.486 Y113.923 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X116.909 Y112.813 E6.89552 ; perimeter G1 X116.712 Y111.159 E6.91417 ; perimeter G1 X116.765 Y110.336 E6.9234 ; perimeter G1 X116.92 Y109.6 E6.93182 ; perimeter G1 X117.19 Y108.956 E6.93964 ; perimeter G1 X117.515 Y108.48 E6.94609 ; perimeter ;WIDTH:0.441053 G1 X117.668 Y108.37 E6.94844 ; perimeter ;WIDTH:0.482107 G1 X117.821 Y108.259 E6.95104 ; perimeter ;WIDTH:0.523161 G1 X117.973 Y108.149 E6.95386 ; perimeter G1 X118.421 Y107.9 E6.96158 ; perimeter ;WIDTH:0.518743 G1 X118.652 Y107.818 E6.96524 ; perimeter ;WIDTH:0.496196 G1 X119.209 Y107.683 E6.97338 ; perimeter ;WIDTH:0.475583 G1 X119.775 Y107.64 E6.98108 ; perimeter ;WIDTH:0.48493 G1 X120.495 Y107.705 E6.9911 ; perimeter ;WIDTH:0.502287 G1 X120.997 Y107.847 E6.99861 ; perimeter ;WIDTH:0.529434 G1 X121.625 Y108.181 E7.00946 ; perimeter ;WIDTH:0.48885 G1 X121.79 Y108.282 E7.01216 ; perimeter ;WIDTH:0.448265 G1 X121.954 Y108.383 E7.01461 ; perimeter ;WIDTH:0.40768 G1 X122.112 Y108.54 E7.01716 ; perimeter ;WIDTH:0.399999 G1 X122.461 Y109.091 E7.02446 ; perimeter G1 X122.692 Y109.735 E7.03212 ; perimeter G1 X122.822 Y110.459 E7.04035 ; perimeter G1 X122.865 Y111.237 E7.04907 ; perimeter G1 X122.812 Y112.125 E7.05903 ; perimeter G1 X122.662 Y112.883 E7.06768 ; perimeter G1 X122.41 Y113.513 E7.07528 ; perimeter G1 X122.084 Y113.984 E7.08169 ; perimeter ;WIDTH:0.437477 G1 X121.937 Y114.087 E7.08391 ; perimeter ;WIDTH:0.474955 G1 X121.789 Y114.19 E7.08635 ; perimeter ;WIDTH:0.512433 G1 X121.642 Y114.292 E7.08898 ; perimeter ;WIDTH:0.522119 G1 X121.188 Y114.52 E7.09661 ; perimeter G1 X120.929 Y114.606 E7.10071 ; perimeter ;WIDTH:0.495605 G1 X120.37 Y114.729 E7.10883 ; perimeter ;WIDTH:0.473786 G1 X119.746 Y114.763 E7.11727 ; perimeter ;WIDTH:0.468761 G1 X119.161 Y114.675 E7.12517 ; perimeter ;WIDTH:0.484181 G1 X118.81 Y114.601 E7.13013 ; perimeter ;WIDTH:0.517386 G1 X118.459 Y114.526 E7.13547 ; perimeter G1 X118.044 Y114.24 E7.14297 ; perimeter ;WIDTH:0.516089 G1 X117.858 Y114.134 E7.14615 ; perimeter ;WIDTH:0.477393 G1 X117.672 Y114.029 E7.14906 ; perimeter ;WIDTH:0.438696 G1 X117.538 Y113.953 E7.15097 ; perimeter G1 X117.328 Y113.612 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:2.6 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 12; ;LAYER:12 G1 E.65097 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z2.6 F9000 ; simple layer change G1 X117.531 Y113.507 ; travel to first layer point G1 X114.52 Y113.431 ; travel to first layer point G1 X114.252 Y113.414 ; travel to first layer point G1 X111.434 Y113.232 ; travel to first layer point G1 X111.167 Y113.215 ; travel to first layer point G1 X108.354 Y113.034 ; travel to first layer point G1 X107.026 Y114.485 ; travel to first layer point G1 X104.582 Y114.398 ; travel to first layer point G1 X103.285 Y112.707 ; travel to first layer point G1 X100.363 Y112.518 ; travel to first layer point G1 X93.675 Y112.551 ; travel to first layer point G1 X93.657 Y112.1 ; travel to first layer point G1 X93.792 Y112.095 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.59053 G1 F2250 G1 X93.787 Y111.986 E6.50187 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y108.184 E6.56601 ; perimeter G1 X93.787 Y116.443 F9000 ; move to first perimeter point G1 F2250 G1 X93.787 Y113.028 E6.62362 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.399111 G1 F2250 G1 X94.175 Y112.549 E6.62581 ; perimeter ;WIDTH:0.420375 G1 X94.028 Y112.641 E6.62786 ; perimeter ;WIDTH:0.460542 G1 X93.968 Y112.737 E6.62934 ; perimeter ;WIDTH:0.500709 G1 X93.908 Y112.834 E6.63098 ; perimeter ;WIDTH:0.540876 G1 X93.847 Y112.931 E6.63277 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y113.028 E6.63469 ; perimeter G1 X93.767 Y112.898 E6.63691 ; perimeter ;WIDTH:0.540876 G1 X93.747 Y112.767 E6.63898 ; perimeter ;WIDTH:0.500709 G1 X93.727 Y112.637 E6.64087 ; perimeter ;WIDTH:0.460542 G1 X93.707 Y112.507 E6.64259 ; perimeter ;WIDTH:0.462914 G1 X93.728 Y112.404 E6.64397 ; perimeter ;WIDTH:0.505453 G1 X93.749 Y112.301 E6.64549 ; perimeter ;WIDTH:0.547992 G1 X93.77 Y112.198 E6.64715 ; perimeter ;WIDTH:0.59053 G1 X93.792 Y112.095 E6.64896 ; perimeter G1 X93.851 Y112.164 E6.65052 ; perimeter ;WIDTH:0.547992 G1 X93.91 Y112.234 E6.65197 ; perimeter ;WIDTH:0.505453 G1 X93.969 Y112.303 E6.65329 ; perimeter ;WIDTH:0.462914 G1 X94.028 Y112.373 E6.6545 ; perimeter ;WIDTH:0.420375 G1 X94.175 Y112.465 E6.65655 ; perimeter ;WIDTH:0.399111 G1 X94.309 Y112.494 E6.65808 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.374822 G1 F2250 G1 X99.623 Y112.507 E6.71277 ; perimeter G1 X100.249 Y116.443 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y113.028 E6.77038 ; perimeter G1 X100.245 Y112.095 F9000 ; move to first perimeter point ;WIDTH:0.590528 G1 F2250 G1 X100.266 Y112.198 E6.77218 ; perimeter ;WIDTH:0.54799 G1 X100.287 Y112.301 E6.77384 ; perimeter ;WIDTH:0.505452 G1 X100.308 Y112.404 E6.77536 ; perimeter ;WIDTH:0.462914 G1 X100.33 Y112.507 E6.77675 ; perimeter ;WIDTH:0.460542 G1 X100.31 Y112.637 E6.77847 ; perimeter ;WIDTH:0.500708 G1 X100.29 Y112.767 E6.78036 ; perimeter ;WIDTH:0.540874 G1 X100.269 Y112.898 E6.78243 ; perimeter ;WIDTH:0.58104 G1 X100.249 Y113.028 E6.78465 ; perimeter G1 X100.189 Y112.931 E6.78657 ; perimeter ;WIDTH:0.540874 G1 X100.129 Y112.834 E6.78835 ; perimeter ;WIDTH:0.500708 G1 X100.068 Y112.737 E6.78999 ; perimeter ;WIDTH:0.460542 G1 X100.008 Y112.641 E6.79147 ; perimeter ;WIDTH:0.420375 G1 X99.862 Y112.547 E6.79352 ; perimeter ;WIDTH:0.402898 G1 X99.623 Y112.507 E6.79625 ; perimeter G1 X99.862 Y112.467 E6.79898 ; perimeter ;WIDTH:0.420375 G1 X100.008 Y112.373 E6.80103 ; perimeter ;WIDTH:0.462914 G1 X100.067 Y112.303 E6.80224 ; perimeter ;WIDTH:0.505452 G1 X100.126 Y112.234 E6.80356 ; perimeter ;WIDTH:0.54799 G1 X100.185 Y112.164 E6.80501 ; perimeter ;WIDTH:0.590528 G1 X100.206 Y112.14 E6.80556 ; perimeter G1 X100.249 Y108.184 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y111.986 E6.8697 ; perimeter ;WIDTH:0.590528 G1 X100.245 Y112.095 E6.87157 ; perimeter G1 X99.752 Y112.907 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F1500 G1 X99.749 Y112.901 E6.87165 ; perimeter G1 X99.623 Y112.849 E6.87318 ; perimeter G1 X94.413 Y112.849 E6.9315 ; perimeter G1 X94.334 Y112.868 E6.93241 ; perimeter G1 X94.235 Y113.028 E6.93452 ; perimeter G1 X94.235 Y116.891 E6.97777 ; perimeter G1 X93.339 Y116.891 E6.9878 ; perimeter G1 X93.339 Y107.736 E7.09029 ; perimeter G1 X94.235 Y107.736 E7.10032 ; perimeter G1 X94.235 Y111.986 E7.1479 ; perimeter G1 X94.287 Y112.112 E7.14943 ; perimeter G1 X94.413 Y112.164 E7.15096 ; perimeter G1 X99.623 Y112.164 E7.20928 ; perimeter G1 X99.749 Y112.112 E7.21081 ; perimeter G1 X99.802 Y111.986 E7.21234 ; perimeter G1 X99.802 Y107.736 E7.25992 ; perimeter G1 X100.697 Y107.736 E7.26994 ; perimeter G1 X100.697 Y108.184 E7.27496 ; perimeter G1 X100.697 Y116.891 E7.37243 ; perimeter G1 X99.802 Y116.891 E7.38245 ; perimeter G1 X99.802 Y113.028 E7.4257 ; perimeter G1 X99.775 Y112.963 E7.42649 ; perimeter G1 X99.389 Y112.856 F9000 ; move inwards before travel G1 E.92649 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.389 Y112.641 F9000 ; move to first perimeter point G1 X100.364 Y112.61 ; move to first perimeter point G1 X103.157 Y111.905 ; move to first perimeter point G1 X103.764 Y111.549 ; move to first perimeter point G1 X103.764 Y111.752 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.438366 G1 F2250 G1 X103.787 Y111.694 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.839 Y111.666 E6.50155 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.638 E6.50239 ; perimeter G1 X107.9 Y111.638 E6.55849 ; perimeter G1 X107.979 Y111.709 E6.55998 ; perimeter ;WIDTH:0.44468 G1 X108.059 Y111.779 E6.56132 ; perimeter ;WIDTH:0.399999 G1 X108.077 Y111.886 E6.56253 ; perimeter G1 X107.998 Y112.452 E6.56893 ; perimeter G1 X107.87 Y112.939 E6.57457 ; perimeter G1 X107.612 Y113.463 E6.58111 ; perimeter ;WIDTH:0.438032 G1 X107.56 Y113.565 E6.58253 ; perimeter ;WIDTH:0.476065 G1 X107.507 Y113.666 E6.58408 ; perimeter ;WIDTH:0.514097 G1 X107.455 Y113.768 E6.58577 ; perimeter G1 X107.016 Y114.094 E6.59385 ; perimeter ;WIDTH:0.510783 G1 X106.752 Y114.198 E6.59801 ; perimeter ;WIDTH:0.46551 G1 X106.332 Y114.297 E6.60373 ; perimeter ;WIDTH:0.470099 G1 X105.863 Y114.341 E6.61004 ; perimeter ;WIDTH:0.486022 G1 X105.303 Y114.277 E6.61787 ; perimeter ;WIDTH:0.516688 G1 X104.807 Y114.098 E6.6257 ; perimeter ;WIDTH:0.547117 G1 X104.45 Y113.863 E6.63246 ; perimeter G1 X104.391 Y113.766 E6.63425 ; perimeter ;WIDTH:0.498078 G1 X104.331 Y113.67 E6.63587 ; perimeter ;WIDTH:0.449039 G1 X104.272 Y113.574 E6.6373 ; perimeter ;WIDTH:0.399999 G1 X104.063 Y113.273 E6.6414 ; perimeter G1 X103.882 Y112.86 E6.64645 ; perimeter G1 X103.767 Y112.396 E6.6518 ; perimeter G1 X103.714 Y111.88 E6.65761 ; perimeter ;WIDTH:0.438366 G1 X103.742 Y111.808 E6.65857 ; perimeter G1 X104.105 Y111.641 F9000 ; move inwards before travel G1 X104.105 Y111.281 ; move to first perimeter point G1 X108.582 Y111.401 ; move to first perimeter point G1 X107.931 Y113.839 ; move to first perimeter point G1 X105.804 Y114.685 ; move to first perimeter point G1 X104.129 Y114.098 ; move to first perimeter point G1 X103.898 Y113.864 ; move to first perimeter point G1 X103.99 Y113.773 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.415434 G1 F2250 G1 X103.73 Y113.422 E6.66367 ; perimeter ;WIDTH:0.458638 G1 X103.507 Y112.955 E6.67041 ; perimeter ;WIDTH:0.497754 G1 X103.363 Y112.437 E6.67808 ; perimeter ;WIDTH:0.538968 G1 X103.29 Y111.923 E6.68615 ; perimeter ;WIDTH:0.584825 G1 X103.305 Y111.798 E6.68829 ; perimeter ;WIDTH:0.630681 G1 X103.32 Y111.673 E6.69061 ; perimeter ;WIDTH:0.676538 G1 X103.335 Y111.548 E6.69311 ; perimeter ;WIDTH:0.722394 G1 X103.35 Y111.422 E6.69581 ; perimeter G1 X103.322 Y111.337 E6.69772 ; perimeter ;WIDTH:0.67601 G1 X103.293 Y111.251 E6.69952 ; perimeter ;WIDTH:0.629626 G1 X103.282 Y111.093 E6.70243 ; perimeter ;WIDTH:0.588436 G1 X103.271 Y110.935 E6.70514 ; perimeter ;WIDTH:0.547246 G1 X103.327 Y110.24 E6.71616 ; perimeter ;WIDTH:0.520872 G1 X103.437 Y109.703 E6.72437 ; perimeter ;WIDTH:0.502432 G1 X103.638 Y109.175 E6.73251 ; perimeter ;WIDTH:0.471914 G1 X103.905 Y108.751 E6.73925 ; perimeter ;WIDTH:0.43226 G1 X104.067 Y108.577 E6.74215 ; perimeter G1 X103.975 Y108.481 F9000 ; move to first perimeter point G1 X103.134 Y111.014 ; move to first perimeter point G1 X103.803 Y113.768 ; move to first perimeter point G1 X105.895 Y114.691 ; move to first perimeter point G1 X107.984 Y113.786 ; move to first perimeter point G1 X108.6 Y111.767 ; move to first perimeter point G1 X108.591 Y111.573 ; move to first perimeter point G1 X108.443 Y111.58 ; move to first perimeter point ;WIDTH:0.552282 G1 F2250 G1 X108.447 Y111.7 E6.74407 ; perimeter ;WIDTH:0.517227 G1 X108.451 Y111.819 E6.74584 ; perimeter ;WIDTH:0.482172 G1 X108.454 Y111.938 E6.74748 ; perimeter ;WIDTH:0.458504 G1 X108.381 Y112.505 E6.75493 ; perimeter G1 X108.296 Y112.768 E6.75853 ; perimeter ;WIDTH:0.424891 G1 X108.211 Y113.03 E6.76183 ; perimeter ;WIDTH:0.391278 G1 X107.996 Y113.491 E6.76739 ; perimeter ;WIDTH:0.385752 G1 X107.896 Y113.668 E6.76958 ; perimeter G1 X108.013 Y113.737 F9000 ; move to first perimeter point G1 X108.582 Y111.401 ; move to first perimeter point G1 X104.17 Y111.281 ; move to first perimeter point G1 X103.754 Y111.281 ; move to first perimeter point G1 X103.754 Y111.082 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.438366 G1 F2250 G1 X103.779 Y111.139 E6.77035 ; perimeter ;WIDTH:0.463863 G1 X103.835 Y111.165 E6.77116 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.192 E6.77204 ; perimeter G1 X107.9 Y111.192 E6.82814 ; perimeter G1 X108.416 Y111.169 E6.83537 ; perimeter ;WIDTH:0.44468 G1 X108.931 Y111.147 E6.84186 ; perimeter ;WIDTH:0.399999 G1 X108.74 Y112.758 E6.86002 ; perimeter G1 X108.171 Y113.901 E6.87431 ; perimeter ;WIDTH:0.438032 G1 X108.03 Y113.98 E6.87631 ; perimeter ;WIDTH:0.476065 G1 X107.888 Y114.059 E6.87852 ; perimeter ;WIDTH:0.514097 G1 X107.747 Y114.138 E6.88091 ; perimeter G1 X107.26 Y114.492 E6.8898 ; perimeter ;WIDTH:0.510783 G1 X106.878 Y114.604 E6.89564 ; perimeter ;WIDTH:0.467891 G1 X106.382 Y114.699 E6.90237 ; perimeter ;WIDTH:0.470099 G1 X105.827 Y114.767 E6.90986 ; perimeter ;WIDTH:0.486022 G1 X105.18 Y114.702 E6.91889 ; perimeter ;WIDTH:0.516688 G1 X104.578 Y114.513 E6.92826 ; perimeter ;WIDTH:0.537825 G1 X103.924 Y114.116 E6.94013 ; perimeter ;WIDTH:0.491883 G1 X103.773 Y114.011 E6.94272 ; perimeter ;WIDTH:0.445941 G1 X103.622 Y113.906 E6.94504 ; perimeter ;WIDTH:0.399999 G1 X103.275 Y113.405 E6.95186 ; perimeter G1 X103.025 Y112.798 E6.95921 ; perimeter G1 X102.872 Y112.081 E6.96742 ; perimeter G1 X102.82 Y111.252 E6.97672 ; perimeter G1 X102.872 Y110.381 E6.98649 ; perimeter G1 X103.025 Y109.633 E6.99504 ; perimeter G1 X103.276 Y109.009 E7.00257 ; perimeter G1 X103.597 Y108.54 E7.00893 ; perimeter G1 X103.833 Y108.315 E7.01258 ; perimeter ;WIDTH:0.445318 G1 X103.999 Y108.225 E7.01496 ; perimeter ;WIDTH:0.490637 G1 X104.164 Y108.135 E7.0176 ; perimeter ;WIDTH:0.535955 G1 X104.801 Y107.827 E7.02854 ; perimeter ;WIDTH:0.504491 G1 X105.346 Y107.691 E7.03667 ; perimeter ;WIDTH:0.483771 G1 X105.893 Y107.645 E7.04426 ; perimeter ;WIDTH:0.477736 G1 X106.394 Y107.681 E7.05111 ; perimeter ;WIDTH:0.503692 G1 X106.922 Y107.753 E7.05881 ; perimeter G1 X107.21 Y107.848 E7.06319 ; perimeter ;WIDTH:0.540193 G1 X107.685 Y108.055 E7.07127 ; perimeter G1 X107.877 Y108.193 E7.07496 ; perimeter ;WIDTH:0.558363 G1 X108.254 Y108.529 E7.08312 ; perimeter G1 X108.522 Y108.966 E7.0914 ; perimeter ;WIDTH:0.557882 G1 X108.008 Y109.112 E7.10003 ; perimeter G1 X107.909 Y108.932 E7.10335 ; perimeter G1 X107.588 Y108.584 E7.11099 ; perimeter ;WIDTH:0.530427 G1 X107.025 Y108.257 E7.12094 ; perimeter ;WIDTH:0.492381 G1 X106.381 Y108.107 E7.13026 ; perimeter ;WIDTH:0.477099 G1 X105.961 Y108.078 E7.13599 ; perimeter ;WIDTH:0.480471 G1 X105.454 Y108.12 E7.14297 ; perimeter ;WIDTH:0.501174 G1 X104.989 Y108.249 E7.1499 ; perimeter ;WIDTH:0.539254 G1 X104.549 Y108.488 E7.15769 ; perimeter G1 X104.451 Y108.624 E7.1603 ; perimeter ;WIDTH:0.492836 G1 X104.352 Y108.76 E7.16267 ; perimeter ;WIDTH:0.446418 G1 X104.254 Y108.895 E7.16478 ; perimeter ;WIDTH:0.399999 G1 X104 Y109.332 E7.17044 ; perimeter G1 X103.829 Y109.829 E7.17632 ; perimeter G1 X103.735 Y110.34 E7.18214 ; perimeter G1 X103.701 Y110.959 E7.18908 ; perimeter ;WIDTH:0.438366 G1 X103.73 Y111.027 E7.19 ; perimeter G1 X104.096 Y111.188 F9000 ; move inwards before travel G1 E.69 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.096 Y111.281 F9000 ; move to first perimeter point G1 X108.582 Y111.401 ; move to first perimeter point G1 X107.931 Y113.839 ; move to first perimeter point G1 X107.672 Y114.068 ; move to first perimeter point G1 X111.301 Y117.064 ; move to first perimeter point G1 X111.301 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506442 G1 F2250 G1 X111.301 Y108.146 E6.62851 ; perimeter G1 X111.711 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X111.711 Y108.146 E6.6331 ; perimeter G1 X111.711 Y117.4 E6.7367 ; perimeter G1 X110.89 Y117.4 E6.74589 ; perimeter G1 X110.89 Y107.736 E6.85408 ; perimeter G1 X111.651 Y107.736 E6.8626 ; perimeter G1 X111.71 Y108.132 F9000 ; move inwards before travel G1 E.3626 F1500 ; retract G92 E0 ; reset extrusion distance G1 X111.42 Y108.168 F9000 ; move to first perimeter point G1 X114.386 Y117.064 ; move to first perimeter point G1 X114.386 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.50644 G1 F2250 G1 X114.386 Y108.146 E6.6285 ; perimeter G1 X114.797 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X114.797 Y108.146 E6.63309 ; perimeter G1 X114.797 Y117.4 E6.73669 ; perimeter G1 X113.976 Y117.4 E6.74588 ; perimeter G1 X113.976 Y107.736 E6.85407 ; perimeter G1 X114.737 Y107.736 E6.86259 ; perimeter G1 X114.796 Y108.132 F9000 ; move inwards before travel G1 E.36259 F1500 ; retract G92 E0 ; reset extrusion distance G1 X114.506 Y108.168 F9000 ; move to first perimeter point G1 X117.844 Y108.468 ; move to first perimeter point G1 X118.296 Y108.417 ; move to first perimeter point G1 X118.359 Y108.525 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.534752 G1 F2250 G1 X118.379 Y108.493 E6.50058 ; perimeter G1 X118.786 Y108.251 E6.50788 ; perimeter ;WIDTH:0.496195 G1 X119.247 Y108.112 E6.51472 ; perimeter ;WIDTH:0.47793 G1 X119.745 Y108.075 E6.52153 ; perimeter G1 X120.274 Y108.11 E6.52876 ; perimeter ;WIDTH:0.492361 G1 X120.76 Y108.244 E6.53586 ; perimeter ;WIDTH:0.529434 G1 X121.2 Y108.489 E6.54354 ; perimeter G1 X121.289 Y108.617 E6.54592 ; perimeter ;WIDTH:0.48885 G1 X121.378 Y108.746 E6.54811 ; perimeter ;WIDTH:0.448266 G1 X121.468 Y108.874 E6.5501 ; perimeter ;WIDTH:0.407681 G1 X121.699 Y109.32 E6.55584 ; perimeter ;WIDTH:0.399999 G1 X121.852 Y109.831 E6.56181 ; perimeter G1 X121.949 Y110.456 E6.56889 ; perimeter G1 X121.985 Y111.204 E6.57727 ; perimeter G1 X121.956 Y111.928 E6.58538 ; perimeter G1 X121.87 Y112.552 E6.59243 ; perimeter G1 X121.723 Y113.079 E6.59855 ; perimeter G1 X121.486 Y113.549 E6.60444 ; perimeter ;WIDTH:0.445292 G1 X121.396 Y113.681 E6.60646 ; perimeter ;WIDTH:0.490585 G1 X121.306 Y113.813 E6.6087 ; perimeter ;WIDTH:0.535877 G1 X121.216 Y113.945 E6.61117 ; perimeter G1 X120.805 Y114.171 E6.61842 ; perimeter ;WIDTH:0.495606 G1 X120.335 Y114.3 E6.62534 ; perimeter ;WIDTH:0.473786 G1 X119.834 Y114.342 E6.63213 ; perimeter ;WIDTH:0.470433 G1 X119.298 Y114.287 E6.63935 ; perimeter ;WIDTH:0.497376 G1 X118.766 Y114.144 E6.6472 ; perimeter ;WIDTH:0.516089 G1 X118.355 Y113.887 E6.65439 ; perimeter G1 X118.268 Y113.758 E6.6567 ; perimeter ;WIDTH:0.477393 G1 X118.18 Y113.629 E6.65883 ; perimeter ;WIDTH:0.438696 G1 X118.093 Y113.5 E6.66076 ; perimeter ;WIDTH:0.399999 G1 X117.869 Y113.064 E6.66625 ; perimeter G1 X117.718 Y112.562 E6.67212 ; perimeter G1 X117.623 Y111.937 E6.6792 ; perimeter G1 X117.591 Y111.219 E6.68725 ; perimeter G1 X117.62 Y110.521 E6.69507 ; perimeter G1 X117.711 Y109.91 E6.70199 ; perimeter G1 X117.864 Y109.383 E6.70813 ; perimeter G1 X118.088 Y108.932 E6.71377 ; perimeter G1 X118.158 Y108.845 E6.71502 ; perimeter ;WIDTH:0.444917 G1 X118.231 Y108.727 E6.71677 ; perimeter ;WIDTH:0.489835 G1 X118.305 Y108.61 E6.71871 ; perimeter ;WIDTH:0.534752 G1 X118.327 Y108.575 E6.71935 ; perimeter G1 X118.649 Y108.338 F9000 ; move inwards before travel G1 X118.446 Y108.007 ; move to first perimeter point G1 X121.033 Y107.961 ; move to first perimeter point G1 X121.567 Y108.295 ; move to first perimeter point G1 X121.839 Y108.567 ; move to first perimeter point G1 X121.745 Y108.662 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.432575 G1 F2250 G1 X121.897 Y108.901 E6.72281 ; perimeter ;WIDTH:0.474704 G1 X122.05 Y109.14 E6.72665 ; perimeter ;WIDTH:0.502217 G1 X122.153 Y109.426 E6.73103 ; perimeter ;WIDTH:0.52973 G1 X122.257 Y109.712 E6.73567 ; perimeter ;WIDTH:0.558436 G1 X122.381 Y110.393 E6.74686 ; perimeter ;WIDTH:0.565436 G1 X122.424 Y111.185 E6.75985 ; perimeter G1 X122.391 Y111.945 E6.77231 ; perimeter ;WIDTH:0.555306 G1 X122.289 Y112.611 E6.78313 ; perimeter ;WIDTH:0.532508 G1 X122.113 Y113.189 E6.7924 ; perimeter ;WIDTH:0.495614 G1 X121.981 Y113.434 E6.79635 ; perimeter ;WIDTH:0.467625 G1 X121.849 Y113.679 E6.80006 ; perimeter ;WIDTH:0.439636 G1 X121.705 Y113.842 E6.80277 ; perimeter G1 X121.801 Y113.938 F9000 ; move to first perimeter point G1 X119.805 Y114.69 ; move to first perimeter point G1 X117.686 Y113.795 ; move to first perimeter point G1 X117.654 Y113.736 ; move to first perimeter point G1 X117.769 Y113.674 ; move to first perimeter point ;WIDTH:0.428144 G1 F2250 G1 X117.513 Y113.171 E6.80959 ; perimeter ;WIDTH:0.477329 G1 X117.415 Y112.928 E6.81316 ; perimeter ;WIDTH:0.526514 G1 X117.316 Y112.686 E6.81712 ; perimeter G1 X117.219 Y111.997 E6.82767 ; perimeter ;WIDTH:0.530951 G1 X117.187 Y111.618 E6.83349 ; perimeter ;WIDTH:0.559864 G1 X117.154 Y111.238 E6.83967 ; perimeter G1 X117.186 Y110.503 E6.85159 ; perimeter ;WIDTH:0.554708 G1 X117.294 Y109.847 E6.86226 ; perimeter ;WIDTH:0.52903 G1 X117.48 Y109.269 E6.87151 ; perimeter ;WIDTH:0.486724 G1 X117.617 Y109.021 E6.87545 ; perimeter ;WIDTH:0.456459 G1 X117.754 Y108.773 E6.87912 ; perimeter ;WIDTH:0.426194 G1 X117.888 Y108.617 E6.88159 ; perimeter G1 X117.486 Y113.923 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X116.909 Y112.813 E6.89559 ; perimeter G1 X116.712 Y111.159 E6.91424 ; perimeter G1 X116.765 Y110.336 E6.92347 ; perimeter G1 X116.92 Y109.6 E6.93189 ; perimeter G1 X117.19 Y108.956 E6.93971 ; perimeter G1 X117.515 Y108.48 E6.94616 ; perimeter ;WIDTH:0.441053 G1 X117.668 Y108.37 E6.94851 ; perimeter ;WIDTH:0.482107 G1 X117.821 Y108.259 E6.95111 ; perimeter ;WIDTH:0.523161 G1 X117.973 Y108.149 E6.95393 ; perimeter G1 X118.421 Y107.9 E6.96165 ; perimeter ;WIDTH:0.518743 G1 X118.652 Y107.818 E6.96531 ; perimeter ;WIDTH:0.496195 G1 X119.209 Y107.683 E6.97345 ; perimeter ;WIDTH:0.47793 G1 X119.775 Y107.642 E6.98119 ; perimeter ;WIDTH:0.484931 G1 X120.495 Y107.705 E6.99121 ; perimeter ;WIDTH:0.502287 G1 X120.997 Y107.847 E6.99872 ; perimeter ;WIDTH:0.529434 G1 X121.625 Y108.181 E7.00957 ; perimeter ;WIDTH:0.48885 G1 X121.79 Y108.282 E7.01227 ; perimeter ;WIDTH:0.448266 G1 X121.954 Y108.383 E7.01472 ; perimeter ;WIDTH:0.407681 G1 X122.112 Y108.54 E7.01727 ; perimeter ;WIDTH:0.399999 G1 X122.461 Y109.091 E7.02457 ; perimeter G1 X122.692 Y109.735 E7.03223 ; perimeter G1 X122.822 Y110.459 E7.04046 ; perimeter G1 X122.865 Y111.237 E7.04918 ; perimeter G1 X122.812 Y112.125 E7.05914 ; perimeter G1 X122.662 Y112.883 E7.06779 ; perimeter G1 X122.41 Y113.513 E7.07539 ; perimeter G1 X122.084 Y113.984 E7.0818 ; perimeter ;WIDTH:0.437478 G1 X121.937 Y114.087 E7.08402 ; perimeter ;WIDTH:0.474957 G1 X121.789 Y114.19 E7.08646 ; perimeter ;WIDTH:0.512436 G1 X121.642 Y114.292 E7.08909 ; perimeter ;WIDTH:0.522118 G1 X121.188 Y114.52 E7.09672 ; perimeter G1 X120.929 Y114.606 E7.10082 ; perimeter ;WIDTH:0.495606 G1 X120.37 Y114.729 E7.10894 ; perimeter ;WIDTH:0.473786 G1 X119.746 Y114.763 E7.11738 ; perimeter ;WIDTH:0.468761 G1 X119.161 Y114.675 E7.12528 ; perimeter ;WIDTH:0.484182 G1 X118.81 Y114.601 E7.13024 ; perimeter ;WIDTH:0.517387 G1 X118.459 Y114.526 E7.13558 ; perimeter G1 X118.044 Y114.24 E7.14308 ; perimeter ;WIDTH:0.516089 G1 X117.858 Y114.134 E7.14626 ; perimeter ;WIDTH:0.477393 G1 X117.672 Y114.029 E7.14917 ; perimeter ;WIDTH:0.438696 G1 X117.538 Y113.953 E7.15108 ; perimeter G1 X117.328 Y113.612 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:2.8 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 13; ;LAYER:13 G1 E.65108 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z2.8 F9000 ; simple layer change G1 X117.534 Y113.508 ; travel to first layer point G1 X114.52 Y113.431 ; travel to first layer point G1 X114.252 Y113.414 ; travel to first layer point G1 X111.434 Y113.232 ; travel to first layer point G1 X111.167 Y113.215 ; travel to first layer point G1 X108.355 Y113.034 ; travel to first layer point G1 X106.934 Y114.511 ; travel to first layer point G1 X104.545 Y114.377 ; travel to first layer point G1 X103.285 Y112.707 ; travel to first layer point G1 X100.363 Y112.518 ; travel to first layer point G1 X93.675 Y112.551 ; travel to first layer point G1 X93.657 Y112.1 ; travel to first layer point G1 X93.792 Y112.095 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.59053 G1 F2250 G1 X93.787 Y111.986 E6.50187 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y108.184 E6.56601 ; perimeter G1 X93.787 Y116.443 F9000 ; move to first perimeter point G1 F2250 G1 X93.787 Y113.028 E6.62362 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.399111 G1 F2250 G1 X94.175 Y112.549 E6.62581 ; perimeter ;WIDTH:0.420375 G1 X94.028 Y112.641 E6.62786 ; perimeter ;WIDTH:0.460542 G1 X93.968 Y112.737 E6.62934 ; perimeter ;WIDTH:0.500709 G1 X93.908 Y112.834 E6.63098 ; perimeter ;WIDTH:0.540876 G1 X93.847 Y112.931 E6.63277 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y113.028 E6.63469 ; perimeter G1 X93.767 Y112.898 E6.63691 ; perimeter ;WIDTH:0.540876 G1 X93.747 Y112.767 E6.63898 ; perimeter ;WIDTH:0.500709 G1 X93.727 Y112.637 E6.64087 ; perimeter ;WIDTH:0.460542 G1 X93.707 Y112.507 E6.64259 ; perimeter ;WIDTH:0.462914 G1 X93.728 Y112.404 E6.64397 ; perimeter ;WIDTH:0.505453 G1 X93.749 Y112.301 E6.64549 ; perimeter ;WIDTH:0.547992 G1 X93.77 Y112.198 E6.64715 ; perimeter ;WIDTH:0.59053 G1 X93.792 Y112.095 E6.64896 ; perimeter G1 X93.851 Y112.164 E6.65052 ; perimeter ;WIDTH:0.547992 G1 X93.91 Y112.234 E6.65197 ; perimeter ;WIDTH:0.505453 G1 X93.969 Y112.303 E6.65329 ; perimeter ;WIDTH:0.462914 G1 X94.028 Y112.373 E6.6545 ; perimeter ;WIDTH:0.420375 G1 X94.175 Y112.465 E6.65655 ; perimeter ;WIDTH:0.399111 G1 X94.309 Y112.494 E6.65808 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.374822 G1 F2250 G1 X99.623 Y112.507 E6.71277 ; perimeter G1 X100.249 Y116.443 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y113.028 E6.77038 ; perimeter G1 X100.245 Y112.095 F9000 ; move to first perimeter point ;WIDTH:0.590528 G1 F2250 G1 X100.266 Y112.198 E6.77218 ; perimeter ;WIDTH:0.54799 G1 X100.287 Y112.301 E6.77384 ; perimeter ;WIDTH:0.505452 G1 X100.308 Y112.404 E6.77536 ; perimeter ;WIDTH:0.462914 G1 X100.33 Y112.507 E6.77675 ; perimeter ;WIDTH:0.460542 G1 X100.31 Y112.637 E6.77847 ; perimeter ;WIDTH:0.500708 G1 X100.29 Y112.767 E6.78036 ; perimeter ;WIDTH:0.540874 G1 X100.269 Y112.898 E6.78243 ; perimeter ;WIDTH:0.58104 G1 X100.249 Y113.028 E6.78465 ; perimeter G1 X100.189 Y112.931 E6.78657 ; perimeter ;WIDTH:0.540874 G1 X100.129 Y112.834 E6.78835 ; perimeter ;WIDTH:0.500708 G1 X100.068 Y112.737 E6.78999 ; perimeter ;WIDTH:0.460542 G1 X100.008 Y112.641 E6.79147 ; perimeter ;WIDTH:0.420375 G1 X99.862 Y112.547 E6.79352 ; perimeter ;WIDTH:0.402898 G1 X99.623 Y112.507 E6.79625 ; perimeter G1 X99.862 Y112.467 E6.79898 ; perimeter ;WIDTH:0.420375 G1 X100.008 Y112.373 E6.80103 ; perimeter ;WIDTH:0.462914 G1 X100.067 Y112.303 E6.80224 ; perimeter ;WIDTH:0.505452 G1 X100.126 Y112.234 E6.80356 ; perimeter ;WIDTH:0.54799 G1 X100.185 Y112.164 E6.80501 ; perimeter ;WIDTH:0.590528 G1 X100.206 Y112.14 E6.80556 ; perimeter G1 X100.249 Y108.184 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y111.986 E6.8697 ; perimeter ;WIDTH:0.590528 G1 X100.245 Y112.095 E6.87157 ; perimeter G1 X99.752 Y112.907 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F1500 G1 X99.749 Y112.901 E6.87165 ; perimeter G1 X99.623 Y112.849 E6.87318 ; perimeter G1 X94.413 Y112.849 E6.9315 ; perimeter G1 X94.334 Y112.868 E6.93241 ; perimeter G1 X94.235 Y113.028 E6.93452 ; perimeter G1 X94.235 Y116.891 E6.97777 ; perimeter G1 X93.339 Y116.891 E6.9878 ; perimeter G1 X93.339 Y107.736 E7.09029 ; perimeter G1 X94.235 Y107.736 E7.10032 ; perimeter G1 X94.235 Y111.986 E7.1479 ; perimeter G1 X94.287 Y112.112 E7.14943 ; perimeter G1 X94.413 Y112.164 E7.15096 ; perimeter G1 X99.623 Y112.164 E7.20928 ; perimeter G1 X99.749 Y112.112 E7.21081 ; perimeter G1 X99.802 Y111.986 E7.21234 ; perimeter G1 X99.802 Y107.736 E7.25992 ; perimeter G1 X100.697 Y107.736 E7.26994 ; perimeter G1 X100.697 Y108.184 E7.27496 ; perimeter G1 X100.697 Y116.891 E7.37243 ; perimeter G1 X99.802 Y116.891 E7.38245 ; perimeter G1 X99.802 Y113.028 E7.4257 ; perimeter G1 X99.775 Y112.963 E7.42649 ; perimeter G1 X99.389 Y112.856 F9000 ; move inwards before travel G1 E.92649 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.389 Y112.641 F9000 ; move to first perimeter point G1 X100.364 Y112.61 ; move to first perimeter point G1 X103.157 Y111.905 ; move to first perimeter point G1 X103.764 Y111.549 ; move to first perimeter point G1 X103.764 Y111.752 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.438366 G1 F2250 G1 X103.787 Y111.694 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.839 Y111.666 E6.50155 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.638 E6.50239 ; perimeter G1 X107.9 Y111.638 E6.55849 ; perimeter G1 X107.979 Y111.709 E6.55998 ; perimeter ;WIDTH:0.44468 G1 X108.059 Y111.779 E6.56132 ; perimeter ;WIDTH:0.399999 G1 X108.077 Y111.886 E6.56253 ; perimeter G1 X107.998 Y112.452 E6.56893 ; perimeter G1 X107.87 Y112.939 E6.57457 ; perimeter G1 X107.612 Y113.463 E6.58111 ; perimeter ;WIDTH:0.438032 G1 X107.56 Y113.565 E6.58253 ; perimeter ;WIDTH:0.476065 G1 X107.507 Y113.666 E6.58408 ; perimeter ;WIDTH:0.514097 G1 X107.455 Y113.768 E6.58577 ; perimeter G1 X107.016 Y114.094 E6.59385 ; perimeter ;WIDTH:0.510783 G1 X106.752 Y114.198 E6.59801 ; perimeter ;WIDTH:0.46551 G1 X106.332 Y114.297 E6.60373 ; perimeter ;WIDTH:0.470099 G1 X105.863 Y114.341 E6.61004 ; perimeter ;WIDTH:0.486022 G1 X105.303 Y114.277 E6.61787 ; perimeter ;WIDTH:0.516687 G1 X104.807 Y114.098 E6.6257 ; perimeter ;WIDTH:0.547093 G1 X104.45 Y113.863 E6.63246 ; perimeter G1 X104.391 Y113.766 E6.63425 ; perimeter ;WIDTH:0.498062 G1 X104.331 Y113.67 E6.63587 ; perimeter ;WIDTH:0.449031 G1 X104.272 Y113.574 E6.6373 ; perimeter ;WIDTH:0.399999 G1 X104.063 Y113.273 E6.6414 ; perimeter G1 X103.882 Y112.86 E6.64645 ; perimeter G1 X103.767 Y112.396 E6.6518 ; perimeter G1 X103.714 Y111.88 E6.65761 ; perimeter ;WIDTH:0.438366 G1 X103.742 Y111.808 E6.65857 ; perimeter G1 X104.105 Y111.641 F9000 ; move inwards before travel G1 X104.105 Y111.281 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X107.871 Y113.898 ; move to first perimeter point G1 X105.754 Y114.681 ; move to first perimeter point G1 X104.098 Y114.07 ; move to first perimeter point G1 X103.897 Y113.864 ; move to first perimeter point G1 X103.99 Y113.773 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.415434 G1 F2250 G1 X103.73 Y113.422 E6.66367 ; perimeter ;WIDTH:0.458638 G1 X103.507 Y112.955 E6.67041 ; perimeter ;WIDTH:0.497754 G1 X103.363 Y112.437 E6.67808 ; perimeter ;WIDTH:0.538968 G1 X103.29 Y111.923 E6.68615 ; perimeter ;WIDTH:0.584825 G1 X103.305 Y111.798 E6.68829 ; perimeter ;WIDTH:0.630681 G1 X103.32 Y111.673 E6.69061 ; perimeter ;WIDTH:0.676538 G1 X103.335 Y111.548 E6.69311 ; perimeter ;WIDTH:0.722394 G1 X103.35 Y111.422 E6.69581 ; perimeter G1 X103.322 Y111.337 E6.69772 ; perimeter ;WIDTH:0.67601 G1 X103.293 Y111.251 E6.69952 ; perimeter ;WIDTH:0.629626 G1 X103.282 Y111.093 E6.70243 ; perimeter ;WIDTH:0.588436 G1 X103.271 Y110.935 E6.70514 ; perimeter ;WIDTH:0.547246 G1 X103.327 Y110.24 E6.71616 ; perimeter ;WIDTH:0.520872 G1 X103.437 Y109.703 E6.72437 ; perimeter ;WIDTH:0.502432 G1 X103.638 Y109.175 E6.73251 ; perimeter ;WIDTH:0.471914 G1 X103.905 Y108.751 E6.73925 ; perimeter ;WIDTH:0.43226 G1 X104.067 Y108.577 E6.74215 ; perimeter G1 X103.975 Y108.48 F9000 ; move to first perimeter point G1 X103.134 Y111.014 ; move to first perimeter point G1 X103.808 Y113.773 ; move to first perimeter point G1 X105.896 Y114.691 ; move to first perimeter point G1 X107.982 Y113.788 ; move to first perimeter point G1 X108.601 Y111.709 ; move to first perimeter point G1 X108.593 Y111.571 ; move to first perimeter point G1 X108.443 Y111.58 ; move to first perimeter point ;WIDTH:0.552284 G1 F2250 G1 X108.447 Y111.7 E6.74407 ; perimeter ;WIDTH:0.517228 G1 X108.451 Y111.819 E6.74584 ; perimeter ;WIDTH:0.482172 G1 X108.454 Y111.938 E6.74748 ; perimeter ;WIDTH:0.458504 G1 X108.381 Y112.505 E6.75493 ; perimeter G1 X108.296 Y112.768 E6.75853 ; perimeter ;WIDTH:0.424891 G1 X108.211 Y113.03 E6.76183 ; perimeter ;WIDTH:0.391278 G1 X107.996 Y113.491 E6.76739 ; perimeter ;WIDTH:0.385752 G1 X107.896 Y113.668 E6.76958 ; perimeter G1 X108.013 Y113.735 F9000 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X104.17 Y111.281 ; move to first perimeter point G1 X103.754 Y111.281 ; move to first perimeter point G1 X103.754 Y111.082 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.438366 G1 F2250 G1 X103.779 Y111.139 E6.77035 ; perimeter ;WIDTH:0.463863 G1 X103.835 Y111.165 E6.77116 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.192 E6.77204 ; perimeter G1 X107.9 Y111.192 E6.82814 ; perimeter G1 X108.416 Y111.169 E6.83537 ; perimeter ;WIDTH:0.44468 G1 X108.931 Y111.147 E6.84186 ; perimeter ;WIDTH:0.399999 G1 X108.74 Y112.758 E6.86002 ; perimeter G1 X108.171 Y113.901 E6.87431 ; perimeter ;WIDTH:0.438032 G1 X108.03 Y113.98 E6.87631 ; perimeter ;WIDTH:0.476065 G1 X107.888 Y114.059 E6.87852 ; perimeter ;WIDTH:0.514097 G1 X107.747 Y114.138 E6.88091 ; perimeter G1 X107.26 Y114.492 E6.8898 ; perimeter ;WIDTH:0.510783 G1 X106.878 Y114.604 E6.89564 ; perimeter ;WIDTH:0.467891 G1 X106.382 Y114.699 E6.90237 ; perimeter ;WIDTH:0.470099 G1 X105.827 Y114.767 E6.90986 ; perimeter ;WIDTH:0.486022 G1 X105.18 Y114.702 E6.91889 ; perimeter ;WIDTH:0.516687 G1 X104.578 Y114.513 E6.92826 ; perimeter ;WIDTH:0.537751 G1 X103.924 Y114.116 E6.94013 ; perimeter ;WIDTH:0.491834 G1 X103.773 Y114.011 E6.94272 ; perimeter ;WIDTH:0.445917 G1 X103.622 Y113.906 E6.94504 ; perimeter ;WIDTH:0.399999 G1 X103.275 Y113.405 E6.95186 ; perimeter G1 X103.025 Y112.798 E6.95921 ; perimeter G1 X102.872 Y112.081 E6.96742 ; perimeter G1 X102.82 Y111.252 E6.97672 ; perimeter G1 X102.872 Y110.381 E6.98649 ; perimeter G1 X103.025 Y109.633 E6.99504 ; perimeter G1 X103.276 Y109.009 E7.00257 ; perimeter G1 X103.597 Y108.54 E7.00893 ; perimeter G1 X103.833 Y108.315 E7.01258 ; perimeter ;WIDTH:0.445318 G1 X103.999 Y108.225 E7.01496 ; perimeter ;WIDTH:0.490637 G1 X104.164 Y108.135 E7.0176 ; perimeter ;WIDTH:0.535955 G1 X104.801 Y107.827 E7.02854 ; perimeter ;WIDTH:0.504492 G1 X105.346 Y107.691 E7.03667 ; perimeter ;WIDTH:0.483771 G1 X105.893 Y107.645 E7.04426 ; perimeter ;WIDTH:0.477736 G1 X106.394 Y107.681 E7.05111 ; perimeter ;WIDTH:0.503685 G1 X106.922 Y107.753 E7.05881 ; perimeter G1 X107.264 Y107.869 E7.06403 ; perimeter ;WIDTH:0.535372 G1 X107.758 Y108.095 E7.07242 ; perimeter ;WIDTH:0.559025 G1 X108.253 Y108.529 E7.08307 ; perimeter ;WIDTH:0.559465 G1 X108.52 Y108.965 E7.09135 ; perimeter G1 X108.007 Y109.111 E7.09999 ; perimeter G1 X107.832 Y108.821 E7.10548 ; perimeter ;WIDTH:0.547079 G1 X107.434 Y108.466 E7.11391 ; perimeter ;WIDTH:0.535372 G1 X107.025 Y108.257 E7.121 ; perimeter ;WIDTH:0.492377 G1 X106.381 Y108.107 E7.13032 ; perimeter ;WIDTH:0.477099 G1 X105.961 Y108.078 E7.13605 ; perimeter ;WIDTH:0.480471 G1 X105.454 Y108.12 E7.14303 ; perimeter ;WIDTH:0.501175 G1 X104.989 Y108.249 E7.14996 ; perimeter ;WIDTH:0.539254 G1 X104.549 Y108.488 E7.15775 ; perimeter G1 X104.451 Y108.624 E7.16036 ; perimeter ;WIDTH:0.492836 G1 X104.352 Y108.76 E7.16273 ; perimeter ;WIDTH:0.446418 G1 X104.254 Y108.895 E7.16484 ; perimeter ;WIDTH:0.399999 G1 X104 Y109.332 E7.1705 ; perimeter G1 X103.829 Y109.829 E7.17638 ; perimeter G1 X103.735 Y110.34 E7.1822 ; perimeter G1 X103.701 Y110.959 E7.18914 ; perimeter ;WIDTH:0.438366 G1 X103.73 Y111.027 E7.19006 ; perimeter G1 X104.096 Y111.188 F9000 ; move inwards before travel G1 E.69006 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.096 Y111.281 F9000 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X107.871 Y113.898 ; move to first perimeter point G1 X107.672 Y114.068 ; move to first perimeter point G1 X111.301 Y117.064 ; move to first perimeter point G1 X111.301 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506442 G1 F2250 G1 X111.301 Y108.146 E6.62851 ; perimeter G1 X111.711 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X111.711 Y108.146 E6.6331 ; perimeter G1 X111.711 Y117.4 E6.7367 ; perimeter G1 X110.89 Y117.4 E6.74589 ; perimeter G1 X110.89 Y107.736 E6.85408 ; perimeter G1 X111.651 Y107.736 E6.8626 ; perimeter G1 X111.71 Y108.132 F9000 ; move inwards before travel G1 E.3626 F1500 ; retract G92 E0 ; reset extrusion distance G1 X111.42 Y108.168 F9000 ; move to first perimeter point G1 X114.386 Y117.064 ; move to first perimeter point G1 X114.386 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.50644 G1 F2250 G1 X114.386 Y108.146 E6.6285 ; perimeter G1 X114.797 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X114.797 Y108.146 E6.63309 ; perimeter G1 X114.797 Y117.4 E6.73669 ; perimeter G1 X113.976 Y117.4 E6.74588 ; perimeter G1 X113.976 Y107.736 E6.85407 ; perimeter G1 X114.737 Y107.736 E6.86259 ; perimeter G1 X114.796 Y108.132 F9000 ; move inwards before travel G1 E.36259 F1500 ; retract G92 E0 ; reset extrusion distance G1 X114.506 Y108.168 F9000 ; move to first perimeter point G1 X117.843 Y108.468 ; move to first perimeter point G1 X118.296 Y108.417 ; move to first perimeter point G1 X118.359 Y108.525 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.534749 G1 F2250 G1 X118.379 Y108.493 E6.50058 ; perimeter G1 X118.786 Y108.251 E6.50788 ; perimeter ;WIDTH:0.496195 G1 X119.247 Y108.112 E6.51472 ; perimeter ;WIDTH:0.474055 G1 X119.751 Y108.067 E6.52156 ; perimeter ;WIDTH:0.473836 G1 X120.276 Y108.111 E6.52868 ; perimeter ;WIDTH:0.49236 G1 X120.76 Y108.244 E6.53575 ; perimeter ;WIDTH:0.529434 G1 X121.2 Y108.489 E6.54343 ; perimeter G1 X121.289 Y108.617 E6.54581 ; perimeter ;WIDTH:0.48885 G1 X121.378 Y108.746 E6.548 ; perimeter ;WIDTH:0.448265 G1 X121.468 Y108.874 E6.54999 ; perimeter ;WIDTH:0.40768 G1 X121.699 Y109.32 E6.55573 ; perimeter ;WIDTH:0.399999 G1 X121.852 Y109.831 E6.5617 ; perimeter G1 X121.949 Y110.456 E6.56878 ; perimeter G1 X121.985 Y111.204 E6.57716 ; perimeter G1 X121.956 Y111.928 E6.58527 ; perimeter G1 X121.87 Y112.552 E6.59232 ; perimeter G1 X121.723 Y113.079 E6.59844 ; perimeter G1 X121.486 Y113.549 E6.60433 ; perimeter ;WIDTH:0.445292 G1 X121.396 Y113.681 E6.60635 ; perimeter ;WIDTH:0.490585 G1 X121.306 Y113.813 E6.60859 ; perimeter ;WIDTH:0.535877 G1 X121.216 Y113.945 E6.61106 ; perimeter G1 X120.805 Y114.171 E6.61831 ; perimeter ;WIDTH:0.495606 G1 X120.335 Y114.3 E6.62523 ; perimeter ;WIDTH:0.473786 G1 X119.834 Y114.342 E6.63202 ; perimeter ;WIDTH:0.470433 G1 X119.298 Y114.287 E6.63924 ; perimeter ;WIDTH:0.497375 G1 X118.766 Y114.144 E6.64709 ; perimeter ;WIDTH:0.516089 G1 X118.355 Y113.887 E6.65428 ; perimeter G1 X118.268 Y113.758 E6.65659 ; perimeter ;WIDTH:0.477393 G1 X118.18 Y113.629 E6.65872 ; perimeter ;WIDTH:0.438696 G1 X118.093 Y113.5 E6.66065 ; perimeter ;WIDTH:0.399999 G1 X117.869 Y113.064 E6.66614 ; perimeter G1 X117.718 Y112.562 E6.67201 ; perimeter G1 X117.623 Y111.937 E6.67909 ; perimeter G1 X117.591 Y111.219 E6.68714 ; perimeter G1 X117.62 Y110.521 E6.69496 ; perimeter G1 X117.711 Y109.91 E6.70188 ; perimeter G1 X117.864 Y109.383 E6.70802 ; perimeter G1 X118.088 Y108.932 E6.71366 ; perimeter G1 X118.158 Y108.845 E6.71491 ; perimeter ;WIDTH:0.444916 G1 X118.231 Y108.727 E6.71666 ; perimeter ;WIDTH:0.489833 G1 X118.305 Y108.61 E6.7186 ; perimeter ;WIDTH:0.534749 G1 X118.327 Y108.575 E6.71924 ; perimeter G1 X118.649 Y108.338 F9000 ; move inwards before travel G1 X118.446 Y108.006 ; move to first perimeter point G1 X121.032 Y107.96 ; move to first perimeter point G1 X121.597 Y108.325 ; move to first perimeter point G1 X121.839 Y108.567 ; move to first perimeter point G1 X121.745 Y108.662 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.432575 G1 F2250 G1 X121.897 Y108.901 E6.7227 ; perimeter ;WIDTH:0.474704 G1 X122.05 Y109.14 E6.72654 ; perimeter ;WIDTH:0.502218 G1 X122.153 Y109.426 E6.73092 ; perimeter ;WIDTH:0.529732 G1 X122.257 Y109.712 E6.73556 ; perimeter ;WIDTH:0.558436 G1 X122.381 Y110.393 E6.74675 ; perimeter ;WIDTH:0.565436 G1 X122.424 Y111.185 E6.75974 ; perimeter G1 X122.391 Y111.945 E6.7722 ; perimeter ;WIDTH:0.555306 G1 X122.289 Y112.611 E6.78302 ; perimeter ;WIDTH:0.532506 G1 X122.113 Y113.189 E6.79229 ; perimeter ;WIDTH:0.495618 G1 X121.981 Y113.434 E6.79624 ; perimeter ;WIDTH:0.467625 G1 X121.849 Y113.679 E6.79995 ; perimeter ;WIDTH:0.439632 G1 X121.705 Y113.842 E6.80266 ; perimeter G1 X121.801 Y113.938 F9000 ; move to first perimeter point G1 X119.805 Y114.69 ; move to first perimeter point G1 X117.686 Y113.795 ; move to first perimeter point G1 X117.654 Y113.736 ; move to first perimeter point G1 X117.769 Y113.674 ; move to first perimeter point ;WIDTH:0.428144 G1 F2250 G1 X117.513 Y113.171 E6.80948 ; perimeter ;WIDTH:0.477329 G1 X117.415 Y112.928 E6.81305 ; perimeter ;WIDTH:0.526514 G1 X117.316 Y112.686 E6.81701 ; perimeter G1 X117.219 Y111.997 E6.82756 ; perimeter ;WIDTH:0.530951 G1 X117.187 Y111.618 E6.83338 ; perimeter ;WIDTH:0.559864 G1 X117.154 Y111.238 E6.83956 ; perimeter G1 X117.186 Y110.503 E6.85148 ; perimeter ;WIDTH:0.554708 G1 X117.294 Y109.847 E6.86215 ; perimeter ;WIDTH:0.52903 G1 X117.48 Y109.269 E6.8714 ; perimeter ;WIDTH:0.486728 G1 X117.617 Y109.021 E6.87534 ; perimeter ;WIDTH:0.456461 G1 X117.754 Y108.773 E6.87901 ; perimeter ;WIDTH:0.426194 G1 X117.888 Y108.617 E6.88148 ; perimeter G1 X117.486 Y113.923 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X116.909 Y112.813 E6.89548 ; perimeter G1 X116.712 Y111.159 E6.91413 ; perimeter G1 X116.765 Y110.336 E6.92336 ; perimeter G1 X116.92 Y109.6 E6.93178 ; perimeter G1 X117.19 Y108.956 E6.9396 ; perimeter G1 X117.515 Y108.48 E6.94605 ; perimeter ;WIDTH:0.441054 G1 X117.668 Y108.37 E6.9484 ; perimeter ;WIDTH:0.482108 G1 X117.821 Y108.259 E6.951 ; perimeter ;WIDTH:0.523162 G1 X117.973 Y108.149 E6.95382 ; perimeter G1 X118.421 Y107.9 E6.96154 ; perimeter ;WIDTH:0.518741 G1 X118.652 Y107.818 E6.9652 ; perimeter ;WIDTH:0.496195 G1 X119.209 Y107.683 E6.97334 ; perimeter ;WIDTH:0.474055 G1 X119.797 Y107.64 E6.98131 ; perimeter ;WIDTH:0.484929 G1 X120.495 Y107.705 E6.99102 ; perimeter ;WIDTH:0.502287 G1 X120.997 Y107.847 E6.99853 ; perimeter ;WIDTH:0.529434 G1 X121.625 Y108.181 E7.00938 ; perimeter ;WIDTH:0.48885 G1 X121.79 Y108.282 E7.01208 ; perimeter ;WIDTH:0.448265 G1 X121.954 Y108.383 E7.01453 ; perimeter ;WIDTH:0.40768 G1 X122.112 Y108.54 E7.01708 ; perimeter ;WIDTH:0.399999 G1 X122.461 Y109.091 E7.02438 ; perimeter G1 X122.692 Y109.735 E7.03204 ; perimeter G1 X122.822 Y110.459 E7.04027 ; perimeter G1 X122.865 Y111.237 E7.04899 ; perimeter G1 X122.812 Y112.125 E7.05895 ; perimeter G1 X122.662 Y112.883 E7.0676 ; perimeter G1 X122.41 Y113.513 E7.0752 ; perimeter G1 X122.084 Y113.984 E7.08161 ; perimeter ;WIDTH:0.437478 G1 X121.937 Y114.087 E7.08383 ; perimeter ;WIDTH:0.474957 G1 X121.789 Y114.19 E7.08627 ; perimeter ;WIDTH:0.512436 G1 X121.642 Y114.292 E7.0889 ; perimeter ;WIDTH:0.522117 G1 X121.188 Y114.52 E7.09653 ; perimeter G1 X120.929 Y114.606 E7.10063 ; perimeter ;WIDTH:0.495606 G1 X120.37 Y114.729 E7.10875 ; perimeter ;WIDTH:0.473786 G1 X119.746 Y114.763 E7.11719 ; perimeter ;WIDTH:0.468761 G1 X119.161 Y114.675 E7.12509 ; perimeter ;WIDTH:0.484182 G1 X118.81 Y114.601 E7.13005 ; perimeter ;WIDTH:0.517387 G1 X118.459 Y114.526 E7.13539 ; perimeter G1 X118.044 Y114.24 E7.14289 ; perimeter ;WIDTH:0.516089 G1 X117.858 Y114.134 E7.14607 ; perimeter ;WIDTH:0.477393 G1 X117.672 Y114.029 E7.14898 ; perimeter ;WIDTH:0.438696 G1 X117.538 Y113.953 E7.15089 ; perimeter G1 X117.328 Y113.612 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:3 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 14; ;LAYER:14 G1 E.65089 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z3 F9000 ; simple layer change G1 X117.532 Y113.507 ; travel to first layer point G1 X114.52 Y113.431 ; travel to first layer point G1 X114.252 Y113.414 ; travel to first layer point G1 X111.434 Y113.232 ; travel to first layer point G1 X111.167 Y113.215 ; travel to first layer point G1 X108.35 Y113.033 ; travel to first layer point G1 X106.84 Y114.533 ; travel to first layer point G1 X104.508 Y114.356 ; travel to first layer point G1 X103.285 Y112.707 ; travel to first layer point G1 X100.363 Y112.518 ; travel to first layer point G1 X93.675 Y112.551 ; travel to first layer point G1 X93.657 Y112.1 ; travel to first layer point G1 X93.792 Y112.095 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.59053 G1 F2250 G1 X93.787 Y111.986 E6.50187 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y108.184 E6.56601 ; perimeter G1 X93.787 Y116.443 F9000 ; move to first perimeter point G1 F2250 G1 X93.787 Y113.028 E6.62362 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.399111 G1 F2250 G1 X94.175 Y112.549 E6.62581 ; perimeter ;WIDTH:0.420375 G1 X94.028 Y112.641 E6.62786 ; perimeter ;WIDTH:0.460542 G1 X93.968 Y112.737 E6.62934 ; perimeter ;WIDTH:0.500709 G1 X93.908 Y112.834 E6.63098 ; perimeter ;WIDTH:0.540876 G1 X93.847 Y112.931 E6.63277 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y113.028 E6.63469 ; perimeter G1 X93.767 Y112.898 E6.63691 ; perimeter ;WIDTH:0.540876 G1 X93.747 Y112.767 E6.63898 ; perimeter ;WIDTH:0.500709 G1 X93.727 Y112.637 E6.64087 ; perimeter ;WIDTH:0.460542 G1 X93.707 Y112.507 E6.64259 ; perimeter ;WIDTH:0.462914 G1 X93.728 Y112.404 E6.64397 ; perimeter ;WIDTH:0.505453 G1 X93.749 Y112.301 E6.64549 ; perimeter ;WIDTH:0.547992 G1 X93.77 Y112.198 E6.64715 ; perimeter ;WIDTH:0.59053 G1 X93.792 Y112.095 E6.64896 ; perimeter G1 X93.851 Y112.164 E6.65052 ; perimeter ;WIDTH:0.547992 G1 X93.91 Y112.234 E6.65197 ; perimeter ;WIDTH:0.505453 G1 X93.969 Y112.303 E6.65329 ; perimeter ;WIDTH:0.462914 G1 X94.028 Y112.373 E6.6545 ; perimeter ;WIDTH:0.420375 G1 X94.175 Y112.465 E6.65655 ; perimeter ;WIDTH:0.399111 G1 X94.309 Y112.494 E6.65808 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.374822 G1 F2250 G1 X99.623 Y112.507 E6.71277 ; perimeter G1 X100.249 Y116.443 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y113.028 E6.77038 ; perimeter G1 X100.245 Y112.095 F9000 ; move to first perimeter point ;WIDTH:0.590528 G1 F2250 G1 X100.266 Y112.198 E6.77218 ; perimeter ;WIDTH:0.54799 G1 X100.287 Y112.301 E6.77384 ; perimeter ;WIDTH:0.505452 G1 X100.308 Y112.404 E6.77536 ; perimeter ;WIDTH:0.462914 G1 X100.33 Y112.507 E6.77675 ; perimeter ;WIDTH:0.460542 G1 X100.31 Y112.637 E6.77847 ; perimeter ;WIDTH:0.500708 G1 X100.29 Y112.767 E6.78036 ; perimeter ;WIDTH:0.540874 G1 X100.269 Y112.898 E6.78243 ; perimeter ;WIDTH:0.58104 G1 X100.249 Y113.028 E6.78465 ; perimeter G1 X100.189 Y112.931 E6.78657 ; perimeter ;WIDTH:0.540874 G1 X100.129 Y112.834 E6.78835 ; perimeter ;WIDTH:0.500708 G1 X100.068 Y112.737 E6.78999 ; perimeter ;WIDTH:0.460542 G1 X100.008 Y112.641 E6.79147 ; perimeter ;WIDTH:0.420375 G1 X99.862 Y112.547 E6.79352 ; perimeter ;WIDTH:0.402898 G1 X99.623 Y112.507 E6.79625 ; perimeter G1 X99.862 Y112.467 E6.79898 ; perimeter ;WIDTH:0.420375 G1 X100.008 Y112.373 E6.80103 ; perimeter ;WIDTH:0.462914 G1 X100.067 Y112.303 E6.80224 ; perimeter ;WIDTH:0.505452 G1 X100.126 Y112.234 E6.80356 ; perimeter ;WIDTH:0.54799 G1 X100.185 Y112.164 E6.80501 ; perimeter ;WIDTH:0.590528 G1 X100.206 Y112.14 E6.80556 ; perimeter G1 X100.249 Y108.184 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y111.986 E6.8697 ; perimeter ;WIDTH:0.590528 G1 X100.245 Y112.095 E6.87157 ; perimeter G1 X99.752 Y112.907 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F1500 G1 X99.749 Y112.901 E6.87165 ; perimeter G1 X99.623 Y112.849 E6.87318 ; perimeter G1 X94.413 Y112.849 E6.9315 ; perimeter G1 X94.334 Y112.868 E6.93241 ; perimeter G1 X94.235 Y113.028 E6.93452 ; perimeter G1 X94.235 Y116.891 E6.97777 ; perimeter G1 X93.339 Y116.891 E6.9878 ; perimeter G1 X93.339 Y107.736 E7.09029 ; perimeter G1 X94.235 Y107.736 E7.10032 ; perimeter G1 X94.235 Y111.986 E7.1479 ; perimeter G1 X94.287 Y112.112 E7.14943 ; perimeter G1 X94.413 Y112.164 E7.15096 ; perimeter G1 X99.623 Y112.164 E7.20928 ; perimeter G1 X99.749 Y112.112 E7.21081 ; perimeter G1 X99.802 Y111.986 E7.21234 ; perimeter G1 X99.802 Y107.736 E7.25992 ; perimeter G1 X100.697 Y107.736 E7.26994 ; perimeter G1 X100.697 Y108.184 E7.27496 ; perimeter G1 X100.697 Y116.891 E7.37243 ; perimeter G1 X99.802 Y116.891 E7.38245 ; perimeter G1 X99.802 Y113.028 E7.4257 ; perimeter G1 X99.775 Y112.963 E7.42649 ; perimeter G1 X99.389 Y112.856 F9000 ; move inwards before travel G1 E.92649 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.389 Y112.641 F9000 ; move to first perimeter point G1 X100.364 Y112.61 ; move to first perimeter point G1 X103.157 Y111.905 ; move to first perimeter point G1 X103.764 Y111.549 ; move to first perimeter point G1 X103.764 Y111.752 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.438366 G1 F2250 G1 X103.787 Y111.694 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.839 Y111.666 E6.50155 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.638 E6.50239 ; perimeter G1 X107.9 Y111.638 E6.55849 ; perimeter G1 X107.979 Y111.709 E6.55998 ; perimeter ;WIDTH:0.44468 G1 X108.059 Y111.779 E6.56132 ; perimeter ;WIDTH:0.399999 G1 X108.077 Y111.886 E6.56253 ; perimeter G1 X107.998 Y112.452 E6.56893 ; perimeter G1 X107.87 Y112.939 E6.57457 ; perimeter G1 X107.612 Y113.463 E6.58111 ; perimeter ;WIDTH:0.438032 G1 X107.56 Y113.565 E6.58253 ; perimeter ;WIDTH:0.476065 G1 X107.507 Y113.666 E6.58408 ; perimeter ;WIDTH:0.514097 G1 X107.455 Y113.768 E6.58577 ; perimeter G1 X107.016 Y114.094 E6.59385 ; perimeter ;WIDTH:0.510783 G1 X106.752 Y114.198 E6.59801 ; perimeter ;WIDTH:0.46551 G1 X106.332 Y114.297 E6.60373 ; perimeter ;WIDTH:0.470099 G1 X105.863 Y114.341 E6.61004 ; perimeter ;WIDTH:0.486022 G1 X105.303 Y114.277 E6.61787 ; perimeter ;WIDTH:0.516688 G1 X104.807 Y114.098 E6.6257 ; perimeter ;WIDTH:0.547117 G1 X104.45 Y113.863 E6.63246 ; perimeter G1 X104.391 Y113.766 E6.63425 ; perimeter ;WIDTH:0.498078 G1 X104.331 Y113.67 E6.63587 ; perimeter ;WIDTH:0.449039 G1 X104.272 Y113.574 E6.6373 ; perimeter ;WIDTH:0.399999 G1 X104.063 Y113.273 E6.6414 ; perimeter G1 X103.882 Y112.86 E6.64645 ; perimeter G1 X103.767 Y112.396 E6.6518 ; perimeter G1 X103.714 Y111.88 E6.65761 ; perimeter ;WIDTH:0.438366 G1 X103.742 Y111.808 E6.65857 ; perimeter G1 X104.105 Y111.641 F9000 ; move inwards before travel G1 X104.105 Y111.281 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X107.809 Y113.955 ; move to first perimeter point G1 X105.704 Y114.677 ; move to first perimeter point G1 X104.067 Y114.041 ; move to first perimeter point G1 X103.896 Y113.864 ; move to first perimeter point G1 X103.99 Y113.773 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.415434 G1 F2250 G1 X103.73 Y113.422 E6.66367 ; perimeter ;WIDTH:0.458638 G1 X103.507 Y112.955 E6.67041 ; perimeter ;WIDTH:0.497754 G1 X103.363 Y112.437 E6.67808 ; perimeter ;WIDTH:0.538968 G1 X103.29 Y111.923 E6.68615 ; perimeter ;WIDTH:0.584825 G1 X103.305 Y111.798 E6.68829 ; perimeter ;WIDTH:0.630681 G1 X103.32 Y111.673 E6.69061 ; perimeter ;WIDTH:0.676538 G1 X103.335 Y111.548 E6.69311 ; perimeter ;WIDTH:0.722394 G1 X103.35 Y111.422 E6.69581 ; perimeter G1 X103.322 Y111.337 E6.69772 ; perimeter ;WIDTH:0.67601 G1 X103.293 Y111.251 E6.69952 ; perimeter ;WIDTH:0.629626 G1 X103.282 Y111.093 E6.70243 ; perimeter ;WIDTH:0.588436 G1 X103.271 Y110.935 E6.70514 ; perimeter ;WIDTH:0.547246 G1 X103.327 Y110.24 E6.71616 ; perimeter ;WIDTH:0.520872 G1 X103.437 Y109.703 E6.72437 ; perimeter ;WIDTH:0.502432 G1 X103.638 Y109.175 E6.73251 ; perimeter ;WIDTH:0.471914 G1 X103.905 Y108.751 E6.73925 ; perimeter ;WIDTH:0.43226 G1 X104.067 Y108.577 E6.74215 ; perimeter G1 X103.974 Y108.48 F9000 ; move to first perimeter point G1 X103.134 Y111.014 ; move to first perimeter point G1 X103.808 Y113.774 ; move to first perimeter point G1 X105.896 Y114.69 ; move to first perimeter point G1 X107.981 Y113.788 ; move to first perimeter point G1 X108.601 Y111.713 ; move to first perimeter point G1 X108.593 Y111.571 ; move to first perimeter point G1 X108.443 Y111.58 ; move to first perimeter point ;WIDTH:0.552284 G1 F2250 G1 X108.447 Y111.7 E6.74407 ; perimeter ;WIDTH:0.517228 G1 X108.451 Y111.819 E6.74584 ; perimeter ;WIDTH:0.482172 G1 X108.454 Y111.938 E6.74748 ; perimeter ;WIDTH:0.458504 G1 X108.381 Y112.505 E6.75493 ; perimeter G1 X108.296 Y112.768 E6.75853 ; perimeter ;WIDTH:0.424891 G1 X108.211 Y113.03 E6.76183 ; perimeter ;WIDTH:0.391278 G1 X107.996 Y113.491 E6.76739 ; perimeter ;WIDTH:0.385752 G1 X107.896 Y113.668 E6.76958 ; perimeter G1 X108.012 Y113.732 F9000 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X104.17 Y111.281 ; move to first perimeter point G1 X103.754 Y111.281 ; move to first perimeter point G1 X103.754 Y111.082 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.438366 G1 F2250 G1 X103.779 Y111.139 E6.77035 ; perimeter ;WIDTH:0.463863 G1 X103.835 Y111.165 E6.77116 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.192 E6.77204 ; perimeter G1 X107.9 Y111.192 E6.82814 ; perimeter G1 X108.416 Y111.169 E6.83537 ; perimeter ;WIDTH:0.44468 G1 X108.931 Y111.147 E6.84186 ; perimeter ;WIDTH:0.399999 G1 X108.74 Y112.758 E6.86002 ; perimeter G1 X108.171 Y113.901 E6.87431 ; perimeter ;WIDTH:0.438032 G1 X108.03 Y113.98 E6.87631 ; perimeter ;WIDTH:0.476065 G1 X107.888 Y114.059 E6.87852 ; perimeter ;WIDTH:0.514097 G1 X107.747 Y114.138 E6.88091 ; perimeter G1 X107.26 Y114.492 E6.8898 ; perimeter ;WIDTH:0.510783 G1 X106.878 Y114.604 E6.89564 ; perimeter ;WIDTH:0.467891 G1 X106.382 Y114.699 E6.90237 ; perimeter ;WIDTH:0.470099 G1 X105.827 Y114.767 E6.90986 ; perimeter ;WIDTH:0.486022 G1 X105.18 Y114.702 E6.91889 ; perimeter ;WIDTH:0.516688 G1 X104.578 Y114.513 E6.92826 ; perimeter ;WIDTH:0.537825 G1 X103.924 Y114.116 E6.94013 ; perimeter ;WIDTH:0.491883 G1 X103.773 Y114.011 E6.94272 ; perimeter ;WIDTH:0.445941 G1 X103.622 Y113.906 E6.94504 ; perimeter ;WIDTH:0.399999 G1 X103.275 Y113.405 E6.95186 ; perimeter G1 X103.025 Y112.798 E6.95921 ; perimeter G1 X102.872 Y112.081 E6.96742 ; perimeter G1 X102.82 Y111.252 E6.97672 ; perimeter G1 X102.872 Y110.381 E6.98649 ; perimeter G1 X103.025 Y109.633 E6.99504 ; perimeter G1 X103.276 Y109.009 E7.00257 ; perimeter G1 X103.597 Y108.54 E7.00893 ; perimeter G1 X103.833 Y108.315 E7.01258 ; perimeter ;WIDTH:0.445318 G1 X103.999 Y108.225 E7.01496 ; perimeter ;WIDTH:0.490637 G1 X104.164 Y108.135 E7.0176 ; perimeter ;WIDTH:0.535955 G1 X104.801 Y107.827 E7.02854 ; perimeter ;WIDTH:0.504492 G1 X105.346 Y107.691 E7.03667 ; perimeter ;WIDTH:0.483771 G1 X105.893 Y107.645 E7.04426 ; perimeter ;WIDTH:0.477736 G1 X106.394 Y107.681 E7.05111 ; perimeter ;WIDTH:0.50368 G1 X106.922 Y107.753 E7.05881 ; perimeter G1 X107.264 Y107.869 E7.06403 ; perimeter ;WIDTH:0.535372 G1 X107.758 Y108.095 E7.07242 ; perimeter ;WIDTH:0.559025 G1 X108.253 Y108.529 E7.08307 ; perimeter ;WIDTH:0.559464 G1 X108.52 Y108.965 E7.09135 ; perimeter G1 X108.007 Y109.111 E7.09999 ; perimeter G1 X107.832 Y108.821 E7.10548 ; perimeter ;WIDTH:0.547078 G1 X107.434 Y108.466 E7.11391 ; perimeter ;WIDTH:0.535372 G1 X107.025 Y108.257 E7.121 ; perimeter ;WIDTH:0.492374 G1 X106.381 Y108.107 E7.13032 ; perimeter ;WIDTH:0.477099 G1 X105.961 Y108.078 E7.13605 ; perimeter ;WIDTH:0.480471 G1 X105.454 Y108.12 E7.14303 ; perimeter ;WIDTH:0.501175 G1 X104.989 Y108.249 E7.14996 ; perimeter ;WIDTH:0.539254 G1 X104.549 Y108.488 E7.15775 ; perimeter G1 X104.451 Y108.624 E7.16036 ; perimeter ;WIDTH:0.492836 G1 X104.352 Y108.76 E7.16273 ; perimeter ;WIDTH:0.446418 G1 X104.254 Y108.895 E7.16484 ; perimeter ;WIDTH:0.399999 G1 X104 Y109.332 E7.1705 ; perimeter G1 X103.829 Y109.829 E7.17638 ; perimeter G1 X103.735 Y110.34 E7.1822 ; perimeter G1 X103.701 Y110.959 E7.18914 ; perimeter ;WIDTH:0.438366 G1 X103.73 Y111.027 E7.19006 ; perimeter G1 X104.096 Y111.188 F9000 ; move inwards before travel G1 E.69006 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.096 Y111.281 F9000 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X107.809 Y113.955 ; move to first perimeter point G1 X107.671 Y114.067 ; move to first perimeter point G1 X111.301 Y117.064 ; move to first perimeter point G1 X111.301 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506442 G1 F2250 G1 X111.301 Y108.146 E6.62851 ; perimeter G1 X111.711 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X111.711 Y108.146 E6.6331 ; perimeter G1 X111.711 Y117.4 E6.7367 ; perimeter G1 X110.89 Y117.4 E6.74589 ; perimeter G1 X110.89 Y107.736 E6.85408 ; perimeter G1 X111.651 Y107.736 E6.8626 ; perimeter G1 X111.71 Y108.132 F9000 ; move inwards before travel G1 E.3626 F1500 ; retract G92 E0 ; reset extrusion distance G1 X111.42 Y108.168 F9000 ; move to first perimeter point G1 X114.386 Y117.064 ; move to first perimeter point G1 X114.386 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.50644 G1 F2250 G1 X114.386 Y108.146 E6.6285 ; perimeter G1 X114.797 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X114.797 Y108.146 E6.63309 ; perimeter G1 X114.797 Y117.4 E6.73669 ; perimeter G1 X113.976 Y117.4 E6.74588 ; perimeter G1 X113.976 Y107.736 E6.85407 ; perimeter G1 X114.737 Y107.736 E6.86259 ; perimeter G1 X114.796 Y108.132 F9000 ; move inwards before travel G1 E.36259 F1500 ; retract G92 E0 ; reset extrusion distance G1 X114.506 Y108.168 F9000 ; move to first perimeter point G1 X117.843 Y108.468 ; move to first perimeter point G1 X118.295 Y108.417 ; move to first perimeter point G1 X118.359 Y108.525 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.534751 G1 F2250 G1 X118.379 Y108.493 E6.50058 ; perimeter G1 X118.786 Y108.251 E6.50788 ; perimeter ;WIDTH:0.496195 G1 X119.247 Y108.112 E6.51472 ; perimeter ;WIDTH:0.474055 G1 X119.751 Y108.067 E6.52156 ; perimeter ;WIDTH:0.473836 G1 X120.276 Y108.111 E6.52868 ; perimeter ;WIDTH:0.49236 G1 X120.76 Y108.244 E6.53575 ; perimeter ;WIDTH:0.529434 G1 X121.2 Y108.489 E6.54343 ; perimeter G1 X121.289 Y108.617 E6.54581 ; perimeter ;WIDTH:0.48885 G1 X121.378 Y108.746 E6.548 ; perimeter ;WIDTH:0.448266 G1 X121.468 Y108.874 E6.54999 ; perimeter ;WIDTH:0.407681 G1 X121.699 Y109.32 E6.55573 ; perimeter ;WIDTH:0.399999 G1 X121.852 Y109.831 E6.5617 ; perimeter G1 X121.949 Y110.456 E6.56878 ; perimeter G1 X121.985 Y111.204 E6.57716 ; perimeter G1 X121.956 Y111.928 E6.58527 ; perimeter G1 X121.87 Y112.552 E6.59232 ; perimeter G1 X121.723 Y113.079 E6.59844 ; perimeter G1 X121.486 Y113.549 E6.60433 ; perimeter ;WIDTH:0.445292 G1 X121.396 Y113.681 E6.60635 ; perimeter ;WIDTH:0.490585 G1 X121.306 Y113.813 E6.60859 ; perimeter ;WIDTH:0.535877 G1 X121.216 Y113.945 E6.61106 ; perimeter G1 X120.805 Y114.171 E6.61831 ; perimeter ;WIDTH:0.495606 G1 X120.335 Y114.3 E6.62523 ; perimeter ;WIDTH:0.473786 G1 X119.834 Y114.342 E6.63202 ; perimeter ;WIDTH:0.470433 G1 X119.298 Y114.287 E6.63924 ; perimeter ;WIDTH:0.497376 G1 X118.766 Y114.144 E6.64709 ; perimeter ;WIDTH:0.516089 G1 X118.355 Y113.887 E6.65428 ; perimeter G1 X118.268 Y113.758 E6.65659 ; perimeter ;WIDTH:0.477393 G1 X118.18 Y113.629 E6.65872 ; perimeter ;WIDTH:0.438696 G1 X118.093 Y113.5 E6.66065 ; perimeter ;WIDTH:0.399999 G1 X117.869 Y113.064 E6.66614 ; perimeter G1 X117.718 Y112.562 E6.67201 ; perimeter G1 X117.623 Y111.937 E6.67909 ; perimeter G1 X117.591 Y111.219 E6.68714 ; perimeter G1 X117.62 Y110.521 E6.69496 ; perimeter G1 X117.711 Y109.91 E6.70188 ; perimeter G1 X117.864 Y109.383 E6.70802 ; perimeter G1 X118.088 Y108.932 E6.71366 ; perimeter G1 X118.158 Y108.845 E6.71491 ; perimeter ;WIDTH:0.444917 G1 X118.231 Y108.727 E6.71666 ; perimeter ;WIDTH:0.489834 G1 X118.305 Y108.61 E6.7186 ; perimeter ;WIDTH:0.534751 G1 X118.327 Y108.575 E6.71924 ; perimeter G1 X118.649 Y108.338 F9000 ; move inwards before travel G1 X118.447 Y108.006 ; move to first perimeter point G1 X121.031 Y107.959 ; move to first perimeter point G1 X121.627 Y108.354 ; move to first perimeter point G1 X121.84 Y108.567 ; move to first perimeter point G1 X121.745 Y108.662 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.432575 G1 F2250 G1 X121.897 Y108.901 E6.7227 ; perimeter ;WIDTH:0.474704 G1 X122.05 Y109.14 E6.72654 ; perimeter ;WIDTH:0.502218 G1 X122.153 Y109.426 E6.73092 ; perimeter ;WIDTH:0.529732 G1 X122.257 Y109.712 E6.73556 ; perimeter ;WIDTH:0.558436 G1 X122.381 Y110.393 E6.74675 ; perimeter ;WIDTH:0.565436 G1 X122.424 Y111.185 E6.75974 ; perimeter G1 X122.391 Y111.945 E6.7722 ; perimeter ;WIDTH:0.555306 G1 X122.289 Y112.611 E6.78302 ; perimeter ;WIDTH:0.532506 G1 X122.113 Y113.189 E6.79229 ; perimeter ;WIDTH:0.495616 G1 X121.981 Y113.434 E6.79624 ; perimeter ;WIDTH:0.467625 G1 X121.849 Y113.679 E6.79995 ; perimeter ;WIDTH:0.439634 G1 X121.705 Y113.842 E6.80266 ; perimeter G1 X121.801 Y113.938 F9000 ; move to first perimeter point G1 X119.805 Y114.69 ; move to first perimeter point G1 X117.686 Y113.795 ; move to first perimeter point G1 X117.654 Y113.736 ; move to first perimeter point G1 X117.769 Y113.674 ; move to first perimeter point ;WIDTH:0.428144 G1 F2250 G1 X117.513 Y113.171 E6.80948 ; perimeter ;WIDTH:0.477329 G1 X117.415 Y112.928 E6.81305 ; perimeter ;WIDTH:0.526514 G1 X117.316 Y112.686 E6.81701 ; perimeter G1 X117.219 Y111.997 E6.82756 ; perimeter ;WIDTH:0.530951 G1 X117.187 Y111.618 E6.83338 ; perimeter ;WIDTH:0.559864 G1 X117.154 Y111.238 E6.83956 ; perimeter G1 X117.186 Y110.503 E6.85148 ; perimeter ;WIDTH:0.554708 G1 X117.294 Y109.847 E6.86215 ; perimeter ;WIDTH:0.52903 G1 X117.48 Y109.269 E6.8714 ; perimeter ;WIDTH:0.486726 G1 X117.617 Y109.021 E6.87534 ; perimeter ;WIDTH:0.45646 G1 X117.754 Y108.773 E6.87901 ; perimeter ;WIDTH:0.426194 G1 X117.888 Y108.617 E6.88148 ; perimeter G1 X117.486 Y113.923 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X116.909 Y112.813 E6.89548 ; perimeter G1 X116.712 Y111.159 E6.91413 ; perimeter G1 X116.765 Y110.336 E6.92336 ; perimeter G1 X116.92 Y109.6 E6.93178 ; perimeter G1 X117.19 Y108.956 E6.9396 ; perimeter G1 X117.515 Y108.48 E6.94605 ; perimeter ;WIDTH:0.441053 G1 X117.668 Y108.37 E6.9484 ; perimeter ;WIDTH:0.482107 G1 X117.821 Y108.259 E6.951 ; perimeter ;WIDTH:0.523161 G1 X117.973 Y108.149 E6.95382 ; perimeter G1 X118.421 Y107.9 E6.96154 ; perimeter ;WIDTH:0.518742 G1 X118.652 Y107.818 E6.9652 ; perimeter ;WIDTH:0.496195 G1 X119.209 Y107.683 E6.97334 ; perimeter ;WIDTH:0.474055 G1 X119.797 Y107.64 E6.98131 ; perimeter ;WIDTH:0.484929 G1 X120.495 Y107.705 E6.99102 ; perimeter ;WIDTH:0.502287 G1 X120.997 Y107.847 E6.99853 ; perimeter ;WIDTH:0.529434 G1 X121.625 Y108.181 E7.00938 ; perimeter ;WIDTH:0.48885 G1 X121.79 Y108.282 E7.01208 ; perimeter ;WIDTH:0.448266 G1 X121.954 Y108.383 E7.01453 ; perimeter ;WIDTH:0.407681 G1 X122.112 Y108.54 E7.01708 ; perimeter ;WIDTH:0.399999 G1 X122.461 Y109.091 E7.02438 ; perimeter G1 X122.692 Y109.735 E7.03204 ; perimeter G1 X122.822 Y110.459 E7.04027 ; perimeter G1 X122.865 Y111.237 E7.04899 ; perimeter G1 X122.812 Y112.125 E7.05895 ; perimeter G1 X122.662 Y112.883 E7.0676 ; perimeter G1 X122.41 Y113.513 E7.0752 ; perimeter G1 X122.084 Y113.984 E7.08161 ; perimeter ;WIDTH:0.437478 G1 X121.937 Y114.087 E7.08383 ; perimeter ;WIDTH:0.474957 G1 X121.789 Y114.19 E7.08627 ; perimeter ;WIDTH:0.512436 G1 X121.642 Y114.292 E7.0889 ; perimeter ;WIDTH:0.522117 G1 X121.188 Y114.52 E7.09653 ; perimeter G1 X120.929 Y114.606 E7.10063 ; perimeter ;WIDTH:0.495606 G1 X120.37 Y114.729 E7.10875 ; perimeter ;WIDTH:0.473786 G1 X119.746 Y114.763 E7.11719 ; perimeter ;WIDTH:0.468761 G1 X119.161 Y114.675 E7.12509 ; perimeter ;WIDTH:0.484182 G1 X118.81 Y114.601 E7.13005 ; perimeter ;WIDTH:0.517387 G1 X118.459 Y114.526 E7.13539 ; perimeter G1 X118.044 Y114.24 E7.14289 ; perimeter ;WIDTH:0.516089 G1 X117.858 Y114.134 E7.14607 ; perimeter ;WIDTH:0.477393 G1 X117.672 Y114.029 E7.14898 ; perimeter ;WIDTH:0.438696 G1 X117.538 Y113.953 E7.15089 ; perimeter G1 X117.328 Y113.612 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:3.2 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 15; ;LAYER:15 G1 E.65089 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z3.2 F9000 ; simple layer change G1 X117.531 Y113.507 ; travel to first layer point G1 X114.52 Y113.431 ; travel to first layer point G1 X114.252 Y113.414 ; travel to first layer point G1 X111.434 Y113.232 ; travel to first layer point G1 X111.167 Y113.215 ; travel to first layer point G1 X108.353 Y113.034 ; travel to first layer point G1 X107.166 Y114.435 ; travel to first layer point G1 X104.656 Y114.438 ; travel to first layer point G1 X103.287 Y112.707 ; travel to first layer point G1 X100.363 Y112.518 ; travel to first layer point G1 X93.675 Y112.551 ; travel to first layer point G1 X93.657 Y112.1 ; travel to first layer point G1 X93.792 Y112.095 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.59053 G1 F2250 G1 X93.787 Y111.986 E6.50187 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y108.184 E6.56601 ; perimeter G1 X93.787 Y116.443 F9000 ; move to first perimeter point G1 F2250 G1 X93.787 Y113.028 E6.62362 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.399111 G1 F2250 G1 X94.175 Y112.549 E6.62581 ; perimeter ;WIDTH:0.420375 G1 X94.028 Y112.641 E6.62786 ; perimeter ;WIDTH:0.460542 G1 X93.968 Y112.737 E6.62934 ; perimeter ;WIDTH:0.500709 G1 X93.908 Y112.834 E6.63098 ; perimeter ;WIDTH:0.540876 G1 X93.847 Y112.931 E6.63277 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y113.028 E6.63469 ; perimeter G1 X93.767 Y112.898 E6.63691 ; perimeter ;WIDTH:0.540876 G1 X93.747 Y112.767 E6.63898 ; perimeter ;WIDTH:0.500709 G1 X93.727 Y112.637 E6.64087 ; perimeter ;WIDTH:0.460542 G1 X93.707 Y112.507 E6.64259 ; perimeter ;WIDTH:0.462914 G1 X93.728 Y112.404 E6.64397 ; perimeter ;WIDTH:0.505453 G1 X93.749 Y112.301 E6.64549 ; perimeter ;WIDTH:0.547992 G1 X93.77 Y112.198 E6.64715 ; perimeter ;WIDTH:0.59053 G1 X93.792 Y112.095 E6.64896 ; perimeter G1 X93.851 Y112.164 E6.65052 ; perimeter ;WIDTH:0.547992 G1 X93.91 Y112.234 E6.65197 ; perimeter ;WIDTH:0.505453 G1 X93.969 Y112.303 E6.65329 ; perimeter ;WIDTH:0.462914 G1 X94.028 Y112.373 E6.6545 ; perimeter ;WIDTH:0.420375 G1 X94.175 Y112.465 E6.65655 ; perimeter ;WIDTH:0.399111 G1 X94.309 Y112.494 E6.65808 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.374822 G1 F2250 G1 X99.623 Y112.507 E6.71277 ; perimeter G1 X100.249 Y116.443 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y113.028 E6.77038 ; perimeter G1 X100.245 Y112.095 F9000 ; move to first perimeter point ;WIDTH:0.590528 G1 F2250 G1 X100.266 Y112.198 E6.77218 ; perimeter ;WIDTH:0.54799 G1 X100.287 Y112.301 E6.77384 ; perimeter ;WIDTH:0.505452 G1 X100.308 Y112.404 E6.77536 ; perimeter ;WIDTH:0.462914 G1 X100.33 Y112.507 E6.77675 ; perimeter ;WIDTH:0.460542 G1 X100.31 Y112.637 E6.77847 ; perimeter ;WIDTH:0.500708 G1 X100.29 Y112.767 E6.78036 ; perimeter ;WIDTH:0.540874 G1 X100.269 Y112.898 E6.78243 ; perimeter ;WIDTH:0.58104 G1 X100.249 Y113.028 E6.78465 ; perimeter G1 X100.189 Y112.931 E6.78657 ; perimeter ;WIDTH:0.540874 G1 X100.129 Y112.834 E6.78835 ; perimeter ;WIDTH:0.500708 G1 X100.068 Y112.737 E6.78999 ; perimeter ;WIDTH:0.460542 G1 X100.008 Y112.641 E6.79147 ; perimeter ;WIDTH:0.420375 G1 X99.862 Y112.547 E6.79352 ; perimeter ;WIDTH:0.402898 G1 X99.623 Y112.507 E6.79625 ; perimeter G1 X99.862 Y112.467 E6.79898 ; perimeter ;WIDTH:0.420375 G1 X100.008 Y112.373 E6.80103 ; perimeter ;WIDTH:0.462914 G1 X100.067 Y112.303 E6.80224 ; perimeter ;WIDTH:0.505452 G1 X100.126 Y112.234 E6.80356 ; perimeter ;WIDTH:0.54799 G1 X100.185 Y112.164 E6.80501 ; perimeter ;WIDTH:0.590528 G1 X100.206 Y112.14 E6.80556 ; perimeter G1 X100.249 Y108.184 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y111.986 E6.8697 ; perimeter ;WIDTH:0.590528 G1 X100.245 Y112.095 E6.87157 ; perimeter G1 X99.752 Y112.907 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F1500 G1 X99.749 Y112.901 E6.87165 ; perimeter G1 X99.623 Y112.849 E6.87318 ; perimeter G1 X94.413 Y112.849 E6.9315 ; perimeter G1 X94.334 Y112.868 E6.93241 ; perimeter G1 X94.235 Y113.028 E6.93452 ; perimeter G1 X94.235 Y116.891 E6.97777 ; perimeter G1 X93.339 Y116.891 E6.9878 ; perimeter G1 X93.339 Y107.736 E7.09029 ; perimeter G1 X94.235 Y107.736 E7.10032 ; perimeter G1 X94.235 Y111.986 E7.1479 ; perimeter G1 X94.287 Y112.112 E7.14943 ; perimeter G1 X94.413 Y112.164 E7.15096 ; perimeter G1 X99.623 Y112.164 E7.20928 ; perimeter G1 X99.749 Y112.112 E7.21081 ; perimeter G1 X99.802 Y111.986 E7.21234 ; perimeter G1 X99.802 Y107.736 E7.25992 ; perimeter G1 X100.697 Y107.736 E7.26994 ; perimeter G1 X100.697 Y108.184 E7.27496 ; perimeter G1 X100.697 Y116.891 E7.37243 ; perimeter G1 X99.802 Y116.891 E7.38245 ; perimeter G1 X99.802 Y113.028 E7.4257 ; perimeter G1 X99.775 Y112.963 E7.42649 ; perimeter G1 X99.389 Y112.856 F9000 ; move inwards before travel G1 E.92649 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.389 Y112.641 F9000 ; move to first perimeter point G1 X100.364 Y112.61 ; move to first perimeter point G1 X103.157 Y111.905 ; move to first perimeter point G1 X103.764 Y111.549 ; move to first perimeter point G1 X103.764 Y111.752 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.438366 G1 F2250 G1 X103.787 Y111.694 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.839 Y111.666 E6.50155 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.638 E6.50239 ; perimeter G1 X107.9 Y111.638 E6.55849 ; perimeter G1 X107.979 Y111.709 E6.55998 ; perimeter ;WIDTH:0.44468 G1 X108.059 Y111.779 E6.56132 ; perimeter ;WIDTH:0.399999 G1 X108.077 Y111.886 E6.56253 ; perimeter G1 X107.998 Y112.452 E6.56893 ; perimeter G1 X107.87 Y112.939 E6.57457 ; perimeter G1 X107.612 Y113.463 E6.58111 ; perimeter ;WIDTH:0.438032 G1 X107.56 Y113.565 E6.58253 ; perimeter ;WIDTH:0.476065 G1 X107.507 Y113.666 E6.58408 ; perimeter ;WIDTH:0.514097 G1 X107.455 Y113.768 E6.58577 ; perimeter G1 X107.016 Y114.094 E6.59385 ; perimeter ;WIDTH:0.510783 G1 X106.752 Y114.198 E6.59801 ; perimeter ;WIDTH:0.46551 G1 X106.332 Y114.297 E6.60373 ; perimeter ;WIDTH:0.470099 G1 X105.863 Y114.341 E6.61004 ; perimeter ;WIDTH:0.486022 G1 X105.303 Y114.277 E6.61787 ; perimeter ;WIDTH:0.516688 G1 X104.807 Y114.098 E6.6257 ; perimeter ;WIDTH:0.547117 G1 X104.45 Y113.863 E6.63246 ; perimeter G1 X104.391 Y113.766 E6.63425 ; perimeter ;WIDTH:0.498078 G1 X104.331 Y113.67 E6.63587 ; perimeter ;WIDTH:0.449039 G1 X104.272 Y113.574 E6.6373 ; perimeter ;WIDTH:0.399999 G1 X104.063 Y113.273 E6.6414 ; perimeter G1 X103.882 Y112.86 E6.64645 ; perimeter G1 X103.767 Y112.396 E6.6518 ; perimeter G1 X103.714 Y111.88 E6.65761 ; perimeter ;WIDTH:0.438366 G1 X103.742 Y111.808 E6.65857 ; perimeter G1 X104.105 Y111.641 F9000 ; move inwards before travel G1 X104.105 Y111.281 ; move to first perimeter point G1 X108.585 Y111.402 ; move to first perimeter point G1 X107.982 Y113.785 ; move to first perimeter point G1 X105.897 Y114.69 ; move to first perimeter point G1 X104.035 Y114.013 ; move to first perimeter point G1 X103.894 Y113.865 ; move to first perimeter point G1 X103.99 Y113.773 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.415434 G1 F2250 G1 X103.73 Y113.422 E6.66367 ; perimeter ;WIDTH:0.458638 G1 X103.507 Y112.955 E6.67041 ; perimeter ;WIDTH:0.497754 G1 X103.363 Y112.437 E6.67808 ; perimeter ;WIDTH:0.538968 G1 X103.29 Y111.923 E6.68615 ; perimeter ;WIDTH:0.584825 G1 X103.305 Y111.798 E6.68829 ; perimeter ;WIDTH:0.630681 G1 X103.32 Y111.673 E6.69061 ; perimeter ;WIDTH:0.676538 G1 X103.335 Y111.548 E6.69311 ; perimeter ;WIDTH:0.722394 G1 X103.35 Y111.422 E6.69581 ; perimeter G1 X103.322 Y111.337 E6.69772 ; perimeter ;WIDTH:0.67601 G1 X103.293 Y111.251 E6.69952 ; perimeter ;WIDTH:0.629626 G1 X103.282 Y111.093 E6.70243 ; perimeter ;WIDTH:0.588436 G1 X103.271 Y110.935 E6.70514 ; perimeter ;WIDTH:0.547246 G1 X103.327 Y110.24 E6.71616 ; perimeter ;WIDTH:0.520872 G1 X103.437 Y109.703 E6.72437 ; perimeter ;WIDTH:0.502432 G1 X103.638 Y109.175 E6.73251 ; perimeter ;WIDTH:0.471914 G1 X103.905 Y108.751 E6.73925 ; perimeter ;WIDTH:0.43226 G1 X104.067 Y108.577 E6.74215 ; perimeter G1 X103.974 Y108.48 F9000 ; move to first perimeter point G1 X103.134 Y111.014 ; move to first perimeter point G1 X103.809 Y113.776 ; move to first perimeter point G1 X105.897 Y114.69 ; move to first perimeter point G1 X107.982 Y113.785 ; move to first perimeter point G1 X108.6 Y111.594 ; move to first perimeter point G1 X108.598 Y111.568 ; move to first perimeter point G1 X108.443 Y111.58 ; move to first perimeter point ;WIDTH:0.552284 G1 F2250 G1 X108.447 Y111.7 E6.74407 ; perimeter ;WIDTH:0.517228 G1 X108.451 Y111.819 E6.74584 ; perimeter ;WIDTH:0.482172 G1 X108.454 Y111.938 E6.74748 ; perimeter ;WIDTH:0.458504 G1 X108.381 Y112.505 E6.75493 ; perimeter G1 X108.296 Y112.768 E6.75853 ; perimeter ;WIDTH:0.424891 G1 X108.211 Y113.03 E6.76183 ; perimeter ;WIDTH:0.391278 G1 X107.996 Y113.491 E6.76739 ; perimeter ;WIDTH:0.385752 G1 X107.896 Y113.668 E6.76958 ; perimeter G1 X108.011 Y113.73 F9000 ; move to first perimeter point G1 X108.585 Y111.402 ; move to first perimeter point G1 X104.17 Y111.281 ; move to first perimeter point G1 X103.754 Y111.281 ; move to first perimeter point G1 X103.754 Y111.082 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.438366 G1 F2250 G1 X103.779 Y111.139 E6.77035 ; perimeter ;WIDTH:0.463863 G1 X103.835 Y111.165 E6.77116 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.192 E6.77204 ; perimeter G1 X107.9 Y111.192 E6.82814 ; perimeter G1 X108.416 Y111.169 E6.83537 ; perimeter ;WIDTH:0.44468 G1 X108.931 Y111.147 E6.84186 ; perimeter ;WIDTH:0.399999 G1 X108.74 Y112.758 E6.86002 ; perimeter G1 X108.171 Y113.901 E6.87431 ; perimeter ;WIDTH:0.438032 G1 X108.03 Y113.98 E6.87631 ; perimeter ;WIDTH:0.476065 G1 X107.888 Y114.059 E6.87852 ; perimeter ;WIDTH:0.514097 G1 X107.747 Y114.138 E6.88091 ; perimeter G1 X107.26 Y114.492 E6.8898 ; perimeter ;WIDTH:0.510783 G1 X106.878 Y114.604 E6.89564 ; perimeter ;WIDTH:0.467891 G1 X106.382 Y114.699 E6.90237 ; perimeter ;WIDTH:0.470099 G1 X105.827 Y114.767 E6.90986 ; perimeter ;WIDTH:0.486022 G1 X105.18 Y114.702 E6.91889 ; perimeter ;WIDTH:0.516688 G1 X104.578 Y114.513 E6.92826 ; perimeter ;WIDTH:0.537825 G1 X103.924 Y114.116 E6.94013 ; perimeter ;WIDTH:0.491883 G1 X103.773 Y114.011 E6.94272 ; perimeter ;WIDTH:0.445941 G1 X103.622 Y113.906 E6.94504 ; perimeter ;WIDTH:0.399999 G1 X103.275 Y113.405 E6.95186 ; perimeter G1 X103.025 Y112.798 E6.95921 ; perimeter G1 X102.872 Y112.081 E6.96742 ; perimeter G1 X102.82 Y111.252 E6.97672 ; perimeter G1 X102.872 Y110.381 E6.98649 ; perimeter G1 X103.025 Y109.633 E6.99504 ; perimeter G1 X103.276 Y109.009 E7.00257 ; perimeter G1 X103.597 Y108.54 E7.00893 ; perimeter G1 X103.833 Y108.315 E7.01258 ; perimeter ;WIDTH:0.445318 G1 X103.999 Y108.225 E7.01496 ; perimeter ;WIDTH:0.490637 G1 X104.164 Y108.135 E7.0176 ; perimeter ;WIDTH:0.535955 G1 X104.801 Y107.827 E7.02854 ; perimeter ;WIDTH:0.504491 G1 X105.346 Y107.691 E7.03667 ; perimeter ;WIDTH:0.483772 G1 X105.893 Y107.645 E7.04426 ; perimeter ;WIDTH:0.477737 G1 X106.394 Y107.681 E7.05111 ; perimeter ;WIDTH:0.503712 G1 X106.922 Y107.753 E7.05881 ; perimeter G1 X107.265 Y107.869 E7.06404 ; perimeter ;WIDTH:0.535372 G1 X107.758 Y108.095 E7.07241 ; perimeter ;WIDTH:0.559025 G1 X108.253 Y108.529 E7.08306 ; perimeter ;WIDTH:0.559465 G1 X108.52 Y108.965 E7.09134 ; perimeter G1 X108.007 Y109.111 E7.09998 ; perimeter G1 X107.832 Y108.821 E7.10547 ; perimeter ;WIDTH:0.547079 G1 X107.434 Y108.466 E7.1139 ; perimeter ;WIDTH:0.535372 G1 X107.026 Y108.257 E7.12098 ; perimeter ;WIDTH:0.492394 G1 X106.381 Y108.107 E7.13031 ; perimeter ;WIDTH:0.477099 G1 X105.961 Y108.078 E7.13604 ; perimeter ;WIDTH:0.480471 G1 X105.454 Y108.12 E7.14302 ; perimeter ;WIDTH:0.501176 G1 X104.989 Y108.249 E7.14995 ; perimeter ;WIDTH:0.539254 G1 X104.549 Y108.488 E7.15774 ; perimeter G1 X104.451 Y108.624 E7.16035 ; perimeter ;WIDTH:0.492836 G1 X104.352 Y108.76 E7.16272 ; perimeter ;WIDTH:0.446418 G1 X104.254 Y108.895 E7.16483 ; perimeter ;WIDTH:0.399999 G1 X104 Y109.332 E7.17049 ; perimeter G1 X103.829 Y109.829 E7.17637 ; perimeter G1 X103.735 Y110.34 E7.18219 ; perimeter G1 X103.701 Y110.959 E7.18913 ; perimeter ;WIDTH:0.438366 G1 X103.73 Y111.027 E7.19005 ; perimeter G1 X104.096 Y111.188 F9000 ; move inwards before travel G1 E.69005 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.096 Y111.281 F9000 ; move to first perimeter point G1 X108.585 Y111.402 ; move to first perimeter point G1 X107.982 Y113.785 ; move to first perimeter point G1 X107.672 Y114.068 ; move to first perimeter point G1 X111.301 Y117.064 ; move to first perimeter point G1 X111.301 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506442 G1 F2250 G1 X111.301 Y108.146 E6.62851 ; perimeter G1 X111.711 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X111.711 Y108.146 E6.6331 ; perimeter G1 X111.711 Y117.4 E6.7367 ; perimeter G1 X110.89 Y117.4 E6.74589 ; perimeter G1 X110.89 Y107.736 E6.85408 ; perimeter G1 X111.651 Y107.736 E6.8626 ; perimeter G1 X111.71 Y108.132 F9000 ; move inwards before travel G1 E.3626 F1500 ; retract G92 E0 ; reset extrusion distance G1 X111.42 Y108.168 F9000 ; move to first perimeter point G1 X114.386 Y117.064 ; move to first perimeter point G1 X114.386 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.50644 G1 F2250 G1 X114.386 Y108.146 E6.6285 ; perimeter G1 X114.797 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X114.797 Y108.146 E6.63309 ; perimeter G1 X114.797 Y117.4 E6.73669 ; perimeter G1 X113.976 Y117.4 E6.74588 ; perimeter G1 X113.976 Y107.736 E6.85407 ; perimeter G1 X114.737 Y107.736 E6.86259 ; perimeter G1 X114.796 Y108.132 F9000 ; move inwards before travel G1 E.36259 F1500 ; retract G92 E0 ; reset extrusion distance G1 X114.506 Y108.168 F9000 ; move to first perimeter point G1 X117.843 Y108.468 ; move to first perimeter point G1 X118.294 Y108.418 ; move to first perimeter point G1 X118.359 Y108.525 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.534749 G1 F2250 G1 X118.379 Y108.493 E6.50058 ; perimeter G1 X118.786 Y108.251 E6.50788 ; perimeter ;WIDTH:0.496195 G1 X119.247 Y108.112 E6.51472 ; perimeter ;WIDTH:0.474055 G1 X119.751 Y108.067 E6.52156 ; perimeter ;WIDTH:0.473836 G1 X120.276 Y108.111 E6.52868 ; perimeter ;WIDTH:0.49236 G1 X120.76 Y108.244 E6.53575 ; perimeter ;WIDTH:0.529434 G1 X121.2 Y108.489 E6.54343 ; perimeter G1 X121.289 Y108.617 E6.54581 ; perimeter ;WIDTH:0.48885 G1 X121.378 Y108.746 E6.548 ; perimeter ;WIDTH:0.448265 G1 X121.468 Y108.874 E6.54999 ; perimeter ;WIDTH:0.40768 G1 X121.699 Y109.32 E6.55573 ; perimeter ;WIDTH:0.399999 G1 X121.852 Y109.831 E6.5617 ; perimeter G1 X121.949 Y110.456 E6.56878 ; perimeter G1 X121.985 Y111.204 E6.57716 ; perimeter G1 X121.956 Y111.928 E6.58527 ; perimeter G1 X121.87 Y112.552 E6.59232 ; perimeter G1 X121.723 Y113.079 E6.59844 ; perimeter G1 X121.486 Y113.549 E6.60433 ; perimeter ;WIDTH:0.445292 G1 X121.396 Y113.681 E6.60635 ; perimeter ;WIDTH:0.490585 G1 X121.306 Y113.813 E6.60859 ; perimeter ;WIDTH:0.535877 G1 X121.216 Y113.945 E6.61106 ; perimeter G1 X120.805 Y114.171 E6.61831 ; perimeter ;WIDTH:0.495606 G1 X120.335 Y114.3 E6.62523 ; perimeter ;WIDTH:0.473786 G1 X119.834 Y114.342 E6.63202 ; perimeter ;WIDTH:0.470433 G1 X119.298 Y114.287 E6.63924 ; perimeter ;WIDTH:0.497376 G1 X118.766 Y114.144 E6.64709 ; perimeter ;WIDTH:0.516089 G1 X118.355 Y113.887 E6.65428 ; perimeter G1 X118.268 Y113.758 E6.65659 ; perimeter ;WIDTH:0.477393 G1 X118.18 Y113.629 E6.65872 ; perimeter ;WIDTH:0.438696 G1 X118.093 Y113.5 E6.66065 ; perimeter ;WIDTH:0.399999 G1 X117.869 Y113.064 E6.66614 ; perimeter G1 X117.718 Y112.562 E6.67201 ; perimeter G1 X117.623 Y111.937 E6.67909 ; perimeter G1 X117.591 Y111.219 E6.68714 ; perimeter G1 X117.62 Y110.521 E6.69496 ; perimeter G1 X117.711 Y109.91 E6.70188 ; perimeter G1 X117.864 Y109.383 E6.70802 ; perimeter G1 X118.088 Y108.932 E6.71366 ; perimeter G1 X118.158 Y108.845 E6.71491 ; perimeter ;WIDTH:0.444916 G1 X118.231 Y108.727 E6.71666 ; perimeter ;WIDTH:0.489833 G1 X118.305 Y108.61 E6.7186 ; perimeter ;WIDTH:0.534749 G1 X118.327 Y108.575 E6.71924 ; perimeter G1 X118.649 Y108.338 F9000 ; move inwards before travel G1 X118.447 Y108.006 ; move to first perimeter point G1 X121.03 Y107.959 ; move to first perimeter point G1 X121.656 Y108.383 ; move to first perimeter point G1 X121.84 Y108.567 ; move to first perimeter point G1 X121.745 Y108.662 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.432575 G1 F2250 G1 X121.897 Y108.901 E6.7227 ; perimeter ;WIDTH:0.474704 G1 X122.05 Y109.14 E6.72654 ; perimeter ;WIDTH:0.502218 G1 X122.153 Y109.426 E6.73092 ; perimeter ;WIDTH:0.529732 G1 X122.257 Y109.712 E6.73556 ; perimeter ;WIDTH:0.558436 G1 X122.381 Y110.393 E6.74675 ; perimeter ;WIDTH:0.565436 G1 X122.424 Y111.185 E6.75974 ; perimeter G1 X122.391 Y111.945 E6.7722 ; perimeter ;WIDTH:0.555306 G1 X122.289 Y112.611 E6.78302 ; perimeter ;WIDTH:0.532508 G1 X122.113 Y113.189 E6.79229 ; perimeter ;WIDTH:0.495616 G1 X121.981 Y113.434 E6.79624 ; perimeter ;WIDTH:0.467626 G1 X121.849 Y113.679 E6.79995 ; perimeter ;WIDTH:0.439636 G1 X121.705 Y113.842 E6.80266 ; perimeter G1 X121.801 Y113.938 F9000 ; move to first perimeter point G1 X119.804 Y114.69 ; move to first perimeter point G1 X117.686 Y113.795 ; move to first perimeter point G1 X117.654 Y113.736 ; move to first perimeter point G1 X117.769 Y113.674 ; move to first perimeter point ;WIDTH:0.428144 G1 F2250 G1 X117.513 Y113.171 E6.80948 ; perimeter ;WIDTH:0.477329 G1 X117.415 Y112.928 E6.81305 ; perimeter ;WIDTH:0.526514 G1 X117.316 Y112.686 E6.81701 ; perimeter G1 X117.219 Y111.997 E6.82756 ; perimeter ;WIDTH:0.530951 G1 X117.187 Y111.618 E6.83338 ; perimeter ;WIDTH:0.559864 G1 X117.154 Y111.238 E6.83956 ; perimeter G1 X117.186 Y110.503 E6.85148 ; perimeter ;WIDTH:0.554708 G1 X117.294 Y109.847 E6.86215 ; perimeter ;WIDTH:0.52903 G1 X117.48 Y109.269 E6.8714 ; perimeter ;WIDTH:0.486726 G1 X117.617 Y109.021 E6.87534 ; perimeter ;WIDTH:0.45646 G1 X117.754 Y108.773 E6.87901 ; perimeter ;WIDTH:0.426194 G1 X117.888 Y108.617 E6.88148 ; perimeter G1 X117.486 Y113.923 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X116.909 Y112.813 E6.89548 ; perimeter G1 X116.712 Y111.159 E6.91413 ; perimeter G1 X116.765 Y110.336 E6.92336 ; perimeter G1 X116.92 Y109.6 E6.93178 ; perimeter G1 X117.19 Y108.956 E6.9396 ; perimeter G1 X117.515 Y108.48 E6.94605 ; perimeter ;WIDTH:0.441054 G1 X117.668 Y108.37 E6.9484 ; perimeter ;WIDTH:0.482108 G1 X117.821 Y108.259 E6.951 ; perimeter ;WIDTH:0.523162 G1 X117.973 Y108.149 E6.95382 ; perimeter G1 X118.421 Y107.9 E6.96154 ; perimeter ;WIDTH:0.518741 G1 X118.652 Y107.818 E6.9652 ; perimeter ;WIDTH:0.496195 G1 X119.209 Y107.683 E6.97334 ; perimeter ;WIDTH:0.474055 G1 X119.797 Y107.64 E6.98131 ; perimeter ;WIDTH:0.484929 G1 X120.495 Y107.705 E6.99102 ; perimeter ;WIDTH:0.502287 G1 X120.997 Y107.847 E6.99853 ; perimeter ;WIDTH:0.529434 G1 X121.625 Y108.181 E7.00938 ; perimeter ;WIDTH:0.48885 G1 X121.79 Y108.282 E7.01208 ; perimeter ;WIDTH:0.448265 G1 X121.954 Y108.383 E7.01453 ; perimeter ;WIDTH:0.40768 G1 X122.112 Y108.54 E7.01708 ; perimeter ;WIDTH:0.399999 G1 X122.461 Y109.091 E7.02438 ; perimeter G1 X122.692 Y109.735 E7.03204 ; perimeter G1 X122.822 Y110.459 E7.04027 ; perimeter G1 X122.865 Y111.237 E7.04899 ; perimeter G1 X122.812 Y112.125 E7.05895 ; perimeter G1 X122.662 Y112.883 E7.0676 ; perimeter G1 X122.41 Y113.513 E7.0752 ; perimeter G1 X122.084 Y113.984 E7.08161 ; perimeter ;WIDTH:0.437478 G1 X121.937 Y114.087 E7.08383 ; perimeter ;WIDTH:0.474957 G1 X121.789 Y114.19 E7.08627 ; perimeter ;WIDTH:0.512436 G1 X121.642 Y114.292 E7.0889 ; perimeter ;WIDTH:0.522117 G1 X121.188 Y114.52 E7.09653 ; perimeter G1 X120.929 Y114.606 E7.10063 ; perimeter ;WIDTH:0.495606 G1 X120.37 Y114.729 E7.10875 ; perimeter ;WIDTH:0.473786 G1 X119.746 Y114.763 E7.11719 ; perimeter ;WIDTH:0.468761 G1 X119.161 Y114.675 E7.12509 ; perimeter ;WIDTH:0.484182 G1 X118.81 Y114.601 E7.13005 ; perimeter ;WIDTH:0.517387 G1 X118.459 Y114.526 E7.13539 ; perimeter G1 X118.044 Y114.24 E7.14289 ; perimeter ;WIDTH:0.516089 G1 X117.858 Y114.134 E7.14607 ; perimeter ;WIDTH:0.477393 G1 X117.672 Y114.029 E7.14898 ; perimeter ;WIDTH:0.438696 G1 X117.538 Y113.953 E7.15089 ; perimeter G1 X117.328 Y113.612 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:3.4 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 16; ;LAYER:16 G1 E.65089 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z3.4 F9000 ; simple layer change G1 X117.531 Y113.507 ; travel to first layer point G1 X114.52 Y113.431 ; travel to first layer point G1 X114.252 Y113.414 ; travel to first layer point G1 X111.434 Y113.232 ; travel to first layer point G1 X111.167 Y113.215 ; travel to first layer point G1 X108.356 Y113.034 ; travel to first layer point G1 X106.915 Y114.516 ; travel to first layer point G1 X104.433 Y114.315 ; travel to first layer point G1 X103.286 Y112.707 ; travel to first layer point G1 X100.363 Y112.518 ; travel to first layer point G1 X93.675 Y112.551 ; travel to first layer point G1 X93.657 Y112.1 ; travel to first layer point G1 X93.792 Y112.095 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.59053 G1 F2250 G1 X93.787 Y111.986 E6.50187 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y108.184 E6.56601 ; perimeter G1 X93.787 Y116.443 F9000 ; move to first perimeter point G1 F2250 G1 X93.787 Y113.028 E6.62362 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.399111 G1 F2250 G1 X94.175 Y112.549 E6.62581 ; perimeter ;WIDTH:0.420375 G1 X94.028 Y112.641 E6.62786 ; perimeter ;WIDTH:0.460542 G1 X93.968 Y112.737 E6.62934 ; perimeter ;WIDTH:0.500709 G1 X93.908 Y112.834 E6.63098 ; perimeter ;WIDTH:0.540876 G1 X93.847 Y112.931 E6.63277 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y113.028 E6.63469 ; perimeter G1 X93.767 Y112.898 E6.63691 ; perimeter ;WIDTH:0.540876 G1 X93.747 Y112.767 E6.63898 ; perimeter ;WIDTH:0.500709 G1 X93.727 Y112.637 E6.64087 ; perimeter ;WIDTH:0.460542 G1 X93.707 Y112.507 E6.64259 ; perimeter ;WIDTH:0.462914 G1 X93.728 Y112.404 E6.64397 ; perimeter ;WIDTH:0.505453 G1 X93.749 Y112.301 E6.64549 ; perimeter ;WIDTH:0.547992 G1 X93.77 Y112.198 E6.64715 ; perimeter ;WIDTH:0.59053 G1 X93.792 Y112.095 E6.64896 ; perimeter G1 X93.851 Y112.164 E6.65052 ; perimeter ;WIDTH:0.547992 G1 X93.91 Y112.234 E6.65197 ; perimeter ;WIDTH:0.505453 G1 X93.969 Y112.303 E6.65329 ; perimeter ;WIDTH:0.462914 G1 X94.028 Y112.373 E6.6545 ; perimeter ;WIDTH:0.420375 G1 X94.175 Y112.465 E6.65655 ; perimeter ;WIDTH:0.399111 G1 X94.309 Y112.494 E6.65808 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.374822 G1 F2250 G1 X99.623 Y112.507 E6.71277 ; perimeter G1 X100.249 Y116.443 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y113.028 E6.77038 ; perimeter G1 X100.245 Y112.095 F9000 ; move to first perimeter point ;WIDTH:0.590528 G1 F2250 G1 X100.266 Y112.198 E6.77218 ; perimeter ;WIDTH:0.54799 G1 X100.287 Y112.301 E6.77384 ; perimeter ;WIDTH:0.505452 G1 X100.308 Y112.404 E6.77536 ; perimeter ;WIDTH:0.462914 G1 X100.33 Y112.507 E6.77675 ; perimeter ;WIDTH:0.460542 G1 X100.31 Y112.637 E6.77847 ; perimeter ;WIDTH:0.500708 G1 X100.29 Y112.767 E6.78036 ; perimeter ;WIDTH:0.540874 G1 X100.269 Y112.898 E6.78243 ; perimeter ;WIDTH:0.58104 G1 X100.249 Y113.028 E6.78465 ; perimeter G1 X100.189 Y112.931 E6.78657 ; perimeter ;WIDTH:0.540874 G1 X100.129 Y112.834 E6.78835 ; perimeter ;WIDTH:0.500708 G1 X100.068 Y112.737 E6.78999 ; perimeter ;WIDTH:0.460542 G1 X100.008 Y112.641 E6.79147 ; perimeter ;WIDTH:0.420375 G1 X99.862 Y112.547 E6.79352 ; perimeter ;WIDTH:0.402898 G1 X99.623 Y112.507 E6.79625 ; perimeter G1 X99.862 Y112.467 E6.79898 ; perimeter ;WIDTH:0.420375 G1 X100.008 Y112.373 E6.80103 ; perimeter ;WIDTH:0.462914 G1 X100.067 Y112.303 E6.80224 ; perimeter ;WIDTH:0.505452 G1 X100.126 Y112.234 E6.80356 ; perimeter ;WIDTH:0.54799 G1 X100.185 Y112.164 E6.80501 ; perimeter ;WIDTH:0.590528 G1 X100.206 Y112.14 E6.80556 ; perimeter G1 X100.249 Y108.184 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y111.986 E6.8697 ; perimeter ;WIDTH:0.590528 G1 X100.245 Y112.095 E6.87157 ; perimeter G1 X99.752 Y112.907 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F1500 G1 X99.749 Y112.901 E6.87165 ; perimeter G1 X99.623 Y112.849 E6.87318 ; perimeter G1 X94.413 Y112.849 E6.9315 ; perimeter G1 X94.334 Y112.868 E6.93241 ; perimeter G1 X94.235 Y113.028 E6.93452 ; perimeter G1 X94.235 Y116.891 E6.97777 ; perimeter G1 X93.339 Y116.891 E6.9878 ; perimeter G1 X93.339 Y107.736 E7.09029 ; perimeter G1 X94.235 Y107.736 E7.10032 ; perimeter G1 X94.235 Y111.986 E7.1479 ; perimeter G1 X94.287 Y112.112 E7.14943 ; perimeter G1 X94.413 Y112.164 E7.15096 ; perimeter G1 X99.623 Y112.164 E7.20928 ; perimeter G1 X99.749 Y112.112 E7.21081 ; perimeter G1 X99.802 Y111.986 E7.21234 ; perimeter G1 X99.802 Y107.736 E7.25992 ; perimeter G1 X100.697 Y107.736 E7.26994 ; perimeter G1 X100.697 Y108.184 E7.27496 ; perimeter G1 X100.697 Y116.891 E7.37243 ; perimeter G1 X99.802 Y116.891 E7.38245 ; perimeter G1 X99.802 Y113.028 E7.4257 ; perimeter G1 X99.775 Y112.963 E7.42649 ; perimeter G1 X99.389 Y112.856 F9000 ; move inwards before travel G1 E.92649 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.389 Y112.641 F9000 ; move to first perimeter point G1 X100.364 Y112.61 ; move to first perimeter point G1 X103.164 Y111.903 ; move to first perimeter point G1 X103.764 Y111.549 ; move to first perimeter point G1 X103.764 Y111.752 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.438366 G1 F2250 G1 X103.787 Y111.694 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.839 Y111.666 E6.50155 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.638 E6.50239 ; perimeter G1 X107.9 Y111.638 E6.55849 ; perimeter G1 X107.979 Y111.709 E6.55998 ; perimeter ;WIDTH:0.44468 G1 X108.059 Y111.779 E6.56132 ; perimeter ;WIDTH:0.399999 G1 X108.077 Y111.886 E6.56253 ; perimeter G1 X107.998 Y112.452 E6.56893 ; perimeter G1 X107.87 Y112.939 E6.57457 ; perimeter G1 X107.612 Y113.463 E6.58111 ; perimeter ;WIDTH:0.438032 G1 X107.56 Y113.565 E6.58253 ; perimeter ;WIDTH:0.476065 G1 X107.507 Y113.666 E6.58408 ; perimeter ;WIDTH:0.514097 G1 X107.455 Y113.768 E6.58577 ; perimeter G1 X107.016 Y114.094 E6.59385 ; perimeter ;WIDTH:0.510783 G1 X106.752 Y114.198 E6.59801 ; perimeter ;WIDTH:0.46551 G1 X106.332 Y114.297 E6.60373 ; perimeter ;WIDTH:0.470099 G1 X105.863 Y114.341 E6.61004 ; perimeter ;WIDTH:0.486022 G1 X105.303 Y114.277 E6.61787 ; perimeter ;WIDTH:0.516686 G1 X104.807 Y114.098 E6.6257 ; perimeter ;WIDTH:0.547115 G1 X104.45 Y113.863 E6.63246 ; perimeter G1 X104.391 Y113.766 E6.63425 ; perimeter ;WIDTH:0.498077 G1 X104.331 Y113.67 E6.63587 ; perimeter ;WIDTH:0.449038 G1 X104.272 Y113.574 E6.6373 ; perimeter ;WIDTH:0.399999 G1 X104.063 Y113.273 E6.6414 ; perimeter G1 X103.882 Y112.86 E6.64645 ; perimeter G1 X103.767 Y112.396 E6.6518 ; perimeter G1 X103.714 Y111.88 E6.65761 ; perimeter ;WIDTH:0.438366 G1 X103.742 Y111.808 E6.65857 ; perimeter G1 X104.105 Y111.641 F9000 ; move inwards before travel G1 X104.105 Y111.281 ; move to first perimeter point G1 X108.582 Y111.401 ; move to first perimeter point G1 X107.884 Y113.886 ; move to first perimeter point G1 X105.897 Y114.69 ; move to first perimeter point G1 X104.004 Y113.984 ; move to first perimeter point G1 X103.892 Y113.865 ; move to first perimeter point G1 X103.99 Y113.773 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.415434 G1 F2250 G1 X103.73 Y113.422 E6.66367 ; perimeter ;WIDTH:0.458638 G1 X103.507 Y112.955 E6.67041 ; perimeter ;WIDTH:0.497754 G1 X103.363 Y112.437 E6.67808 ; perimeter ;WIDTH:0.538968 G1 X103.29 Y111.923 E6.68615 ; perimeter ;WIDTH:0.584825 G1 X103.305 Y111.798 E6.68829 ; perimeter ;WIDTH:0.630681 G1 X103.32 Y111.673 E6.69061 ; perimeter ;WIDTH:0.676538 G1 X103.335 Y111.548 E6.69311 ; perimeter ;WIDTH:0.722394 G1 X103.35 Y111.422 E6.69581 ; perimeter G1 X103.322 Y111.337 E6.69772 ; perimeter ;WIDTH:0.67601 G1 X103.293 Y111.251 E6.69952 ; perimeter ;WIDTH:0.629626 G1 X103.282 Y111.093 E6.70243 ; perimeter ;WIDTH:0.588436 G1 X103.271 Y110.935 E6.70514 ; perimeter ;WIDTH:0.547246 G1 X103.327 Y110.24 E6.71616 ; perimeter ;WIDTH:0.520872 G1 X103.437 Y109.703 E6.72437 ; perimeter ;WIDTH:0.502432 G1 X103.638 Y109.175 E6.73251 ; perimeter ;WIDTH:0.471914 G1 X103.905 Y108.751 E6.73925 ; perimeter ;WIDTH:0.43226 G1 X104.067 Y108.577 E6.74215 ; perimeter G1 X103.974 Y108.48 F9000 ; move to first perimeter point G1 X103.146 Y110.773 ; move to first perimeter point G1 X103.613 Y113.49 ; move to first perimeter point G1 X105.224 Y114.624 ; move to first perimeter point G1 X107.47 Y114.227 ; move to first perimeter point G1 X108.544 Y112.289 ; move to first perimeter point G1 X108.601 Y111.757 ; move to first perimeter point G1 X108.591 Y111.573 ; move to first perimeter point G1 X108.443 Y111.58 ; move to first perimeter point ;WIDTH:0.552284 G1 F2250 G1 X108.447 Y111.7 E6.74407 ; perimeter ;WIDTH:0.517228 G1 X108.451 Y111.819 E6.74584 ; perimeter ;WIDTH:0.482172 G1 X108.454 Y111.938 E6.74748 ; perimeter ;WIDTH:0.458504 G1 X108.381 Y112.505 E6.75493 ; perimeter G1 X108.296 Y112.768 E6.75853 ; perimeter ;WIDTH:0.424891 G1 X108.211 Y113.03 E6.76183 ; perimeter ;WIDTH:0.391278 G1 X107.996 Y113.491 E6.76739 ; perimeter ;WIDTH:0.385752 G1 X107.896 Y113.668 E6.76958 ; perimeter G1 X108.013 Y113.736 F9000 ; move to first perimeter point G1 X108.582 Y111.401 ; move to first perimeter point G1 X104.17 Y111.281 ; move to first perimeter point G1 X103.754 Y111.281 ; move to first perimeter point G1 X103.754 Y111.082 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.438366 G1 F2250 G1 X103.779 Y111.139 E6.77035 ; perimeter ;WIDTH:0.463863 G1 X103.835 Y111.165 E6.77116 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.192 E6.77204 ; perimeter G1 X107.9 Y111.192 E6.82814 ; perimeter G1 X108.416 Y111.169 E6.83537 ; perimeter ;WIDTH:0.44468 G1 X108.931 Y111.147 E6.84186 ; perimeter ;WIDTH:0.399999 G1 X108.74 Y112.758 E6.86002 ; perimeter G1 X108.171 Y113.901 E6.87431 ; perimeter ;WIDTH:0.438032 G1 X108.03 Y113.98 E6.87631 ; perimeter ;WIDTH:0.476065 G1 X107.888 Y114.059 E6.87852 ; perimeter ;WIDTH:0.514097 G1 X107.747 Y114.138 E6.88091 ; perimeter G1 X107.26 Y114.492 E6.8898 ; perimeter ;WIDTH:0.510783 G1 X106.878 Y114.604 E6.89564 ; perimeter ;WIDTH:0.467891 G1 X106.382 Y114.699 E6.90237 ; perimeter ;WIDTH:0.470099 G1 X105.827 Y114.767 E6.90986 ; perimeter ;WIDTH:0.486022 G1 X105.18 Y114.702 E6.91889 ; perimeter ;WIDTH:0.516686 G1 X104.578 Y114.513 E6.92826 ; perimeter ;WIDTH:0.537816 G1 X103.924 Y114.116 E6.94013 ; perimeter ;WIDTH:0.491877 G1 X103.773 Y114.011 E6.94272 ; perimeter ;WIDTH:0.445938 G1 X103.622 Y113.906 E6.94504 ; perimeter ;WIDTH:0.399999 G1 X103.275 Y113.405 E6.95186 ; perimeter G1 X103.025 Y112.798 E6.95921 ; perimeter G1 X102.872 Y112.081 E6.96742 ; perimeter G1 X102.82 Y111.252 E6.97672 ; perimeter G1 X102.872 Y110.381 E6.98649 ; perimeter G1 X103.025 Y109.633 E6.99504 ; perimeter G1 X103.276 Y109.009 E7.00257 ; perimeter G1 X103.597 Y108.54 E7.00893 ; perimeter G1 X103.833 Y108.315 E7.01258 ; perimeter ;WIDTH:0.445318 G1 X103.999 Y108.225 E7.01496 ; perimeter ;WIDTH:0.490637 G1 X104.164 Y108.135 E7.0176 ; perimeter ;WIDTH:0.535955 G1 X104.801 Y107.827 E7.02854 ; perimeter ;WIDTH:0.504492 G1 X105.346 Y107.691 E7.03667 ; perimeter ;WIDTH:0.483771 G1 X105.893 Y107.645 E7.04426 ; perimeter ;WIDTH:0.477736 G1 X106.394 Y107.681 E7.05111 ; perimeter ;WIDTH:0.503713 G1 X106.922 Y107.753 E7.05881 ; perimeter G1 X107.265 Y107.869 E7.06404 ; perimeter ;WIDTH:0.535372 G1 X107.758 Y108.095 E7.07241 ; perimeter ;WIDTH:0.559025 G1 X108.253 Y108.529 E7.08306 ; perimeter ;WIDTH:0.559465 G1 X108.52 Y108.965 E7.09134 ; perimeter G1 X108.007 Y109.111 E7.09998 ; perimeter G1 X107.832 Y108.821 E7.10547 ; perimeter ;WIDTH:0.547079 G1 X107.434 Y108.466 E7.1139 ; perimeter ;WIDTH:0.535372 G1 X107.026 Y108.257 E7.12098 ; perimeter ;WIDTH:0.492394 G1 X106.381 Y108.107 E7.13031 ; perimeter ;WIDTH:0.477098 G1 X105.961 Y108.078 E7.13604 ; perimeter ;WIDTH:0.480471 G1 X105.454 Y108.12 E7.14302 ; perimeter ;WIDTH:0.501174 G1 X104.989 Y108.249 E7.14995 ; perimeter ;WIDTH:0.539254 G1 X104.549 Y108.488 E7.15774 ; perimeter G1 X104.451 Y108.624 E7.16035 ; perimeter ;WIDTH:0.492836 G1 X104.352 Y108.76 E7.16272 ; perimeter ;WIDTH:0.446418 G1 X104.254 Y108.895 E7.16483 ; perimeter ;WIDTH:0.399999 G1 X104 Y109.332 E7.17049 ; perimeter G1 X103.829 Y109.829 E7.17637 ; perimeter G1 X103.735 Y110.34 E7.18219 ; perimeter G1 X103.701 Y110.959 E7.18913 ; perimeter ;WIDTH:0.438366 G1 X103.73 Y111.027 E7.19005 ; perimeter G1 X104.096 Y111.188 F9000 ; move inwards before travel G1 E.69005 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.096 Y111.281 F9000 ; move to first perimeter point G1 X108.582 Y111.401 ; move to first perimeter point G1 X107.884 Y113.886 ; move to first perimeter point G1 X107.672 Y114.068 ; move to first perimeter point G1 X111.301 Y117.064 ; move to first perimeter point G1 X111.301 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506442 G1 F2250 G1 X111.301 Y108.146 E6.62851 ; perimeter G1 X111.711 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X111.711 Y108.146 E6.6331 ; perimeter G1 X111.711 Y117.4 E6.7367 ; perimeter G1 X110.89 Y117.4 E6.74589 ; perimeter G1 X110.89 Y107.736 E6.85408 ; perimeter G1 X111.651 Y107.736 E6.8626 ; perimeter G1 X111.71 Y108.132 F9000 ; move inwards before travel G1 E.3626 F1500 ; retract G92 E0 ; reset extrusion distance G1 X111.42 Y108.168 F9000 ; move to first perimeter point G1 X114.386 Y117.064 ; move to first perimeter point G1 X114.386 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.50644 G1 F2250 G1 X114.386 Y108.146 E6.6285 ; perimeter G1 X114.797 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X114.797 Y108.146 E6.63309 ; perimeter G1 X114.797 Y117.4 E6.73669 ; perimeter G1 X113.976 Y117.4 E6.74588 ; perimeter G1 X113.976 Y107.736 E6.85407 ; perimeter G1 X114.737 Y107.736 E6.86259 ; perimeter G1 X114.796 Y108.132 F9000 ; move inwards before travel G1 E.36259 F1500 ; retract G92 E0 ; reset extrusion distance G1 X114.506 Y108.168 F9000 ; move to first perimeter point G1 X117.843 Y108.468 ; move to first perimeter point G1 X118.293 Y108.418 ; move to first perimeter point G1 X118.359 Y108.525 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.534751 G1 F2250 G1 X118.379 Y108.493 E6.50058 ; perimeter G1 X118.786 Y108.251 E6.50788 ; perimeter ;WIDTH:0.496196 G1 X119.247 Y108.112 E6.51472 ; perimeter ;WIDTH:0.474055 G1 X119.751 Y108.067 E6.52156 ; perimeter ;WIDTH:0.473836 G1 X120.276 Y108.111 E6.52868 ; perimeter ;WIDTH:0.49236 G1 X120.76 Y108.244 E6.53575 ; perimeter ;WIDTH:0.529434 G1 X121.2 Y108.489 E6.54343 ; perimeter G1 X121.289 Y108.617 E6.54581 ; perimeter ;WIDTH:0.488852 G1 X121.378 Y108.746 E6.548 ; perimeter ;WIDTH:0.44827 G1 X121.468 Y108.874 E6.54999 ; perimeter ;WIDTH:0.407687 G1 X121.699 Y109.32 E6.55573 ; perimeter ;WIDTH:0.399999 G1 X121.852 Y109.831 E6.5617 ; perimeter G1 X121.949 Y110.456 E6.56878 ; perimeter G1 X121.985 Y111.204 E6.57716 ; perimeter G1 X121.956 Y111.928 E6.58527 ; perimeter G1 X121.87 Y112.552 E6.59232 ; perimeter G1 X121.723 Y113.079 E6.59844 ; perimeter G1 X121.486 Y113.549 E6.60433 ; perimeter ;WIDTH:0.445292 G1 X121.396 Y113.681 E6.60635 ; perimeter ;WIDTH:0.490585 G1 X121.306 Y113.813 E6.60859 ; perimeter ;WIDTH:0.535877 G1 X121.216 Y113.945 E6.61106 ; perimeter G1 X120.805 Y114.171 E6.61831 ; perimeter ;WIDTH:0.495606 G1 X120.335 Y114.3 E6.62523 ; perimeter ;WIDTH:0.473786 G1 X119.834 Y114.342 E6.63202 ; perimeter ;WIDTH:0.470433 G1 X119.298 Y114.287 E6.63924 ; perimeter ;WIDTH:0.497376 G1 X118.766 Y114.144 E6.64709 ; perimeter ;WIDTH:0.516089 G1 X118.355 Y113.887 E6.65428 ; perimeter G1 X118.268 Y113.758 E6.65659 ; perimeter ;WIDTH:0.477393 G1 X118.18 Y113.629 E6.65872 ; perimeter ;WIDTH:0.438696 G1 X118.093 Y113.5 E6.66065 ; perimeter ;WIDTH:0.399999 G1 X117.869 Y113.064 E6.66614 ; perimeter G1 X117.718 Y112.562 E6.67201 ; perimeter G1 X117.623 Y111.937 E6.67909 ; perimeter G1 X117.591 Y111.219 E6.68714 ; perimeter G1 X117.62 Y110.521 E6.69496 ; perimeter G1 X117.711 Y109.91 E6.70188 ; perimeter G1 X117.864 Y109.383 E6.70802 ; perimeter G1 X118.088 Y108.932 E6.71366 ; perimeter G1 X118.158 Y108.845 E6.71491 ; perimeter ;WIDTH:0.444917 G1 X118.231 Y108.727 E6.71666 ; perimeter ;WIDTH:0.489834 G1 X118.305 Y108.61 E6.7186 ; perimeter ;WIDTH:0.534751 G1 X118.327 Y108.575 E6.71924 ; perimeter G1 X118.649 Y108.338 F9000 ; move inwards before travel G1 X118.447 Y108.006 ; move to first perimeter point G1 X121.028 Y107.958 ; move to first perimeter point G1 X121.686 Y108.413 ; move to first perimeter point G1 X121.84 Y108.567 ; move to first perimeter point G1 X121.745 Y108.662 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.432575 G1 F2250 G1 X121.897 Y108.901 E6.7227 ; perimeter ;WIDTH:0.474704 G1 X122.05 Y109.14 E6.72654 ; perimeter ;WIDTH:0.502218 G1 X122.153 Y109.426 E6.73092 ; perimeter ;WIDTH:0.529732 G1 X122.257 Y109.712 E6.73556 ; perimeter ;WIDTH:0.558436 G1 X122.381 Y110.393 E6.74675 ; perimeter ;WIDTH:0.565436 G1 X122.424 Y111.185 E6.75974 ; perimeter G1 X122.391 Y111.945 E6.7722 ; perimeter ;WIDTH:0.555306 G1 X122.289 Y112.611 E6.78302 ; perimeter ;WIDTH:0.532508 G1 X122.113 Y113.189 E6.79229 ; perimeter ;WIDTH:0.495616 G1 X121.981 Y113.434 E6.79624 ; perimeter ;WIDTH:0.467625 G1 X121.849 Y113.679 E6.79995 ; perimeter ;WIDTH:0.439634 G1 X121.705 Y113.842 E6.80266 ; perimeter G1 X121.803 Y113.937 F9000 ; move to first perimeter point G1 X119.804 Y114.69 ; move to first perimeter point G1 X117.686 Y113.795 ; move to first perimeter point G1 X117.654 Y113.736 ; move to first perimeter point G1 X117.769 Y113.674 ; move to first perimeter point ;WIDTH:0.428144 G1 F2250 G1 X117.513 Y113.171 E6.80948 ; perimeter ;WIDTH:0.477329 G1 X117.415 Y112.928 E6.81305 ; perimeter ;WIDTH:0.526514 G1 X117.316 Y112.686 E6.81701 ; perimeter G1 X117.219 Y111.997 E6.82756 ; perimeter ;WIDTH:0.530951 G1 X117.187 Y111.618 E6.83338 ; perimeter ;WIDTH:0.559864 G1 X117.154 Y111.238 E6.83956 ; perimeter G1 X117.186 Y110.503 E6.85148 ; perimeter ;WIDTH:0.554708 G1 X117.294 Y109.847 E6.86215 ; perimeter ;WIDTH:0.52903 G1 X117.48 Y109.269 E6.8714 ; perimeter ;WIDTH:0.486726 G1 X117.617 Y109.021 E6.87534 ; perimeter ;WIDTH:0.456459 G1 X117.754 Y108.773 E6.87901 ; perimeter ;WIDTH:0.426192 G1 X117.888 Y108.617 E6.88148 ; perimeter G1 X117.486 Y113.923 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X116.909 Y112.813 E6.89548 ; perimeter G1 X116.712 Y111.159 E6.91413 ; perimeter G1 X116.765 Y110.336 E6.92336 ; perimeter G1 X116.92 Y109.6 E6.93178 ; perimeter G1 X117.19 Y108.956 E6.9396 ; perimeter G1 X117.515 Y108.48 E6.94605 ; perimeter ;WIDTH:0.441054 G1 X117.668 Y108.37 E6.9484 ; perimeter ;WIDTH:0.482108 G1 X117.821 Y108.259 E6.951 ; perimeter ;WIDTH:0.523162 G1 X117.973 Y108.149 E6.95382 ; perimeter G1 X118.421 Y107.9 E6.96154 ; perimeter ;WIDTH:0.518742 G1 X118.652 Y107.818 E6.9652 ; perimeter ;WIDTH:0.496196 G1 X119.209 Y107.683 E6.97334 ; perimeter ;WIDTH:0.474055 G1 X119.797 Y107.64 E6.98131 ; perimeter ;WIDTH:0.484929 G1 X120.495 Y107.705 E6.99102 ; perimeter ;WIDTH:0.502287 G1 X120.997 Y107.847 E6.99853 ; perimeter ;WIDTH:0.529434 G1 X121.625 Y108.181 E7.00938 ; perimeter ;WIDTH:0.488852 G1 X121.79 Y108.282 E7.01208 ; perimeter ;WIDTH:0.44827 G1 X121.954 Y108.383 E7.01453 ; perimeter ;WIDTH:0.407687 G1 X122.112 Y108.54 E7.01708 ; perimeter ;WIDTH:0.399999 G1 X122.461 Y109.091 E7.02438 ; perimeter G1 X122.692 Y109.735 E7.03204 ; perimeter G1 X122.822 Y110.459 E7.04027 ; perimeter G1 X122.865 Y111.237 E7.04899 ; perimeter G1 X122.812 Y112.125 E7.05895 ; perimeter G1 X122.662 Y112.883 E7.0676 ; perimeter G1 X122.41 Y113.513 E7.0752 ; perimeter G1 X122.084 Y113.984 E7.08161 ; perimeter ;WIDTH:0.437478 G1 X121.937 Y114.087 E7.08383 ; perimeter ;WIDTH:0.474957 G1 X121.789 Y114.19 E7.08627 ; perimeter ;WIDTH:0.512436 G1 X121.642 Y114.292 E7.0889 ; perimeter ;WIDTH:0.522117 G1 X121.188 Y114.52 E7.09653 ; perimeter G1 X120.929 Y114.606 E7.10063 ; perimeter ;WIDTH:0.495606 G1 X120.37 Y114.729 E7.10875 ; perimeter ;WIDTH:0.473786 G1 X119.746 Y114.763 E7.11719 ; perimeter ;WIDTH:0.468761 G1 X119.161 Y114.675 E7.12509 ; perimeter ;WIDTH:0.484182 G1 X118.81 Y114.601 E7.13005 ; perimeter ;WIDTH:0.517387 G1 X118.459 Y114.526 E7.13539 ; perimeter G1 X118.044 Y114.24 E7.14289 ; perimeter ;WIDTH:0.516089 G1 X117.858 Y114.134 E7.14607 ; perimeter ;WIDTH:0.477393 G1 X117.672 Y114.029 E7.14898 ; perimeter ;WIDTH:0.438696 G1 X117.538 Y113.953 E7.15089 ; perimeter G1 X117.328 Y113.612 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:3.6 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 17; ;LAYER:17 G1 E.65089 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z3.6 F9000 ; simple layer change G1 X117.531 Y113.507 ; travel to first layer point G1 X114.52 Y113.431 ; travel to first layer point G1 X114.252 Y113.414 ; travel to first layer point G1 X111.434 Y113.232 ; travel to first layer point G1 X111.167 Y113.215 ; travel to first layer point G1 X108.35 Y113.033 ; travel to first layer point G1 X106.999 Y114.493 ; travel to first layer point G1 X104.662 Y114.441 ; travel to first layer point G1 X103.286 Y112.707 ; travel to first layer point G1 X100.363 Y112.518 ; travel to first layer point G1 X93.675 Y112.551 ; travel to first layer point G1 X93.657 Y112.1 ; travel to first layer point G1 X93.792 Y112.095 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.59053 G1 F2250 G1 X93.787 Y111.986 E6.50187 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y108.184 E6.56601 ; perimeter G1 X93.787 Y116.443 F9000 ; move to first perimeter point G1 F2250 G1 X93.787 Y113.028 E6.62362 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.399111 G1 F2250 G1 X94.175 Y112.549 E6.62581 ; perimeter ;WIDTH:0.420375 G1 X94.028 Y112.641 E6.62786 ; perimeter ;WIDTH:0.460542 G1 X93.968 Y112.737 E6.62934 ; perimeter ;WIDTH:0.500709 G1 X93.908 Y112.834 E6.63098 ; perimeter ;WIDTH:0.540876 G1 X93.847 Y112.931 E6.63277 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y113.028 E6.63469 ; perimeter G1 X93.767 Y112.898 E6.63691 ; perimeter ;WIDTH:0.540876 G1 X93.747 Y112.767 E6.63898 ; perimeter ;WIDTH:0.500709 G1 X93.727 Y112.637 E6.64087 ; perimeter ;WIDTH:0.460542 G1 X93.707 Y112.507 E6.64259 ; perimeter ;WIDTH:0.462914 G1 X93.728 Y112.404 E6.64397 ; perimeter ;WIDTH:0.505453 G1 X93.749 Y112.301 E6.64549 ; perimeter ;WIDTH:0.547992 G1 X93.77 Y112.198 E6.64715 ; perimeter ;WIDTH:0.59053 G1 X93.792 Y112.095 E6.64896 ; perimeter G1 X93.851 Y112.164 E6.65052 ; perimeter ;WIDTH:0.547992 G1 X93.91 Y112.234 E6.65197 ; perimeter ;WIDTH:0.505453 G1 X93.969 Y112.303 E6.65329 ; perimeter ;WIDTH:0.462914 G1 X94.028 Y112.373 E6.6545 ; perimeter ;WIDTH:0.420375 G1 X94.175 Y112.465 E6.65655 ; perimeter ;WIDTH:0.399111 G1 X94.309 Y112.494 E6.65808 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.374822 G1 F2250 G1 X99.623 Y112.507 E6.71277 ; perimeter G1 X100.249 Y116.443 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y113.028 E6.77038 ; perimeter G1 X100.245 Y112.095 F9000 ; move to first perimeter point ;WIDTH:0.590528 G1 F2250 G1 X100.266 Y112.198 E6.77218 ; perimeter ;WIDTH:0.54799 G1 X100.287 Y112.301 E6.77384 ; perimeter ;WIDTH:0.505452 G1 X100.308 Y112.404 E6.77536 ; perimeter ;WIDTH:0.462914 G1 X100.33 Y112.507 E6.77675 ; perimeter ;WIDTH:0.460542 G1 X100.31 Y112.637 E6.77847 ; perimeter ;WIDTH:0.500708 G1 X100.29 Y112.767 E6.78036 ; perimeter ;WIDTH:0.540874 G1 X100.269 Y112.898 E6.78243 ; perimeter ;WIDTH:0.58104 G1 X100.249 Y113.028 E6.78465 ; perimeter G1 X100.189 Y112.931 E6.78657 ; perimeter ;WIDTH:0.540874 G1 X100.129 Y112.834 E6.78835 ; perimeter ;WIDTH:0.500708 G1 X100.068 Y112.737 E6.78999 ; perimeter ;WIDTH:0.460542 G1 X100.008 Y112.641 E6.79147 ; perimeter ;WIDTH:0.420375 G1 X99.862 Y112.547 E6.79352 ; perimeter ;WIDTH:0.402898 G1 X99.623 Y112.507 E6.79625 ; perimeter G1 X99.862 Y112.467 E6.79898 ; perimeter ;WIDTH:0.420375 G1 X100.008 Y112.373 E6.80103 ; perimeter ;WIDTH:0.462914 G1 X100.067 Y112.303 E6.80224 ; perimeter ;WIDTH:0.505452 G1 X100.126 Y112.234 E6.80356 ; perimeter ;WIDTH:0.54799 G1 X100.185 Y112.164 E6.80501 ; perimeter ;WIDTH:0.590528 G1 X100.206 Y112.14 E6.80556 ; perimeter G1 X100.249 Y108.184 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y111.986 E6.8697 ; perimeter ;WIDTH:0.590528 G1 X100.245 Y112.095 E6.87157 ; perimeter G1 X99.752 Y112.907 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F1500 G1 X99.749 Y112.901 E6.87165 ; perimeter G1 X99.623 Y112.849 E6.87318 ; perimeter G1 X94.413 Y112.849 E6.9315 ; perimeter G1 X94.334 Y112.868 E6.93241 ; perimeter G1 X94.235 Y113.028 E6.93452 ; perimeter G1 X94.235 Y116.891 E6.97777 ; perimeter G1 X93.339 Y116.891 E6.9878 ; perimeter G1 X93.339 Y107.736 E7.09029 ; perimeter G1 X94.235 Y107.736 E7.10032 ; perimeter G1 X94.235 Y111.986 E7.1479 ; perimeter G1 X94.287 Y112.112 E7.14943 ; perimeter G1 X94.413 Y112.164 E7.15096 ; perimeter G1 X99.623 Y112.164 E7.20928 ; perimeter G1 X99.749 Y112.112 E7.21081 ; perimeter G1 X99.802 Y111.986 E7.21234 ; perimeter G1 X99.802 Y107.736 E7.25992 ; perimeter G1 X100.697 Y107.736 E7.26994 ; perimeter G1 X100.697 Y108.184 E7.27496 ; perimeter G1 X100.697 Y116.891 E7.37243 ; perimeter G1 X99.802 Y116.891 E7.38245 ; perimeter G1 X99.802 Y113.028 E7.4257 ; perimeter G1 X99.775 Y112.963 E7.42649 ; perimeter G1 X99.389 Y112.856 F9000 ; move inwards before travel G1 E.92649 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.389 Y112.641 F9000 ; move to first perimeter point G1 X100.364 Y112.61 ; move to first perimeter point G1 X103.162 Y111.904 ; move to first perimeter point G1 X103.764 Y111.549 ; move to first perimeter point G1 X103.764 Y111.752 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.438365 G1 F2250 G1 X103.787 Y111.694 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.839 Y111.666 E6.50155 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.638 E6.50239 ; perimeter G1 X107.9 Y111.638 E6.55849 ; perimeter G1 X107.979 Y111.709 E6.55998 ; perimeter ;WIDTH:0.44468 G1 X108.059 Y111.779 E6.56132 ; perimeter ;WIDTH:0.399999 G1 X108.077 Y111.886 E6.56253 ; perimeter G1 X107.998 Y112.452 E6.56893 ; perimeter G1 X107.87 Y112.939 E6.57457 ; perimeter G1 X107.612 Y113.463 E6.58111 ; perimeter ;WIDTH:0.438032 G1 X107.56 Y113.565 E6.58253 ; perimeter ;WIDTH:0.476065 G1 X107.507 Y113.666 E6.58408 ; perimeter ;WIDTH:0.514097 G1 X107.455 Y113.768 E6.58577 ; perimeter G1 X107.016 Y114.094 E6.59385 ; perimeter ;WIDTH:0.510783 G1 X106.752 Y114.198 E6.59801 ; perimeter ;WIDTH:0.46551 G1 X106.332 Y114.297 E6.60373 ; perimeter ;WIDTH:0.470099 G1 X105.863 Y114.341 E6.61004 ; perimeter ;WIDTH:0.486022 G1 X105.303 Y114.277 E6.61787 ; perimeter ;WIDTH:0.516686 G1 X104.807 Y114.098 E6.6257 ; perimeter ;WIDTH:0.547115 G1 X104.45 Y113.863 E6.63246 ; perimeter G1 X104.391 Y113.766 E6.63425 ; perimeter ;WIDTH:0.498077 G1 X104.331 Y113.67 E6.63587 ; perimeter ;WIDTH:0.449038 G1 X104.272 Y113.574 E6.6373 ; perimeter ;WIDTH:0.399999 G1 X104.063 Y113.273 E6.6414 ; perimeter G1 X103.882 Y112.86 E6.64645 ; perimeter G1 X103.767 Y112.396 E6.6518 ; perimeter G1 X103.714 Y111.88 E6.65761 ; perimeter ;WIDTH:0.438365 G1 X103.742 Y111.808 E6.65857 ; perimeter G1 X104.105 Y111.641 F9000 ; move inwards before travel G1 X104.105 Y111.281 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X107.823 Y113.943 ; move to first perimeter point G1 X105.556 Y114.664 ; move to first perimeter point G1 X103.973 Y113.955 ; move to first perimeter point G1 X103.89 Y113.865 ; move to first perimeter point G1 X103.99 Y113.773 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.415434 G1 F2250 G1 X103.73 Y113.422 E6.66367 ; perimeter ;WIDTH:0.458638 G1 X103.507 Y112.955 E6.67041 ; perimeter ;WIDTH:0.497754 G1 X103.363 Y112.437 E6.67808 ; perimeter ;WIDTH:0.538968 G1 X103.29 Y111.923 E6.68615 ; perimeter ;WIDTH:0.584825 G1 X103.305 Y111.798 E6.68829 ; perimeter ;WIDTH:0.630682 G1 X103.32 Y111.673 E6.69061 ; perimeter ;WIDTH:0.676539 G1 X103.335 Y111.548 E6.69311 ; perimeter ;WIDTH:0.722396 G1 X103.35 Y111.422 E6.69581 ; perimeter G1 X103.322 Y111.337 E6.69772 ; perimeter ;WIDTH:0.676011 G1 X103.293 Y111.251 E6.69952 ; perimeter ;WIDTH:0.629626 G1 X103.282 Y111.093 E6.70243 ; perimeter ;WIDTH:0.588436 G1 X103.271 Y110.935 E6.70514 ; perimeter ;WIDTH:0.547246 G1 X103.327 Y110.24 E6.71616 ; perimeter ;WIDTH:0.520872 G1 X103.437 Y109.703 E6.72437 ; perimeter ;WIDTH:0.502432 G1 X103.638 Y109.175 E6.73251 ; perimeter ;WIDTH:0.471914 G1 X103.905 Y108.751 E6.73925 ; perimeter ;WIDTH:0.43226 G1 X104.067 Y108.577 E6.74215 ; perimeter G1 X103.972 Y108.483 F9000 ; move to first perimeter point G1 X103.134 Y111.014 ; move to first perimeter point G1 X103.813 Y113.781 ; move to first perimeter point G1 X105.897 Y114.69 ; move to first perimeter point G1 X107.983 Y113.787 ; move to first perimeter point G1 X108.601 Y111.713 ; move to first perimeter point G1 X108.593 Y111.571 ; move to first perimeter point G1 X108.443 Y111.58 ; move to first perimeter point ;WIDTH:0.552284 G1 F2250 G1 X108.447 Y111.7 E6.74407 ; perimeter ;WIDTH:0.517228 G1 X108.451 Y111.819 E6.74584 ; perimeter ;WIDTH:0.482172 G1 X108.454 Y111.938 E6.74748 ; perimeter ;WIDTH:0.458504 G1 X108.381 Y112.505 E6.75493 ; perimeter G1 X108.296 Y112.768 E6.75853 ; perimeter ;WIDTH:0.424891 G1 X108.211 Y113.03 E6.76183 ; perimeter ;WIDTH:0.391278 G1 X107.996 Y113.491 E6.76739 ; perimeter ;WIDTH:0.385752 G1 X107.896 Y113.668 E6.76958 ; perimeter G1 X108.013 Y113.736 F9000 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X104.17 Y111.281 ; move to first perimeter point G1 X103.754 Y111.281 ; move to first perimeter point G1 X103.754 Y111.082 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.438365 G1 F2250 G1 X103.779 Y111.139 E6.77035 ; perimeter ;WIDTH:0.463863 G1 X103.835 Y111.165 E6.77116 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.192 E6.77204 ; perimeter G1 X107.9 Y111.192 E6.82814 ; perimeter G1 X108.416 Y111.169 E6.83537 ; perimeter ;WIDTH:0.44468 G1 X108.931 Y111.147 E6.84186 ; perimeter ;WIDTH:0.399999 G1 X108.74 Y112.758 E6.86002 ; perimeter G1 X108.171 Y113.901 E6.87431 ; perimeter ;WIDTH:0.438032 G1 X108.03 Y113.98 E6.87631 ; perimeter ;WIDTH:0.476065 G1 X107.888 Y114.059 E6.87852 ; perimeter ;WIDTH:0.514097 G1 X107.747 Y114.138 E6.88091 ; perimeter G1 X107.26 Y114.492 E6.8898 ; perimeter ;WIDTH:0.510783 G1 X106.878 Y114.604 E6.89564 ; perimeter ;WIDTH:0.467891 G1 X106.382 Y114.699 E6.90237 ; perimeter ;WIDTH:0.470099 G1 X105.827 Y114.767 E6.90986 ; perimeter ;WIDTH:0.486022 G1 X105.18 Y114.702 E6.91889 ; perimeter ;WIDTH:0.516686 G1 X104.578 Y114.513 E6.92826 ; perimeter ;WIDTH:0.537816 G1 X103.924 Y114.116 E6.94013 ; perimeter ;WIDTH:0.491877 G1 X103.773 Y114.011 E6.94272 ; perimeter ;WIDTH:0.445938 G1 X103.622 Y113.906 E6.94504 ; perimeter ;WIDTH:0.399999 G1 X103.275 Y113.405 E6.95186 ; perimeter G1 X103.025 Y112.798 E6.95921 ; perimeter G1 X102.872 Y112.081 E6.96742 ; perimeter G1 X102.82 Y111.252 E6.97672 ; perimeter G1 X102.872 Y110.381 E6.98649 ; perimeter G1 X103.025 Y109.633 E6.99504 ; perimeter G1 X103.276 Y109.009 E7.00257 ; perimeter G1 X103.597 Y108.54 E7.00893 ; perimeter G1 X103.833 Y108.315 E7.01258 ; perimeter ;WIDTH:0.445318 G1 X103.999 Y108.225 E7.01496 ; perimeter ;WIDTH:0.490637 G1 X104.164 Y108.135 E7.0176 ; perimeter ;WIDTH:0.535955 G1 X104.801 Y107.827 E7.02854 ; perimeter ;WIDTH:0.504492 G1 X105.346 Y107.691 E7.03667 ; perimeter ;WIDTH:0.483772 G1 X105.893 Y107.645 E7.04426 ; perimeter ;WIDTH:0.477737 G1 X106.394 Y107.681 E7.05111 ; perimeter ;WIDTH:0.503713 G1 X106.922 Y107.753 E7.05881 ; perimeter G1 X107.265 Y107.869 E7.06404 ; perimeter ;WIDTH:0.535373 G1 X107.758 Y108.095 E7.07241 ; perimeter ;WIDTH:0.559025 G1 X108.253 Y108.529 E7.08306 ; perimeter ;WIDTH:0.559464 G1 X108.52 Y108.965 E7.09134 ; perimeter G1 X108.007 Y109.111 E7.09998 ; perimeter G1 X107.832 Y108.821 E7.10547 ; perimeter ;WIDTH:0.547079 G1 X107.434 Y108.466 E7.1139 ; perimeter ;WIDTH:0.535373 G1 X107.026 Y108.257 E7.12098 ; perimeter ;WIDTH:0.492394 G1 X106.381 Y108.107 E7.13031 ; perimeter ;WIDTH:0.477098 G1 X105.961 Y108.078 E7.13604 ; perimeter ;WIDTH:0.480471 G1 X105.454 Y108.12 E7.14302 ; perimeter ;WIDTH:0.501175 G1 X104.989 Y108.249 E7.14995 ; perimeter ;WIDTH:0.539254 G1 X104.549 Y108.488 E7.15774 ; perimeter G1 X104.451 Y108.624 E7.16035 ; perimeter ;WIDTH:0.492836 G1 X104.352 Y108.76 E7.16272 ; perimeter ;WIDTH:0.446418 G1 X104.254 Y108.895 E7.16483 ; perimeter ;WIDTH:0.399999 G1 X104 Y109.332 E7.17049 ; perimeter G1 X103.829 Y109.829 E7.17637 ; perimeter G1 X103.735 Y110.34 E7.18219 ; perimeter G1 X103.701 Y110.959 E7.18913 ; perimeter ;WIDTH:0.438365 G1 X103.73 Y111.027 E7.19005 ; perimeter G1 X104.096 Y111.188 F9000 ; move inwards before travel G1 E.69005 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.096 Y111.281 F9000 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X107.823 Y113.943 ; move to first perimeter point G1 X107.671 Y114.067 ; move to first perimeter point G1 X111.301 Y117.064 ; move to first perimeter point G1 X111.301 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506442 G1 F2250 G1 X111.301 Y108.146 E6.62851 ; perimeter G1 X111.711 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X111.711 Y108.146 E6.6331 ; perimeter G1 X111.711 Y117.4 E6.7367 ; perimeter G1 X110.89 Y117.4 E6.74589 ; perimeter G1 X110.89 Y107.736 E6.85408 ; perimeter G1 X111.651 Y107.736 E6.8626 ; perimeter G1 X111.71 Y108.132 F9000 ; move inwards before travel G1 E.3626 F1500 ; retract G92 E0 ; reset extrusion distance G1 X111.42 Y108.168 F9000 ; move to first perimeter point G1 X114.386 Y117.064 ; move to first perimeter point G1 X114.386 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.50644 G1 F2250 G1 X114.386 Y108.146 E6.6285 ; perimeter G1 X114.797 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X114.797 Y108.146 E6.63309 ; perimeter G1 X114.797 Y117.4 E6.73669 ; perimeter G1 X113.976 Y117.4 E6.74588 ; perimeter G1 X113.976 Y107.736 E6.85407 ; perimeter G1 X114.737 Y107.736 E6.86259 ; perimeter G1 X114.796 Y108.132 F9000 ; move inwards before travel G1 E.36259 F1500 ; retract G92 E0 ; reset extrusion distance G1 X114.506 Y108.168 F9000 ; move to first perimeter point G1 X117.842 Y108.468 ; move to first perimeter point G1 X118.292 Y108.418 ; move to first perimeter point G1 X118.359 Y108.525 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.534751 G1 F2250 G1 X118.379 Y108.493 E6.50058 ; perimeter G1 X118.786 Y108.251 E6.50788 ; perimeter ;WIDTH:0.496195 G1 X119.247 Y108.112 E6.51472 ; perimeter ;WIDTH:0.474056 G1 X119.751 Y108.067 E6.52156 ; perimeter ;WIDTH:0.473836 G1 X120.276 Y108.111 E6.52868 ; perimeter ;WIDTH:0.49236 G1 X120.76 Y108.244 E6.53575 ; perimeter ;WIDTH:0.529434 G1 X121.2 Y108.489 E6.54343 ; perimeter G1 X121.289 Y108.617 E6.54581 ; perimeter ;WIDTH:0.48885 G1 X121.378 Y108.746 E6.548 ; perimeter ;WIDTH:0.448265 G1 X121.468 Y108.874 E6.54999 ; perimeter ;WIDTH:0.40768 G1 X121.699 Y109.32 E6.55573 ; perimeter ;WIDTH:0.399999 G1 X121.852 Y109.831 E6.5617 ; perimeter G1 X121.949 Y110.456 E6.56878 ; perimeter G1 X121.985 Y111.204 E6.57716 ; perimeter G1 X121.956 Y111.928 E6.58527 ; perimeter G1 X121.87 Y112.552 E6.59232 ; perimeter G1 X121.723 Y113.079 E6.59844 ; perimeter G1 X121.486 Y113.549 E6.60433 ; perimeter ;WIDTH:0.445292 G1 X121.396 Y113.681 E6.60635 ; perimeter ;WIDTH:0.490585 G1 X121.306 Y113.813 E6.60859 ; perimeter ;WIDTH:0.535877 G1 X121.216 Y113.945 E6.61106 ; perimeter G1 X120.805 Y114.171 E6.61831 ; perimeter ;WIDTH:0.495606 G1 X120.335 Y114.3 E6.62523 ; perimeter ;WIDTH:0.473786 G1 X119.834 Y114.342 E6.63202 ; perimeter ;WIDTH:0.470433 G1 X119.298 Y114.287 E6.63924 ; perimeter ;WIDTH:0.497375 G1 X118.766 Y114.144 E6.64709 ; perimeter ;WIDTH:0.516089 G1 X118.355 Y113.887 E6.65428 ; perimeter G1 X118.268 Y113.758 E6.65659 ; perimeter ;WIDTH:0.477393 G1 X118.18 Y113.629 E6.65872 ; perimeter ;WIDTH:0.438696 G1 X118.093 Y113.5 E6.66065 ; perimeter ;WIDTH:0.399999 G1 X117.869 Y113.064 E6.66614 ; perimeter G1 X117.718 Y112.562 E6.67201 ; perimeter G1 X117.623 Y111.937 E6.67909 ; perimeter G1 X117.591 Y111.219 E6.68714 ; perimeter G1 X117.62 Y110.521 E6.69496 ; perimeter G1 X117.711 Y109.91 E6.70188 ; perimeter G1 X117.864 Y109.383 E6.70802 ; perimeter G1 X118.088 Y108.932 E6.71366 ; perimeter G1 X118.158 Y108.845 E6.71491 ; perimeter ;WIDTH:0.444917 G1 X118.231 Y108.727 E6.71666 ; perimeter ;WIDTH:0.489834 G1 X118.305 Y108.61 E6.7186 ; perimeter ;WIDTH:0.534751 G1 X118.327 Y108.575 E6.71924 ; perimeter G1 X118.649 Y108.338 F9000 ; move inwards before travel G1 X118.447 Y108.006 ; move to first perimeter point G1 X121.026 Y107.956 ; move to first perimeter point G1 X121.716 Y108.442 ; move to first perimeter point G1 X121.84 Y108.567 ; move to first perimeter point G1 X121.745 Y108.662 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.432576 G1 F2250 G1 X121.897 Y108.901 E6.7227 ; perimeter ;WIDTH:0.474704 G1 X122.05 Y109.14 E6.72654 ; perimeter ;WIDTH:0.502218 G1 X122.153 Y109.426 E6.73092 ; perimeter ;WIDTH:0.529732 G1 X122.257 Y109.712 E6.73556 ; perimeter ;WIDTH:0.558436 G1 X122.381 Y110.393 E6.74675 ; perimeter ;WIDTH:0.565436 G1 X122.424 Y111.185 E6.75974 ; perimeter G1 X122.391 Y111.945 E6.7722 ; perimeter ;WIDTH:0.555306 G1 X122.289 Y112.611 E6.78302 ; perimeter ;WIDTH:0.532508 G1 X122.113 Y113.189 E6.79229 ; perimeter ;WIDTH:0.495618 G1 X121.981 Y113.434 E6.79624 ; perimeter ;WIDTH:0.467626 G1 X121.849 Y113.679 E6.79995 ; perimeter ;WIDTH:0.439634 G1 X121.705 Y113.842 E6.80266 ; perimeter G1 X121.802 Y113.936 F9000 ; move to first perimeter point G1 X119.805 Y114.69 ; move to first perimeter point G1 X117.686 Y113.795 ; move to first perimeter point G1 X117.654 Y113.736 ; move to first perimeter point G1 X117.769 Y113.674 ; move to first perimeter point ;WIDTH:0.428144 G1 F2250 G1 X117.513 Y113.171 E6.80948 ; perimeter ;WIDTH:0.477329 G1 X117.415 Y112.928 E6.81305 ; perimeter ;WIDTH:0.526514 G1 X117.316 Y112.686 E6.81701 ; perimeter G1 X117.219 Y111.997 E6.82756 ; perimeter ;WIDTH:0.530951 G1 X117.187 Y111.618 E6.83338 ; perimeter ;WIDTH:0.559864 G1 X117.154 Y111.238 E6.83956 ; perimeter G1 X117.186 Y110.503 E6.85148 ; perimeter ;WIDTH:0.554708 G1 X117.294 Y109.847 E6.86215 ; perimeter ;WIDTH:0.52903 G1 X117.48 Y109.269 E6.8714 ; perimeter ;WIDTH:0.486724 G1 X117.617 Y109.021 E6.87534 ; perimeter ;WIDTH:0.456459 G1 X117.754 Y108.773 E6.87901 ; perimeter ;WIDTH:0.426194 G1 X117.888 Y108.617 E6.88148 ; perimeter G1 X117.486 Y113.923 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X116.909 Y112.813 E6.89548 ; perimeter G1 X116.712 Y111.159 E6.91413 ; perimeter G1 X116.765 Y110.336 E6.92336 ; perimeter G1 X116.92 Y109.6 E6.93178 ; perimeter G1 X117.19 Y108.956 E6.9396 ; perimeter G1 X117.515 Y108.48 E6.94605 ; perimeter ;WIDTH:0.441053 G1 X117.668 Y108.37 E6.9484 ; perimeter ;WIDTH:0.482107 G1 X117.821 Y108.259 E6.951 ; perimeter ;WIDTH:0.523161 G1 X117.973 Y108.149 E6.95382 ; perimeter G1 X118.421 Y107.9 E6.96154 ; perimeter ;WIDTH:0.518742 G1 X118.652 Y107.818 E6.9652 ; perimeter ;WIDTH:0.496195 G1 X119.209 Y107.683 E6.97334 ; perimeter ;WIDTH:0.474056 G1 X119.797 Y107.64 E6.98131 ; perimeter ;WIDTH:0.484929 G1 X120.495 Y107.705 E6.99102 ; perimeter ;WIDTH:0.502287 G1 X120.997 Y107.847 E6.99853 ; perimeter ;WIDTH:0.529434 G1 X121.625 Y108.181 E7.00938 ; perimeter ;WIDTH:0.48885 G1 X121.79 Y108.282 E7.01208 ; perimeter ;WIDTH:0.448265 G1 X121.954 Y108.383 E7.01453 ; perimeter ;WIDTH:0.40768 G1 X122.112 Y108.54 E7.01708 ; perimeter ;WIDTH:0.399999 G1 X122.461 Y109.091 E7.02438 ; perimeter G1 X122.692 Y109.735 E7.03204 ; perimeter G1 X122.822 Y110.459 E7.04027 ; perimeter G1 X122.865 Y111.237 E7.04899 ; perimeter G1 X122.812 Y112.125 E7.05895 ; perimeter G1 X122.662 Y112.883 E7.0676 ; perimeter G1 X122.41 Y113.513 E7.0752 ; perimeter G1 X122.084 Y113.984 E7.08161 ; perimeter ;WIDTH:0.437479 G1 X121.937 Y114.087 E7.08383 ; perimeter ;WIDTH:0.474958 G1 X121.789 Y114.19 E7.08627 ; perimeter ;WIDTH:0.512437 G1 X121.642 Y114.292 E7.0889 ; perimeter ;WIDTH:0.52212 G1 X121.188 Y114.52 E7.09653 ; perimeter G1 X120.929 Y114.606 E7.10063 ; perimeter ;WIDTH:0.495606 G1 X120.37 Y114.729 E7.10875 ; perimeter ;WIDTH:0.473786 G1 X119.746 Y114.763 E7.11719 ; perimeter ;WIDTH:0.468761 G1 X119.161 Y114.675 E7.12509 ; perimeter ;WIDTH:0.484181 G1 X118.81 Y114.601 E7.13005 ; perimeter ;WIDTH:0.517386 G1 X118.459 Y114.526 E7.13539 ; perimeter G1 X118.044 Y114.24 E7.14289 ; perimeter ;WIDTH:0.516089 G1 X117.858 Y114.134 E7.14607 ; perimeter ;WIDTH:0.477393 G1 X117.672 Y114.029 E7.14898 ; perimeter ;WIDTH:0.438696 G1 X117.538 Y113.953 E7.15089 ; perimeter G1 X117.328 Y113.612 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:3.8 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 18; ;LAYER:18 G1 E.65089 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z3.8 F9000 ; simple layer change G1 X117.531 Y113.507 ; travel to first layer point G1 X114.52 Y113.431 ; travel to first layer point G1 X114.252 Y113.414 ; travel to first layer point G1 X111.434 Y113.232 ; travel to first layer point G1 X111.167 Y113.215 ; travel to first layer point G1 X108.353 Y113.034 ; travel to first layer point G1 X106.999 Y114.493 ; travel to first layer point G1 X104.666 Y114.444 ; travel to first layer point G1 X103.286 Y112.707 ; travel to first layer point G1 X100.363 Y112.518 ; travel to first layer point G1 X93.675 Y112.551 ; travel to first layer point G1 X93.657 Y112.1 ; travel to first layer point G1 X93.792 Y112.095 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.59053 G1 F2250 G1 X93.787 Y111.986 E6.50187 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y108.184 E6.56601 ; perimeter G1 X93.787 Y116.443 F9000 ; move to first perimeter point G1 F2250 G1 X93.787 Y113.028 E6.62362 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.399111 G1 F2250 G1 X94.175 Y112.549 E6.62581 ; perimeter ;WIDTH:0.420375 G1 X94.028 Y112.641 E6.62786 ; perimeter ;WIDTH:0.460542 G1 X93.968 Y112.737 E6.62934 ; perimeter ;WIDTH:0.500709 G1 X93.908 Y112.834 E6.63098 ; perimeter ;WIDTH:0.540876 G1 X93.847 Y112.931 E6.63277 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y113.028 E6.63469 ; perimeter G1 X93.767 Y112.898 E6.63691 ; perimeter ;WIDTH:0.540876 G1 X93.747 Y112.767 E6.63898 ; perimeter ;WIDTH:0.500709 G1 X93.727 Y112.637 E6.64087 ; perimeter ;WIDTH:0.460542 G1 X93.707 Y112.507 E6.64259 ; perimeter ;WIDTH:0.462914 G1 X93.728 Y112.404 E6.64397 ; perimeter ;WIDTH:0.505453 G1 X93.749 Y112.301 E6.64549 ; perimeter ;WIDTH:0.547992 G1 X93.77 Y112.198 E6.64715 ; perimeter ;WIDTH:0.59053 G1 X93.792 Y112.095 E6.64896 ; perimeter G1 X93.851 Y112.164 E6.65052 ; perimeter ;WIDTH:0.547992 G1 X93.91 Y112.234 E6.65197 ; perimeter ;WIDTH:0.505453 G1 X93.969 Y112.303 E6.65329 ; perimeter ;WIDTH:0.462914 G1 X94.028 Y112.373 E6.6545 ; perimeter ;WIDTH:0.420375 G1 X94.175 Y112.465 E6.65655 ; perimeter ;WIDTH:0.399111 G1 X94.309 Y112.494 E6.65808 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.374822 G1 F2250 G1 X99.623 Y112.507 E6.71277 ; perimeter G1 X100.249 Y116.443 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y113.028 E6.77038 ; perimeter G1 X100.245 Y112.095 F9000 ; move to first perimeter point ;WIDTH:0.590528 G1 F2250 G1 X100.266 Y112.198 E6.77218 ; perimeter ;WIDTH:0.54799 G1 X100.287 Y112.301 E6.77384 ; perimeter ;WIDTH:0.505452 G1 X100.308 Y112.404 E6.77536 ; perimeter ;WIDTH:0.462914 G1 X100.33 Y112.507 E6.77675 ; perimeter ;WIDTH:0.460542 G1 X100.31 Y112.637 E6.77847 ; perimeter ;WIDTH:0.500708 G1 X100.29 Y112.767 E6.78036 ; perimeter ;WIDTH:0.540874 G1 X100.269 Y112.898 E6.78243 ; perimeter ;WIDTH:0.58104 G1 X100.249 Y113.028 E6.78465 ; perimeter G1 X100.189 Y112.931 E6.78657 ; perimeter ;WIDTH:0.540874 G1 X100.129 Y112.834 E6.78835 ; perimeter ;WIDTH:0.500708 G1 X100.068 Y112.737 E6.78999 ; perimeter ;WIDTH:0.460542 G1 X100.008 Y112.641 E6.79147 ; perimeter ;WIDTH:0.420375 G1 X99.862 Y112.547 E6.79352 ; perimeter ;WIDTH:0.402898 G1 X99.623 Y112.507 E6.79625 ; perimeter G1 X99.862 Y112.467 E6.79898 ; perimeter ;WIDTH:0.420375 G1 X100.008 Y112.373 E6.80103 ; perimeter ;WIDTH:0.462914 G1 X100.067 Y112.303 E6.80224 ; perimeter ;WIDTH:0.505452 G1 X100.126 Y112.234 E6.80356 ; perimeter ;WIDTH:0.54799 G1 X100.185 Y112.164 E6.80501 ; perimeter ;WIDTH:0.590528 G1 X100.206 Y112.14 E6.80556 ; perimeter G1 X100.249 Y108.184 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y111.986 E6.8697 ; perimeter ;WIDTH:0.590528 G1 X100.245 Y112.095 E6.87157 ; perimeter G1 X99.752 Y112.907 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F1500 G1 X99.749 Y112.901 E6.87165 ; perimeter G1 X99.623 Y112.849 E6.87318 ; perimeter G1 X94.413 Y112.849 E6.9315 ; perimeter G1 X94.334 Y112.868 E6.93241 ; perimeter G1 X94.235 Y113.028 E6.93452 ; perimeter G1 X94.235 Y116.891 E6.97777 ; perimeter G1 X93.339 Y116.891 E6.9878 ; perimeter G1 X93.339 Y107.736 E7.09029 ; perimeter G1 X94.235 Y107.736 E7.10032 ; perimeter G1 X94.235 Y111.986 E7.1479 ; perimeter G1 X94.287 Y112.112 E7.14943 ; perimeter G1 X94.413 Y112.164 E7.15096 ; perimeter G1 X99.623 Y112.164 E7.20928 ; perimeter G1 X99.749 Y112.112 E7.21081 ; perimeter G1 X99.802 Y111.986 E7.21234 ; perimeter G1 X99.802 Y107.736 E7.25992 ; perimeter G1 X100.697 Y107.736 E7.26994 ; perimeter G1 X100.697 Y108.184 E7.27496 ; perimeter G1 X100.697 Y116.891 E7.37243 ; perimeter G1 X99.802 Y116.891 E7.38245 ; perimeter G1 X99.802 Y113.028 E7.4257 ; perimeter G1 X99.775 Y112.963 E7.42649 ; perimeter G1 X99.389 Y112.856 F9000 ; move inwards before travel G1 E.92649 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.389 Y112.641 F9000 ; move to first perimeter point G1 X100.364 Y112.61 ; move to first perimeter point G1 X103.161 Y111.904 ; move to first perimeter point G1 X103.764 Y111.549 ; move to first perimeter point G1 X103.764 Y111.752 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.438366 G1 F2250 G1 X103.787 Y111.694 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.839 Y111.666 E6.50155 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.638 E6.50239 ; perimeter G1 X107.9 Y111.638 E6.55849 ; perimeter G1 X107.979 Y111.709 E6.55998 ; perimeter ;WIDTH:0.44468 G1 X108.059 Y111.779 E6.56132 ; perimeter ;WIDTH:0.399999 G1 X108.077 Y111.886 E6.56253 ; perimeter G1 X107.998 Y112.452 E6.56893 ; perimeter G1 X107.87 Y112.939 E6.57457 ; perimeter G1 X107.612 Y113.463 E6.58111 ; perimeter ;WIDTH:0.438032 G1 X107.56 Y113.565 E6.58253 ; perimeter ;WIDTH:0.476065 G1 X107.507 Y113.666 E6.58408 ; perimeter ;WIDTH:0.514097 G1 X107.455 Y113.768 E6.58577 ; perimeter G1 X107.016 Y114.094 E6.59385 ; perimeter ;WIDTH:0.510783 G1 X106.752 Y114.198 E6.59801 ; perimeter ;WIDTH:0.46551 G1 X106.332 Y114.297 E6.60373 ; perimeter ;WIDTH:0.470099 G1 X105.863 Y114.341 E6.61004 ; perimeter ;WIDTH:0.486022 G1 X105.303 Y114.277 E6.61787 ; perimeter ;WIDTH:0.516686 G1 X104.807 Y114.098 E6.6257 ; perimeter ;WIDTH:0.547117 G1 X104.45 Y113.863 E6.63246 ; perimeter G1 X104.391 Y113.766 E6.63425 ; perimeter ;WIDTH:0.498078 G1 X104.331 Y113.67 E6.63587 ; perimeter ;WIDTH:0.449039 G1 X104.272 Y113.574 E6.6373 ; perimeter ;WIDTH:0.399999 G1 X104.063 Y113.273 E6.6414 ; perimeter G1 X103.882 Y112.86 E6.64645 ; perimeter G1 X103.767 Y112.396 E6.6518 ; perimeter G1 X103.714 Y111.88 E6.65761 ; perimeter ;WIDTH:0.438366 G1 X103.742 Y111.808 E6.65857 ; perimeter G1 X104.105 Y111.641 F9000 ; move inwards before travel G1 X104.105 Y111.549 ; move to first perimeter point G1 X103.545 Y111.549 ; move to first perimeter point G1 X103.454 Y112.145 ; move to first perimeter point G1 X103.501 Y112.456 ; move to first perimeter point G1 X103.559 Y112.677 ; move to first perimeter point G1 X103.649 Y112.957 ; move to first perimeter point G1 X103.74 Y113.157 ; move to first perimeter point G1 X103.873 Y113.401 ; move to first perimeter point G1 X104 Y113.574 ; move to first perimeter point G1 X104.094 Y113.684 ; move to first perimeter point G1 X103.99 Y113.773 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.415434 G1 F2250 G1 X103.73 Y113.422 E6.66367 ; perimeter ;WIDTH:0.458638 G1 X103.507 Y112.955 E6.67041 ; perimeter ;WIDTH:0.497754 G1 X103.363 Y112.437 E6.67808 ; perimeter ;WIDTH:0.538968 G1 X103.29 Y111.923 E6.68615 ; perimeter ;WIDTH:0.584825 G1 X103.305 Y111.798 E6.68829 ; perimeter ;WIDTH:0.630681 G1 X103.32 Y111.673 E6.69061 ; perimeter ;WIDTH:0.676538 G1 X103.335 Y111.548 E6.69311 ; perimeter ;WIDTH:0.722394 G1 X103.35 Y111.422 E6.69581 ; perimeter G1 X103.322 Y111.337 E6.69772 ; perimeter ;WIDTH:0.67601 G1 X103.293 Y111.251 E6.69952 ; perimeter ;WIDTH:0.629626 G1 X103.282 Y111.093 E6.70243 ; perimeter ;WIDTH:0.588436 G1 X103.271 Y110.935 E6.70514 ; perimeter ;WIDTH:0.547246 G1 X103.327 Y110.24 E6.71616 ; perimeter ;WIDTH:0.520872 G1 X103.437 Y109.703 E6.72437 ; perimeter ;WIDTH:0.502432 G1 X103.638 Y109.175 E6.73251 ; perimeter ;WIDTH:0.471914 G1 X103.905 Y108.751 E6.73925 ; perimeter ;WIDTH:0.43226 G1 X104.067 Y108.577 E6.74215 ; perimeter G1 X103.973 Y108.483 F9000 ; move to first perimeter point G1 X103.139 Y110.893 ; move to first perimeter point G1 X103.66 Y113.563 ; move to first perimeter point G1 X105.506 Y114.66 ; move to first perimeter point G1 X107.76 Y113.998 ; move to first perimeter point G1 X108.599 Y111.796 ; move to first perimeter point G1 X108.597 Y111.579 ; move to first perimeter point G1 X108.443 Y111.58 ; move to first perimeter point ;WIDTH:0.552284 G1 F2250 G1 X108.447 Y111.7 E6.74407 ; perimeter ;WIDTH:0.517228 G1 X108.451 Y111.819 E6.74584 ; perimeter ;WIDTH:0.482172 G1 X108.454 Y111.938 E6.74748 ; perimeter ;WIDTH:0.458504 G1 X108.381 Y112.505 E6.75493 ; perimeter G1 X108.296 Y112.768 E6.75853 ; perimeter ;WIDTH:0.424891 G1 X108.211 Y113.03 E6.76183 ; perimeter ;WIDTH:0.391278 G1 X107.996 Y113.491 E6.76739 ; perimeter ;WIDTH:0.385752 G1 X107.896 Y113.668 E6.76958 ; perimeter G1 X108.013 Y113.736 F9000 ; move to first perimeter point G1 X108.586 Y111.402 ; move to first perimeter point G1 X104.17 Y111.281 ; move to first perimeter point G1 X103.754 Y111.281 ; move to first perimeter point G1 X103.754 Y111.082 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.438366 G1 F2250 G1 X103.779 Y111.139 E6.77035 ; perimeter ;WIDTH:0.463863 G1 X103.835 Y111.165 E6.77116 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.192 E6.77204 ; perimeter G1 X107.9 Y111.192 E6.82814 ; perimeter G1 X108.416 Y111.169 E6.83537 ; perimeter ;WIDTH:0.44468 G1 X108.931 Y111.147 E6.84186 ; perimeter ;WIDTH:0.399999 G1 X108.74 Y112.758 E6.86002 ; perimeter G1 X108.171 Y113.901 E6.87431 ; perimeter ;WIDTH:0.438032 G1 X108.03 Y113.98 E6.87631 ; perimeter ;WIDTH:0.476065 G1 X107.888 Y114.059 E6.87852 ; perimeter ;WIDTH:0.514097 G1 X107.747 Y114.138 E6.88091 ; perimeter G1 X107.26 Y114.492 E6.8898 ; perimeter ;WIDTH:0.510783 G1 X106.878 Y114.604 E6.89564 ; perimeter ;WIDTH:0.467891 G1 X106.382 Y114.699 E6.90237 ; perimeter ;WIDTH:0.470099 G1 X105.827 Y114.767 E6.90986 ; perimeter ;WIDTH:0.486022 G1 X105.18 Y114.702 E6.91889 ; perimeter ;WIDTH:0.516686 G1 X104.578 Y114.513 E6.92826 ; perimeter ;WIDTH:0.537825 G1 X103.924 Y114.116 E6.94013 ; perimeter ;WIDTH:0.491883 G1 X103.773 Y114.011 E6.94272 ; perimeter ;WIDTH:0.445941 G1 X103.622 Y113.906 E6.94504 ; perimeter ;WIDTH:0.399999 G1 X103.275 Y113.405 E6.95186 ; perimeter G1 X103.025 Y112.798 E6.95921 ; perimeter G1 X102.872 Y112.081 E6.96742 ; perimeter G1 X102.82 Y111.252 E6.97672 ; perimeter G1 X102.872 Y110.381 E6.98649 ; perimeter G1 X103.025 Y109.633 E6.99504 ; perimeter G1 X103.26 Y109.049 E7.00209 ; perimeter G1 X103.377 Y108.862 E7.00456 ; perimeter G1 X103.698 Y108.435 E7.01054 ; perimeter ;WIDTH:0.43595 G1 X103.84 Y108.337 E7.01267 ; perimeter ;WIDTH:0.471901 G1 X103.981 Y108.238 E7.01499 ; perimeter ;WIDTH:0.507852 G1 X104.122 Y108.139 E7.0175 ; perimeter ;WIDTH:0.527141 G1 X104.59 Y107.902 E7.02546 ; perimeter G1 X104.861 Y107.809 E7.02981 ; perimeter ;WIDTH:0.501176 G1 X105.417 Y107.684 E7.038 ; perimeter ;WIDTH:0.480471 G1 X106.009 Y107.646 E7.04614 ; perimeter ;WIDTH:0.501717 G1 X106.923 Y107.752 E7.05937 ; perimeter G1 X107.265 Y107.869 E7.06457 ; perimeter ;WIDTH:0.535372 G1 X107.758 Y108.095 E7.07294 ; perimeter ;WIDTH:0.559025 G1 X108.253 Y108.529 E7.08359 ; perimeter ;WIDTH:0.559465 G1 X108.52 Y108.965 E7.09187 ; perimeter G1 X108.007 Y109.111 E7.10051 ; perimeter G1 X107.832 Y108.821 E7.106 ; perimeter ;WIDTH:0.547079 G1 X107.434 Y108.466 E7.11443 ; perimeter ;WIDTH:0.535372 G1 X107.03 Y108.259 E7.12144 ; perimeter ;WIDTH:0.49189 G1 X106.499 Y108.127 E7.12914 ; perimeter ;WIDTH:0.47686 G1 X105.968 Y108.078 E7.13639 ; perimeter ;WIDTH:0.480471 G1 X105.454 Y108.12 E7.14346 ; perimeter ;WIDTH:0.501176 G1 X104.989 Y108.249 E7.15039 ; perimeter ;WIDTH:0.539254 G1 X104.549 Y108.488 E7.15818 ; perimeter G1 X104.451 Y108.624 E7.16079 ; perimeter ;WIDTH:0.492836 G1 X104.352 Y108.76 E7.16316 ; perimeter ;WIDTH:0.446418 G1 X104.254 Y108.895 E7.16527 ; perimeter ;WIDTH:0.399999 G1 X104 Y109.332 E7.17093 ; perimeter G1 X103.829 Y109.829 E7.17681 ; perimeter G1 X103.735 Y110.34 E7.18263 ; perimeter G1 X103.701 Y110.959 E7.18957 ; perimeter ;WIDTH:0.438366 G1 X103.73 Y111.027 E7.19049 ; perimeter G1 X104.096 Y111.188 F9000 ; move inwards before travel G1 E.69049 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.096 Y111.281 F9000 ; move to first perimeter point G1 X108.597 Y111.526 ; move to first perimeter point G1 X107.76 Y113.998 ; move to first perimeter point G1 X107.672 Y114.067 ; move to first perimeter point G1 X111.301 Y117.064 ; move to first perimeter point G1 X111.301 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506442 G1 F2250 G1 X111.301 Y108.146 E6.62851 ; perimeter G1 X111.711 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X111.711 Y108.146 E6.6331 ; perimeter G1 X111.711 Y117.4 E6.7367 ; perimeter G1 X110.89 Y117.4 E6.74589 ; perimeter G1 X110.89 Y107.736 E6.85408 ; perimeter G1 X111.651 Y107.736 E6.8626 ; perimeter G1 X111.71 Y108.132 F9000 ; move inwards before travel G1 E.3626 F1500 ; retract G92 E0 ; reset extrusion distance G1 X111.42 Y108.168 F9000 ; move to first perimeter point G1 X114.386 Y117.064 ; move to first perimeter point G1 X114.386 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.50644 G1 F2250 G1 X114.386 Y108.146 E6.6285 ; perimeter G1 X114.797 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X114.797 Y108.146 E6.63309 ; perimeter G1 X114.797 Y117.4 E6.73669 ; perimeter G1 X113.976 Y117.4 E6.74588 ; perimeter G1 X113.976 Y107.736 E6.85407 ; perimeter G1 X114.737 Y107.736 E6.86259 ; perimeter G1 X114.796 Y108.132 F9000 ; move inwards before travel G1 E.36259 F1500 ; retract G92 E0 ; reset extrusion distance G1 X114.506 Y108.168 F9000 ; move to first perimeter point G1 X117.843 Y108.468 ; move to first perimeter point G1 X118.292 Y108.418 ; move to first perimeter point G1 X118.359 Y108.525 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.534751 G1 F2250 G1 X118.379 Y108.493 E6.50058 ; perimeter G1 X118.786 Y108.251 E6.50788 ; perimeter ;WIDTH:0.496195 G1 X119.247 Y108.112 E6.51472 ; perimeter ;WIDTH:0.474056 G1 X119.751 Y108.067 E6.52156 ; perimeter ;WIDTH:0.473836 G1 X120.276 Y108.111 E6.52868 ; perimeter ;WIDTH:0.49236 G1 X120.76 Y108.244 E6.53575 ; perimeter ;WIDTH:0.529434 G1 X121.2 Y108.489 E6.54343 ; perimeter G1 X121.289 Y108.617 E6.54581 ; perimeter ;WIDTH:0.48885 G1 X121.378 Y108.746 E6.548 ; perimeter ;WIDTH:0.448266 G1 X121.468 Y108.874 E6.54999 ; perimeter ;WIDTH:0.407681 G1 X121.699 Y109.32 E6.55573 ; perimeter ;WIDTH:0.399999 G1 X121.852 Y109.831 E6.5617 ; perimeter G1 X121.949 Y110.456 E6.56878 ; perimeter G1 X121.985 Y111.204 E6.57716 ; perimeter G1 X121.956 Y111.928 E6.58527 ; perimeter G1 X121.87 Y112.552 E6.59232 ; perimeter G1 X121.723 Y113.079 E6.59844 ; perimeter G1 X121.486 Y113.549 E6.60433 ; perimeter ;WIDTH:0.445292 G1 X121.396 Y113.681 E6.60635 ; perimeter ;WIDTH:0.490585 G1 X121.306 Y113.813 E6.60859 ; perimeter ;WIDTH:0.535877 G1 X121.216 Y113.945 E6.61106 ; perimeter G1 X120.805 Y114.171 E6.61831 ; perimeter ;WIDTH:0.495606 G1 X120.335 Y114.3 E6.62523 ; perimeter ;WIDTH:0.473786 G1 X119.834 Y114.342 E6.63202 ; perimeter ;WIDTH:0.470433 G1 X119.298 Y114.287 E6.63924 ; perimeter ;WIDTH:0.497376 G1 X118.766 Y114.144 E6.64709 ; perimeter ;WIDTH:0.516089 G1 X118.355 Y113.887 E6.65428 ; perimeter G1 X118.268 Y113.758 E6.65659 ; perimeter ;WIDTH:0.477393 G1 X118.18 Y113.629 E6.65872 ; perimeter ;WIDTH:0.438696 G1 X118.093 Y113.5 E6.66065 ; perimeter ;WIDTH:0.399999 G1 X117.869 Y113.064 E6.66614 ; perimeter G1 X117.718 Y112.562 E6.67201 ; perimeter G1 X117.623 Y111.937 E6.67909 ; perimeter G1 X117.591 Y111.219 E6.68714 ; perimeter G1 X117.62 Y110.521 E6.69496 ; perimeter G1 X117.711 Y109.91 E6.70188 ; perimeter G1 X117.864 Y109.383 E6.70802 ; perimeter G1 X118.088 Y108.932 E6.71366 ; perimeter G1 X118.158 Y108.845 E6.71491 ; perimeter ;WIDTH:0.444917 G1 X118.231 Y108.727 E6.71666 ; perimeter ;WIDTH:0.489834 G1 X118.305 Y108.61 E6.7186 ; perimeter ;WIDTH:0.534751 G1 X118.327 Y108.575 E6.71924 ; perimeter G1 X118.649 Y108.338 F9000 ; move inwards before travel G1 X118.447 Y108.006 ; move to first perimeter point G1 X121.023 Y107.955 ; move to first perimeter point G1 X121.746 Y108.472 ; move to first perimeter point G1 X121.84 Y108.567 ; move to first perimeter point G1 X121.745 Y108.662 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.432576 G1 F2250 G1 X121.897 Y108.901 E6.7227 ; perimeter ;WIDTH:0.474704 G1 X122.05 Y109.14 E6.72654 ; perimeter ;WIDTH:0.502218 G1 X122.153 Y109.426 E6.73092 ; perimeter ;WIDTH:0.529732 G1 X122.257 Y109.712 E6.73556 ; perimeter ;WIDTH:0.558436 G1 X122.381 Y110.393 E6.74675 ; perimeter ;WIDTH:0.565436 G1 X122.424 Y111.185 E6.75974 ; perimeter G1 X122.391 Y111.945 E6.7722 ; perimeter ;WIDTH:0.555306 G1 X122.289 Y112.611 E6.78302 ; perimeter ;WIDTH:0.532508 G1 X122.113 Y113.189 E6.79229 ; perimeter ;WIDTH:0.49562 G1 X121.981 Y113.434 E6.79624 ; perimeter ;WIDTH:0.467627 G1 X121.849 Y113.679 E6.79995 ; perimeter ;WIDTH:0.439634 G1 X121.705 Y113.842 E6.80266 ; perimeter G1 X121.802 Y113.936 F9000 ; move to first perimeter point G1 X119.804 Y114.69 ; move to first perimeter point G1 X117.686 Y113.795 ; move to first perimeter point G1 X117.654 Y113.736 ; move to first perimeter point G1 X117.769 Y113.674 ; move to first perimeter point ;WIDTH:0.428146 G1 F2250 G1 X117.513 Y113.171 E6.80948 ; perimeter ;WIDTH:0.47733 G1 X117.415 Y112.928 E6.81305 ; perimeter ;WIDTH:0.526514 G1 X117.316 Y112.686 E6.81701 ; perimeter G1 X117.219 Y111.997 E6.82756 ; perimeter ;WIDTH:0.530951 G1 X117.187 Y111.618 E6.83338 ; perimeter ;WIDTH:0.559864 G1 X117.154 Y111.238 E6.83956 ; perimeter G1 X117.186 Y110.503 E6.85148 ; perimeter ;WIDTH:0.554708 G1 X117.294 Y109.847 E6.86215 ; perimeter ;WIDTH:0.52903 G1 X117.48 Y109.269 E6.8714 ; perimeter ;WIDTH:0.486728 G1 X117.617 Y109.021 E6.87534 ; perimeter ;WIDTH:0.456461 G1 X117.754 Y108.773 E6.87901 ; perimeter ;WIDTH:0.426194 G1 X117.888 Y108.617 E6.88148 ; perimeter G1 X117.486 Y113.923 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X116.909 Y112.813 E6.89548 ; perimeter G1 X116.712 Y111.159 E6.91413 ; perimeter G1 X116.765 Y110.336 E6.92336 ; perimeter G1 X116.92 Y109.6 E6.93178 ; perimeter G1 X117.19 Y108.956 E6.9396 ; perimeter G1 X117.515 Y108.48 E6.94605 ; perimeter ;WIDTH:0.441054 G1 X117.668 Y108.37 E6.9484 ; perimeter ;WIDTH:0.482108 G1 X117.821 Y108.259 E6.951 ; perimeter ;WIDTH:0.523162 G1 X117.973 Y108.149 E6.95382 ; perimeter G1 X118.421 Y107.9 E6.96154 ; perimeter ;WIDTH:0.518742 G1 X118.652 Y107.818 E6.9652 ; perimeter ;WIDTH:0.496195 G1 X119.209 Y107.683 E6.97334 ; perimeter ;WIDTH:0.474056 G1 X119.797 Y107.64 E6.98131 ; perimeter ;WIDTH:0.484929 G1 X120.495 Y107.705 E6.99102 ; perimeter ;WIDTH:0.502287 G1 X120.997 Y107.847 E6.99853 ; perimeter ;WIDTH:0.529434 G1 X121.625 Y108.181 E7.00938 ; perimeter ;WIDTH:0.48885 G1 X121.79 Y108.282 E7.01208 ; perimeter ;WIDTH:0.448266 G1 X121.954 Y108.383 E7.01453 ; perimeter ;WIDTH:0.407681 G1 X122.112 Y108.54 E7.01708 ; perimeter ;WIDTH:0.399999 G1 X122.461 Y109.091 E7.02438 ; perimeter G1 X122.692 Y109.735 E7.03204 ; perimeter G1 X122.822 Y110.459 E7.04027 ; perimeter G1 X122.865 Y111.237 E7.04899 ; perimeter G1 X122.812 Y112.125 E7.05895 ; perimeter G1 X122.662 Y112.883 E7.0676 ; perimeter G1 X122.41 Y113.513 E7.0752 ; perimeter G1 X122.084 Y113.984 E7.08161 ; perimeter ;WIDTH:0.437479 G1 X121.937 Y114.087 E7.08383 ; perimeter ;WIDTH:0.474958 G1 X121.789 Y114.19 E7.08627 ; perimeter ;WIDTH:0.512437 G1 X121.642 Y114.292 E7.0889 ; perimeter ;WIDTH:0.522117 G1 X121.188 Y114.52 E7.09653 ; perimeter G1 X120.929 Y114.606 E7.10063 ; perimeter ;WIDTH:0.495606 G1 X120.37 Y114.729 E7.10875 ; perimeter ;WIDTH:0.473786 G1 X119.746 Y114.763 E7.11719 ; perimeter ;WIDTH:0.468761 G1 X119.161 Y114.675 E7.12509 ; perimeter ;WIDTH:0.484182 G1 X118.81 Y114.601 E7.13005 ; perimeter ;WIDTH:0.517387 G1 X118.459 Y114.526 E7.13539 ; perimeter G1 X118.044 Y114.24 E7.14289 ; perimeter ;WIDTH:0.516089 G1 X117.858 Y114.134 E7.14607 ; perimeter ;WIDTH:0.477393 G1 X117.672 Y114.029 E7.14898 ; perimeter ;WIDTH:0.438696 G1 X117.538 Y113.953 E7.15089 ; perimeter G1 X117.328 Y113.612 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:4 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 19; ;LAYER:19 G1 E.65089 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z4 F9000 ; simple layer change G1 X117.531 Y113.504 ; travel to first layer point G1 X114.52 Y113.431 ; travel to first layer point G1 X114.252 Y113.414 ; travel to first layer point G1 X111.434 Y113.232 ; travel to first layer point G1 X111.167 Y113.215 ; travel to first layer point G1 X108.355 Y113.034 ; travel to first layer point G1 X106.999 Y114.493 ; travel to first layer point G1 X104.67 Y114.446 ; travel to first layer point G1 X103.285 Y112.707 ; travel to first layer point G1 X100.363 Y112.518 ; travel to first layer point G1 X93.675 Y112.551 ; travel to first layer point G1 X93.657 Y112.1 ; travel to first layer point G1 X93.792 Y112.095 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.59053 G1 F2250 G1 X93.787 Y111.986 E6.50187 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y108.184 E6.56601 ; perimeter G1 X93.787 Y116.443 F9000 ; move to first perimeter point G1 F2250 G1 X93.787 Y113.028 E6.62362 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.399111 G1 F2250 G1 X94.175 Y112.549 E6.62581 ; perimeter ;WIDTH:0.420375 G1 X94.028 Y112.641 E6.62786 ; perimeter ;WIDTH:0.460542 G1 X93.968 Y112.737 E6.62934 ; perimeter ;WIDTH:0.500709 G1 X93.908 Y112.834 E6.63098 ; perimeter ;WIDTH:0.540876 G1 X93.847 Y112.931 E6.63277 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y113.028 E6.63469 ; perimeter G1 X93.767 Y112.898 E6.63691 ; perimeter ;WIDTH:0.540876 G1 X93.747 Y112.767 E6.63898 ; perimeter ;WIDTH:0.500709 G1 X93.727 Y112.637 E6.64087 ; perimeter ;WIDTH:0.460542 G1 X93.707 Y112.507 E6.64259 ; perimeter ;WIDTH:0.462914 G1 X93.728 Y112.404 E6.64397 ; perimeter ;WIDTH:0.505453 G1 X93.749 Y112.301 E6.64549 ; perimeter ;WIDTH:0.547992 G1 X93.77 Y112.198 E6.64715 ; perimeter ;WIDTH:0.59053 G1 X93.792 Y112.095 E6.64896 ; perimeter G1 X93.851 Y112.164 E6.65052 ; perimeter ;WIDTH:0.547992 G1 X93.91 Y112.234 E6.65197 ; perimeter ;WIDTH:0.505453 G1 X93.969 Y112.303 E6.65329 ; perimeter ;WIDTH:0.462914 G1 X94.028 Y112.373 E6.6545 ; perimeter ;WIDTH:0.420375 G1 X94.175 Y112.465 E6.65655 ; perimeter ;WIDTH:0.399111 G1 X94.309 Y112.494 E6.65808 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.374822 G1 F2250 G1 X99.623 Y112.507 E6.71277 ; perimeter G1 X100.249 Y116.443 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y113.028 E6.77038 ; perimeter G1 X100.245 Y112.095 F9000 ; move to first perimeter point ;WIDTH:0.590528 G1 F2250 G1 X100.266 Y112.198 E6.77218 ; perimeter ;WIDTH:0.54799 G1 X100.287 Y112.301 E6.77384 ; perimeter ;WIDTH:0.505452 G1 X100.308 Y112.404 E6.77536 ; perimeter ;WIDTH:0.462914 G1 X100.33 Y112.507 E6.77675 ; perimeter ;WIDTH:0.460542 G1 X100.31 Y112.637 E6.77847 ; perimeter ;WIDTH:0.500708 G1 X100.29 Y112.767 E6.78036 ; perimeter ;WIDTH:0.540874 G1 X100.269 Y112.898 E6.78243 ; perimeter ;WIDTH:0.58104 G1 X100.249 Y113.028 E6.78465 ; perimeter G1 X100.189 Y112.931 E6.78657 ; perimeter ;WIDTH:0.540874 G1 X100.129 Y112.834 E6.78835 ; perimeter ;WIDTH:0.500708 G1 X100.068 Y112.737 E6.78999 ; perimeter ;WIDTH:0.460542 G1 X100.008 Y112.641 E6.79147 ; perimeter ;WIDTH:0.420375 G1 X99.862 Y112.547 E6.79352 ; perimeter ;WIDTH:0.402898 G1 X99.623 Y112.507 E6.79625 ; perimeter G1 X99.862 Y112.467 E6.79898 ; perimeter ;WIDTH:0.420375 G1 X100.008 Y112.373 E6.80103 ; perimeter ;WIDTH:0.462914 G1 X100.067 Y112.303 E6.80224 ; perimeter ;WIDTH:0.505452 G1 X100.126 Y112.234 E6.80356 ; perimeter ;WIDTH:0.54799 G1 X100.185 Y112.164 E6.80501 ; perimeter ;WIDTH:0.590528 G1 X100.206 Y112.14 E6.80556 ; perimeter G1 X100.249 Y108.184 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y111.986 E6.8697 ; perimeter ;WIDTH:0.590528 G1 X100.245 Y112.095 E6.87157 ; perimeter G1 X99.752 Y112.907 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F1500 G1 X99.749 Y112.901 E6.87165 ; perimeter G1 X99.623 Y112.849 E6.87318 ; perimeter G1 X94.413 Y112.849 E6.9315 ; perimeter G1 X94.334 Y112.868 E6.93241 ; perimeter G1 X94.235 Y113.028 E6.93452 ; perimeter G1 X94.235 Y116.891 E6.97777 ; perimeter G1 X93.339 Y116.891 E6.9878 ; perimeter G1 X93.339 Y107.736 E7.09029 ; perimeter G1 X94.235 Y107.736 E7.10032 ; perimeter G1 X94.235 Y111.986 E7.1479 ; perimeter G1 X94.287 Y112.112 E7.14943 ; perimeter G1 X94.413 Y112.164 E7.15096 ; perimeter G1 X99.623 Y112.164 E7.20928 ; perimeter G1 X99.749 Y112.112 E7.21081 ; perimeter G1 X99.802 Y111.986 E7.21234 ; perimeter G1 X99.802 Y107.736 E7.25992 ; perimeter G1 X100.697 Y107.736 E7.26994 ; perimeter G1 X100.697 Y108.184 E7.27496 ; perimeter G1 X100.697 Y116.891 E7.37243 ; perimeter G1 X99.802 Y116.891 E7.38245 ; perimeter G1 X99.802 Y113.028 E7.4257 ; perimeter G1 X99.775 Y112.963 E7.42649 ; perimeter G1 X99.389 Y112.856 F9000 ; move inwards before travel G1 E.92649 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.389 Y112.641 F9000 ; move to first perimeter point G1 X100.364 Y112.61 ; move to first perimeter point G1 X103.159 Y111.905 ; move to first perimeter point G1 X103.764 Y111.549 ; move to first perimeter point G1 X103.764 Y111.752 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.438366 G1 F2250 G1 X103.787 Y111.694 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.839 Y111.666 E6.50155 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.638 E6.50239 ; perimeter G1 X107.9 Y111.638 E6.55849 ; perimeter G1 X107.979 Y111.709 E6.55998 ; perimeter ;WIDTH:0.44468 G1 X108.059 Y111.779 E6.56132 ; perimeter ;WIDTH:0.399999 G1 X108.077 Y111.886 E6.56253 ; perimeter G1 X107.998 Y112.452 E6.56893 ; perimeter G1 X107.87 Y112.939 E6.57457 ; perimeter G1 X107.612 Y113.463 E6.58111 ; perimeter ;WIDTH:0.438032 G1 X107.56 Y113.565 E6.58253 ; perimeter ;WIDTH:0.476065 G1 X107.507 Y113.666 E6.58408 ; perimeter ;WIDTH:0.514097 G1 X107.455 Y113.768 E6.58577 ; perimeter G1 X107.016 Y114.094 E6.59385 ; perimeter ;WIDTH:0.510783 G1 X106.752 Y114.198 E6.59801 ; perimeter ;WIDTH:0.46551 G1 X106.332 Y114.297 E6.60373 ; perimeter ;WIDTH:0.470099 G1 X105.863 Y114.341 E6.61004 ; perimeter ;WIDTH:0.486022 G1 X105.303 Y114.277 E6.61787 ; perimeter ;WIDTH:0.516687 G1 X104.807 Y114.098 E6.6257 ; perimeter ;WIDTH:0.547115 G1 X104.45 Y113.863 E6.63246 ; perimeter G1 X104.391 Y113.766 E6.63425 ; perimeter ;WIDTH:0.498077 G1 X104.331 Y113.67 E6.63587 ; perimeter ;WIDTH:0.449038 G1 X104.272 Y113.574 E6.6373 ; perimeter ;WIDTH:0.399999 G1 X104.063 Y113.273 E6.6414 ; perimeter G1 X103.882 Y112.86 E6.64645 ; perimeter G1 X103.767 Y112.396 E6.6518 ; perimeter G1 X103.714 Y111.88 E6.65761 ; perimeter ;WIDTH:0.438366 G1 X103.742 Y111.808 E6.65857 ; perimeter G1 X104.105 Y111.641 F9000 ; move inwards before travel G1 X104.105 Y111.549 ; move to first perimeter point G1 X103.545 Y111.549 ; move to first perimeter point G1 X103.449 Y112.113 ; move to first perimeter point G1 X103.501 Y112.456 ; move to first perimeter point G1 X103.55 Y112.649 ; move to first perimeter point G1 X103.649 Y112.957 ; move to first perimeter point G1 X103.726 Y113.132 ; move to first perimeter point G1 X103.873 Y113.401 ; move to first perimeter point G1 X103.982 Y113.554 ; move to first perimeter point G1 X104.094 Y113.684 ; move to first perimeter point G1 X103.99 Y113.773 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.415434 G1 F2250 G1 X103.73 Y113.422 E6.66367 ; perimeter ;WIDTH:0.458638 G1 X103.507 Y112.955 E6.67041 ; perimeter ;WIDTH:0.497754 G1 X103.363 Y112.437 E6.67808 ; perimeter ;WIDTH:0.538968 G1 X103.29 Y111.923 E6.68615 ; perimeter ;WIDTH:0.584825 G1 X103.305 Y111.798 E6.68829 ; perimeter ;WIDTH:0.630681 G1 X103.32 Y111.673 E6.69061 ; perimeter ;WIDTH:0.676538 G1 X103.335 Y111.548 E6.69311 ; perimeter ;WIDTH:0.722394 G1 X103.35 Y111.422 E6.69581 ; perimeter G1 X103.322 Y111.337 E6.69772 ; perimeter ;WIDTH:0.67601 G1 X103.293 Y111.251 E6.69952 ; perimeter ;WIDTH:0.629626 G1 X103.282 Y111.093 E6.70243 ; perimeter ;WIDTH:0.588436 G1 X103.271 Y110.935 E6.70514 ; perimeter ;WIDTH:0.547246 G1 X103.327 Y110.24 E6.71616 ; perimeter ;WIDTH:0.520872 G1 X103.437 Y109.703 E6.72437 ; perimeter ;WIDTH:0.502432 G1 X103.638 Y109.175 E6.73251 ; perimeter ;WIDTH:0.471914 G1 X103.905 Y108.751 E6.73925 ; perimeter ;WIDTH:0.43226 G1 X104.067 Y108.577 E6.74215 ; perimeter G1 X103.974 Y108.484 F9000 ; move to first perimeter point G1 X103.136 Y110.953 ; move to first perimeter point G1 X103.817 Y113.788 ; move to first perimeter point G1 X105.897 Y114.69 ; move to first perimeter point G1 X107.983 Y113.787 ; move to first perimeter point G1 X108.602 Y111.681 ; move to first perimeter point G1 X108.596 Y111.573 ; move to first perimeter point G1 X108.443 Y111.58 ; move to first perimeter point ;WIDTH:0.552284 G1 F2250 G1 X108.447 Y111.7 E6.74407 ; perimeter ;WIDTH:0.517229 G1 X108.451 Y111.819 E6.74584 ; perimeter ;WIDTH:0.482174 G1 X108.454 Y111.938 E6.74748 ; perimeter ;WIDTH:0.458506 G1 X108.381 Y112.505 E6.75493 ; perimeter G1 X108.296 Y112.768 E6.75853 ; perimeter ;WIDTH:0.424892 G1 X108.211 Y113.03 E6.76183 ; perimeter ;WIDTH:0.391278 G1 X107.996 Y113.491 E6.76739 ; perimeter ;WIDTH:0.385752 G1 X107.896 Y113.668 E6.76958 ; perimeter G1 X108.013 Y113.736 F9000 ; move to first perimeter point G1 X108.587 Y111.403 ; move to first perimeter point G1 X104.17 Y111.281 ; move to first perimeter point G1 X103.754 Y111.281 ; move to first perimeter point G1 X103.754 Y111.082 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.438366 G1 F2250 G1 X103.779 Y111.139 E6.77035 ; perimeter ;WIDTH:0.463863 G1 X103.835 Y111.165 E6.77116 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.192 E6.77204 ; perimeter G1 X107.9 Y111.192 E6.82814 ; perimeter G1 X108.416 Y111.169 E6.83537 ; perimeter ;WIDTH:0.44468 G1 X108.931 Y111.147 E6.84186 ; perimeter ;WIDTH:0.399999 G1 X108.74 Y112.758 E6.86002 ; perimeter G1 X108.171 Y113.901 E6.87431 ; perimeter ;WIDTH:0.438032 G1 X108.03 Y113.98 E6.87631 ; perimeter ;WIDTH:0.476065 G1 X107.888 Y114.059 E6.87852 ; perimeter ;WIDTH:0.514097 G1 X107.747 Y114.138 E6.88091 ; perimeter G1 X107.26 Y114.492 E6.8898 ; perimeter ;WIDTH:0.510783 G1 X106.878 Y114.604 E6.89564 ; perimeter ;WIDTH:0.467891 G1 X106.382 Y114.699 E6.90237 ; perimeter ;WIDTH:0.470099 G1 X105.827 Y114.767 E6.90986 ; perimeter ;WIDTH:0.486022 G1 X105.18 Y114.702 E6.91889 ; perimeter ;WIDTH:0.516687 G1 X104.578 Y114.513 E6.92826 ; perimeter ;WIDTH:0.537816 G1 X103.924 Y114.116 E6.94013 ; perimeter ;WIDTH:0.491877 G1 X103.773 Y114.011 E6.94272 ; perimeter ;WIDTH:0.445938 G1 X103.622 Y113.906 E6.94504 ; perimeter ;WIDTH:0.399999 G1 X103.275 Y113.405 E6.95186 ; perimeter G1 X103.025 Y112.798 E6.95921 ; perimeter G1 X102.872 Y112.081 E6.96742 ; perimeter G1 X102.82 Y111.252 E6.97672 ; perimeter G1 X102.872 Y110.381 E6.98649 ; perimeter G1 X103.025 Y109.633 E6.99504 ; perimeter G1 X103.276 Y109.009 E7.00257 ; perimeter G1 X103.597 Y108.54 E7.00893 ; perimeter G1 X103.833 Y108.315 E7.01258 ; perimeter ;WIDTH:0.445318 G1 X103.999 Y108.225 E7.01496 ; perimeter ;WIDTH:0.490637 G1 X104.164 Y108.135 E7.0176 ; perimeter ;WIDTH:0.535955 G1 X104.801 Y107.827 E7.02854 ; perimeter ;WIDTH:0.504491 G1 X105.346 Y107.691 E7.03667 ; perimeter ;WIDTH:0.483772 G1 X105.893 Y107.645 E7.04426 ; perimeter ;WIDTH:0.477737 G1 X106.394 Y107.681 E7.05111 ; perimeter ;WIDTH:0.503713 G1 X106.922 Y107.753 E7.05881 ; perimeter G1 X107.265 Y107.869 E7.06404 ; perimeter ;WIDTH:0.535372 G1 X107.758 Y108.095 E7.07241 ; perimeter ;WIDTH:0.559025 G1 X108.253 Y108.529 E7.08306 ; perimeter ;WIDTH:0.559537 G1 X108.52 Y108.965 E7.09134 ; perimeter G1 X108.006 Y109.112 E7.1 ; perimeter G1 X107.832 Y108.821 E7.10549 ; perimeter ;WIDTH:0.547079 G1 X107.434 Y108.466 E7.11392 ; perimeter ;WIDTH:0.535372 G1 X107.026 Y108.257 E7.121 ; perimeter ;WIDTH:0.492394 G1 X106.381 Y108.107 E7.13033 ; perimeter ;WIDTH:0.477098 G1 X105.961 Y108.078 E7.13606 ; perimeter ;WIDTH:0.480471 G1 X105.454 Y108.12 E7.14304 ; perimeter ;WIDTH:0.501176 G1 X104.989 Y108.249 E7.14997 ; perimeter ;WIDTH:0.539254 G1 X104.549 Y108.488 E7.15776 ; perimeter G1 X104.451 Y108.624 E7.16037 ; perimeter ;WIDTH:0.492836 G1 X104.352 Y108.76 E7.16274 ; perimeter ;WIDTH:0.446418 G1 X104.254 Y108.895 E7.16485 ; perimeter ;WIDTH:0.399999 G1 X104 Y109.332 E7.17051 ; perimeter G1 X103.829 Y109.829 E7.17639 ; perimeter G1 X103.735 Y110.34 E7.18221 ; perimeter G1 X103.701 Y110.959 E7.18915 ; perimeter ;WIDTH:0.438366 G1 X103.73 Y111.027 E7.19007 ; perimeter G1 X104.096 Y111.188 F9000 ; move inwards before travel G1 E.69007 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.096 Y111.281 F9000 ; move to first perimeter point G1 X108.588 Y111.409 ; move to first perimeter point G1 X107.888 Y113.882 ; move to first perimeter point G1 X107.672 Y114.068 ; move to first perimeter point G1 X111.301 Y117.064 ; move to first perimeter point G1 X111.301 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506442 G1 F2250 G1 X111.301 Y108.146 E6.62851 ; perimeter G1 X111.711 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X111.711 Y108.146 E6.6331 ; perimeter G1 X111.711 Y117.4 E6.7367 ; perimeter G1 X110.89 Y117.4 E6.74589 ; perimeter G1 X110.89 Y107.736 E6.85408 ; perimeter G1 X111.651 Y107.736 E6.8626 ; perimeter G1 X111.71 Y108.132 F9000 ; move inwards before travel G1 E.3626 F1500 ; retract G92 E0 ; reset extrusion distance G1 X111.42 Y108.168 F9000 ; move to first perimeter point G1 X114.386 Y117.064 ; move to first perimeter point G1 X114.386 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.50644 G1 F2250 G1 X114.386 Y108.146 E6.6285 ; perimeter G1 X114.797 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X114.797 Y108.146 E6.63309 ; perimeter G1 X114.797 Y117.4 E6.73669 ; perimeter G1 X113.976 Y117.4 E6.74588 ; perimeter G1 X113.976 Y107.736 E6.85407 ; perimeter G1 X114.737 Y107.736 E6.86259 ; perimeter G1 X114.796 Y108.132 F9000 ; move inwards before travel G1 E.36259 F1500 ; retract G92 E0 ; reset extrusion distance G1 X114.506 Y108.168 F9000 ; move to first perimeter point G1 X117.843 Y108.468 ; move to first perimeter point G1 X118.292 Y108.418 ; move to first perimeter point G1 X118.359 Y108.525 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.534749 G1 F2250 G1 X118.379 Y108.493 E6.50058 ; perimeter G1 X118.786 Y108.251 E6.50788 ; perimeter ;WIDTH:0.496196 G1 X119.247 Y108.112 E6.51472 ; perimeter ;WIDTH:0.474055 G1 X119.751 Y108.067 E6.52156 ; perimeter ;WIDTH:0.473836 G1 X120.276 Y108.111 E6.52868 ; perimeter ;WIDTH:0.492361 G1 X120.76 Y108.244 E6.53575 ; perimeter ;WIDTH:0.529434 G1 X121.2 Y108.489 E6.54343 ; perimeter G1 X121.289 Y108.617 E6.54581 ; perimeter ;WIDTH:0.488852 G1 X121.378 Y108.746 E6.548 ; perimeter ;WIDTH:0.44827 G1 X121.468 Y108.874 E6.54999 ; perimeter ;WIDTH:0.407687 G1 X121.699 Y109.32 E6.55573 ; perimeter ;WIDTH:0.399999 G1 X121.852 Y109.831 E6.5617 ; perimeter G1 X121.949 Y110.456 E6.56878 ; perimeter G1 X121.985 Y111.204 E6.57716 ; perimeter G1 X121.956 Y111.928 E6.58527 ; perimeter G1 X121.87 Y112.552 E6.59232 ; perimeter G1 X121.723 Y113.079 E6.59844 ; perimeter G1 X121.486 Y113.549 E6.60433 ; perimeter ;WIDTH:0.445292 G1 X121.396 Y113.681 E6.60635 ; perimeter ;WIDTH:0.490585 G1 X121.306 Y113.813 E6.60859 ; perimeter ;WIDTH:0.535877 G1 X121.216 Y113.945 E6.61106 ; perimeter G1 X120.805 Y114.171 E6.61831 ; perimeter ;WIDTH:0.495606 G1 X120.335 Y114.3 E6.62523 ; perimeter ;WIDTH:0.473786 G1 X119.834 Y114.342 E6.63202 ; perimeter ;WIDTH:0.470433 G1 X119.298 Y114.287 E6.63924 ; perimeter ;WIDTH:0.497376 G1 X118.766 Y114.144 E6.64709 ; perimeter ;WIDTH:0.516089 G1 X118.355 Y113.887 E6.65428 ; perimeter G1 X118.268 Y113.758 E6.65659 ; perimeter ;WIDTH:0.477393 G1 X118.18 Y113.629 E6.65872 ; perimeter ;WIDTH:0.438696 G1 X118.093 Y113.5 E6.66065 ; perimeter ;WIDTH:0.399999 G1 X117.869 Y113.064 E6.66614 ; perimeter G1 X117.718 Y112.562 E6.67201 ; perimeter G1 X117.623 Y111.937 E6.67909 ; perimeter G1 X117.591 Y111.219 E6.68714 ; perimeter G1 X117.62 Y110.521 E6.69496 ; perimeter G1 X117.711 Y109.91 E6.70188 ; perimeter G1 X117.864 Y109.383 E6.70802 ; perimeter G1 X118.088 Y108.932 E6.71366 ; perimeter G1 X118.158 Y108.845 E6.71491 ; perimeter ;WIDTH:0.444916 G1 X118.231 Y108.727 E6.71666 ; perimeter ;WIDTH:0.489833 G1 X118.305 Y108.61 E6.7186 ; perimeter ;WIDTH:0.534749 G1 X118.327 Y108.575 E6.71924 ; perimeter G1 X118.649 Y108.338 F9000 ; move inwards before travel G1 X118.447 Y108.006 ; move to first perimeter point G1 X121.021 Y107.954 ; move to first perimeter point G1 X121.775 Y108.501 ; move to first perimeter point G1 X121.841 Y108.567 ; move to first perimeter point G1 X121.745 Y108.662 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.432575 G1 F2250 G1 X121.897 Y108.901 E6.7227 ; perimeter ;WIDTH:0.474704 G1 X122.05 Y109.14 E6.72654 ; perimeter ;WIDTH:0.502218 G1 X122.153 Y109.426 E6.73092 ; perimeter ;WIDTH:0.529732 G1 X122.257 Y109.712 E6.73556 ; perimeter ;WIDTH:0.558436 G1 X122.381 Y110.393 E6.74675 ; perimeter ;WIDTH:0.565436 G1 X122.424 Y111.185 E6.75974 ; perimeter G1 X122.391 Y111.945 E6.7722 ; perimeter ;WIDTH:0.555306 G1 X122.289 Y112.611 E6.78302 ; perimeter ;WIDTH:0.532508 G1 X122.113 Y113.189 E6.79229 ; perimeter ;WIDTH:0.495616 G1 X121.981 Y113.434 E6.79624 ; perimeter ;WIDTH:0.467625 G1 X121.849 Y113.679 E6.79995 ; perimeter ;WIDTH:0.439634 G1 X121.705 Y113.842 E6.80266 ; perimeter G1 X121.802 Y113.936 F9000 ; move to first perimeter point G1 X119.805 Y114.69 ; move to first perimeter point G1 X117.686 Y113.794 ; move to first perimeter point G1 X117.654 Y113.735 ; move to first perimeter point G1 X117.769 Y113.674 ; move to first perimeter point ;WIDTH:0.428144 G1 F2250 G1 X117.513 Y113.171 E6.80948 ; perimeter ;WIDTH:0.477329 G1 X117.415 Y112.928 E6.81305 ; perimeter ;WIDTH:0.526514 G1 X117.316 Y112.686 E6.81701 ; perimeter G1 X117.219 Y111.997 E6.82756 ; perimeter ;WIDTH:0.530951 G1 X117.187 Y111.618 E6.83338 ; perimeter ;WIDTH:0.559864 G1 X117.154 Y111.238 E6.83956 ; perimeter G1 X117.186 Y110.503 E6.85148 ; perimeter ;WIDTH:0.554708 G1 X117.294 Y109.847 E6.86215 ; perimeter ;WIDTH:0.52903 G1 X117.48 Y109.269 E6.8714 ; perimeter ;WIDTH:0.486726 G1 X117.617 Y109.021 E6.87534 ; perimeter ;WIDTH:0.45646 G1 X117.754 Y108.773 E6.87901 ; perimeter ;WIDTH:0.426194 G1 X117.888 Y108.617 E6.88148 ; perimeter G1 X117.486 Y113.923 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X116.909 Y112.813 E6.89548 ; perimeter G1 X116.712 Y111.159 E6.91413 ; perimeter G1 X116.765 Y110.336 E6.92336 ; perimeter G1 X116.92 Y109.6 E6.93178 ; perimeter G1 X117.19 Y108.956 E6.9396 ; perimeter G1 X117.515 Y108.48 E6.94605 ; perimeter ;WIDTH:0.441054 G1 X117.668 Y108.37 E6.9484 ; perimeter ;WIDTH:0.482108 G1 X117.821 Y108.259 E6.951 ; perimeter ;WIDTH:0.523162 G1 X117.973 Y108.149 E6.95382 ; perimeter G1 X118.421 Y107.9 E6.96154 ; perimeter ;WIDTH:0.518741 G1 X118.652 Y107.818 E6.9652 ; perimeter ;WIDTH:0.496196 G1 X119.209 Y107.683 E6.97334 ; perimeter ;WIDTH:0.474055 G1 X119.797 Y107.64 E6.98131 ; perimeter ;WIDTH:0.484931 G1 X120.495 Y107.705 E6.99102 ; perimeter ;WIDTH:0.502288 G1 X120.997 Y107.847 E6.99853 ; perimeter ;WIDTH:0.529434 G1 X121.625 Y108.181 E7.00938 ; perimeter ;WIDTH:0.488852 G1 X121.79 Y108.282 E7.01208 ; perimeter ;WIDTH:0.44827 G1 X121.954 Y108.383 E7.01453 ; perimeter ;WIDTH:0.407687 G1 X122.112 Y108.54 E7.01708 ; perimeter ;WIDTH:0.399999 G1 X122.461 Y109.091 E7.02438 ; perimeter G1 X122.692 Y109.735 E7.03204 ; perimeter G1 X122.822 Y110.459 E7.04027 ; perimeter G1 X122.865 Y111.237 E7.04899 ; perimeter G1 X122.812 Y112.125 E7.05895 ; perimeter G1 X122.662 Y112.883 E7.0676 ; perimeter G1 X122.41 Y113.513 E7.0752 ; perimeter G1 X122.084 Y113.984 E7.08161 ; perimeter ;WIDTH:0.437478 G1 X121.937 Y114.087 E7.08383 ; perimeter ;WIDTH:0.474957 G1 X121.789 Y114.19 E7.08627 ; perimeter ;WIDTH:0.512436 G1 X121.642 Y114.292 E7.0889 ; perimeter ;WIDTH:0.522117 G1 X121.188 Y114.52 E7.09653 ; perimeter G1 X120.929 Y114.606 E7.10063 ; perimeter ;WIDTH:0.495606 G1 X120.37 Y114.729 E7.10875 ; perimeter ;WIDTH:0.473786 G1 X119.746 Y114.763 E7.11719 ; perimeter ;WIDTH:0.468761 G1 X119.161 Y114.675 E7.12509 ; perimeter ;WIDTH:0.484182 G1 X118.81 Y114.601 E7.13005 ; perimeter ;WIDTH:0.517387 G1 X118.459 Y114.526 E7.13539 ; perimeter G1 X118.044 Y114.24 E7.14289 ; perimeter ;WIDTH:0.516089 G1 X117.858 Y114.134 E7.14607 ; perimeter ;WIDTH:0.477393 G1 X117.672 Y114.029 E7.14898 ; perimeter ;WIDTH:0.438696 G1 X117.538 Y113.953 E7.15089 ; perimeter G1 X117.328 Y113.612 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:4.2 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 20; ;LAYER:20 G1 E.65089 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z4.2 F9000 ; simple layer change G1 X117.53 Y113.504 ; travel to first layer point G1 X114.52 Y113.431 ; travel to first layer point G1 X114.252 Y113.414 ; travel to first layer point G1 X111.434 Y113.232 ; travel to first layer point G1 X111.167 Y113.215 ; travel to first layer point G1 X108.355 Y113.034 ; travel to first layer point G1 X106.999 Y114.493 ; travel to first layer point G1 X104.675 Y114.448 ; travel to first layer point G1 X103.285 Y112.707 ; travel to first layer point G1 X100.363 Y112.518 ; travel to first layer point G1 X93.675 Y112.551 ; travel to first layer point G1 X93.657 Y112.1 ; travel to first layer point G1 X93.792 Y112.095 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.59053 G1 F2250 G1 X93.787 Y111.986 E6.50187 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y108.184 E6.56601 ; perimeter G1 X93.787 Y116.443 F9000 ; move to first perimeter point G1 F2250 G1 X93.787 Y113.028 E6.62362 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.399111 G1 F2250 G1 X94.175 Y112.549 E6.62581 ; perimeter ;WIDTH:0.420375 G1 X94.028 Y112.641 E6.62786 ; perimeter ;WIDTH:0.460542 G1 X93.968 Y112.737 E6.62934 ; perimeter ;WIDTH:0.500709 G1 X93.908 Y112.834 E6.63098 ; perimeter ;WIDTH:0.540876 G1 X93.847 Y112.931 E6.63277 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y113.028 E6.63469 ; perimeter G1 X93.767 Y112.898 E6.63691 ; perimeter ;WIDTH:0.540876 G1 X93.747 Y112.767 E6.63898 ; perimeter ;WIDTH:0.500709 G1 X93.727 Y112.637 E6.64087 ; perimeter ;WIDTH:0.460542 G1 X93.707 Y112.507 E6.64259 ; perimeter ;WIDTH:0.462914 G1 X93.728 Y112.404 E6.64397 ; perimeter ;WIDTH:0.505453 G1 X93.749 Y112.301 E6.64549 ; perimeter ;WIDTH:0.547992 G1 X93.77 Y112.198 E6.64715 ; perimeter ;WIDTH:0.59053 G1 X93.792 Y112.095 E6.64896 ; perimeter G1 X93.851 Y112.164 E6.65052 ; perimeter ;WIDTH:0.547992 G1 X93.91 Y112.234 E6.65197 ; perimeter ;WIDTH:0.505453 G1 X93.969 Y112.303 E6.65329 ; perimeter ;WIDTH:0.462914 G1 X94.028 Y112.373 E6.6545 ; perimeter ;WIDTH:0.420375 G1 X94.175 Y112.465 E6.65655 ; perimeter ;WIDTH:0.399111 G1 X94.309 Y112.494 E6.65808 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.374822 G1 F2250 G1 X99.623 Y112.507 E6.71277 ; perimeter G1 X100.249 Y116.443 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y113.028 E6.77038 ; perimeter G1 X100.245 Y112.095 F9000 ; move to first perimeter point ;WIDTH:0.590528 G1 F2250 G1 X100.266 Y112.198 E6.77218 ; perimeter ;WIDTH:0.54799 G1 X100.287 Y112.301 E6.77384 ; perimeter ;WIDTH:0.505452 G1 X100.308 Y112.404 E6.77536 ; perimeter ;WIDTH:0.462914 G1 X100.33 Y112.507 E6.77675 ; perimeter ;WIDTH:0.460542 G1 X100.31 Y112.637 E6.77847 ; perimeter ;WIDTH:0.500708 G1 X100.29 Y112.767 E6.78036 ; perimeter ;WIDTH:0.540874 G1 X100.269 Y112.898 E6.78243 ; perimeter ;WIDTH:0.58104 G1 X100.249 Y113.028 E6.78465 ; perimeter G1 X100.189 Y112.931 E6.78657 ; perimeter ;WIDTH:0.540874 G1 X100.129 Y112.834 E6.78835 ; perimeter ;WIDTH:0.500708 G1 X100.068 Y112.737 E6.78999 ; perimeter ;WIDTH:0.460542 G1 X100.008 Y112.641 E6.79147 ; perimeter ;WIDTH:0.420375 G1 X99.862 Y112.547 E6.79352 ; perimeter ;WIDTH:0.402898 G1 X99.623 Y112.507 E6.79625 ; perimeter G1 X99.862 Y112.467 E6.79898 ; perimeter ;WIDTH:0.420375 G1 X100.008 Y112.373 E6.80103 ; perimeter ;WIDTH:0.462914 G1 X100.067 Y112.303 E6.80224 ; perimeter ;WIDTH:0.505452 G1 X100.126 Y112.234 E6.80356 ; perimeter ;WIDTH:0.54799 G1 X100.185 Y112.164 E6.80501 ; perimeter ;WIDTH:0.590528 G1 X100.206 Y112.14 E6.80556 ; perimeter G1 X100.249 Y108.184 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y111.986 E6.8697 ; perimeter ;WIDTH:0.590528 G1 X100.245 Y112.095 E6.87157 ; perimeter G1 X99.752 Y112.907 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F1500 G1 X99.749 Y112.901 E6.87165 ; perimeter G1 X99.623 Y112.849 E6.87318 ; perimeter G1 X94.413 Y112.849 E6.9315 ; perimeter G1 X94.334 Y112.868 E6.93241 ; perimeter G1 X94.235 Y113.028 E6.93452 ; perimeter G1 X94.235 Y116.891 E6.97777 ; perimeter G1 X93.339 Y116.891 E6.9878 ; perimeter G1 X93.339 Y107.736 E7.09029 ; perimeter G1 X94.235 Y107.736 E7.10032 ; perimeter G1 X94.235 Y111.986 E7.1479 ; perimeter G1 X94.287 Y112.112 E7.14943 ; perimeter G1 X94.413 Y112.164 E7.15096 ; perimeter G1 X99.623 Y112.164 E7.20928 ; perimeter G1 X99.749 Y112.112 E7.21081 ; perimeter G1 X99.802 Y111.986 E7.21234 ; perimeter G1 X99.802 Y107.736 E7.25992 ; perimeter G1 X100.697 Y107.736 E7.26994 ; perimeter G1 X100.697 Y108.184 E7.27496 ; perimeter G1 X100.697 Y116.891 E7.37243 ; perimeter G1 X99.802 Y116.891 E7.38245 ; perimeter G1 X99.802 Y113.028 E7.4257 ; perimeter G1 X99.775 Y112.963 E7.42649 ; perimeter G1 X99.389 Y112.856 F9000 ; move inwards before travel G1 E.92649 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.389 Y112.641 F9000 ; move to first perimeter point G1 X100.364 Y112.61 ; move to first perimeter point G1 X103.157 Y111.905 ; move to first perimeter point G1 X103.764 Y111.549 ; move to first perimeter point G1 X103.764 Y111.752 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.438365 G1 F2250 G1 X103.787 Y111.694 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.839 Y111.666 E6.50155 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.638 E6.50239 ; perimeter G1 X107.9 Y111.638 E6.55849 ; perimeter G1 X107.979 Y111.709 E6.55998 ; perimeter ;WIDTH:0.44468 G1 X108.059 Y111.779 E6.56132 ; perimeter ;WIDTH:0.399999 G1 X108.077 Y111.886 E6.56253 ; perimeter G1 X107.998 Y112.452 E6.56893 ; perimeter G1 X107.87 Y112.939 E6.57457 ; perimeter G1 X107.612 Y113.463 E6.58111 ; perimeter ;WIDTH:0.438032 G1 X107.56 Y113.565 E6.58253 ; perimeter ;WIDTH:0.476065 G1 X107.507 Y113.666 E6.58408 ; perimeter ;WIDTH:0.514097 G1 X107.455 Y113.768 E6.58577 ; perimeter G1 X107.016 Y114.094 E6.59385 ; perimeter ;WIDTH:0.510783 G1 X106.752 Y114.198 E6.59801 ; perimeter ;WIDTH:0.46551 G1 X106.332 Y114.297 E6.60373 ; perimeter ;WIDTH:0.470099 G1 X105.863 Y114.341 E6.61004 ; perimeter ;WIDTH:0.486022 G1 X105.303 Y114.277 E6.61787 ; perimeter ;WIDTH:0.516686 G1 X104.807 Y114.098 E6.6257 ; perimeter ;WIDTH:0.547117 G1 X104.45 Y113.863 E6.63246 ; perimeter G1 X104.391 Y113.766 E6.63425 ; perimeter ;WIDTH:0.498078 G1 X104.331 Y113.67 E6.63587 ; perimeter ;WIDTH:0.449039 G1 X104.272 Y113.574 E6.6373 ; perimeter ;WIDTH:0.399999 G1 X104.063 Y113.273 E6.6414 ; perimeter G1 X103.882 Y112.86 E6.64645 ; perimeter G1 X103.767 Y112.396 E6.6518 ; perimeter G1 X103.714 Y111.88 E6.65761 ; perimeter ;WIDTH:0.438365 G1 X103.742 Y111.808 E6.65857 ; perimeter G1 X104.105 Y111.641 F9000 ; move inwards before travel G1 X104.105 Y111.549 ; move to first perimeter point G1 X103.545 Y111.549 ; move to first perimeter point G1 X103.444 Y112.08 ; move to first perimeter point G1 X103.501 Y112.456 ; move to first perimeter point G1 X103.541 Y112.62 ; move to first perimeter point G1 X103.649 Y112.957 ; move to first perimeter point G1 X103.714 Y113.107 ; move to first perimeter point G1 X103.873 Y113.401 ; move to first perimeter point G1 X103.966 Y113.533 ; move to first perimeter point G1 X104.094 Y113.684 ; move to first perimeter point G1 X103.99 Y113.773 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.415434 G1 F2250 G1 X103.73 Y113.422 E6.66367 ; perimeter ;WIDTH:0.458638 G1 X103.507 Y112.955 E6.67041 ; perimeter ;WIDTH:0.497754 G1 X103.363 Y112.437 E6.67808 ; perimeter ;WIDTH:0.538968 G1 X103.29 Y111.923 E6.68615 ; perimeter ;WIDTH:0.584825 G1 X103.305 Y111.798 E6.68829 ; perimeter ;WIDTH:0.630682 G1 X103.32 Y111.673 E6.69061 ; perimeter ;WIDTH:0.676539 G1 X103.335 Y111.548 E6.69311 ; perimeter ;WIDTH:0.722396 G1 X103.35 Y111.422 E6.69581 ; perimeter G1 X103.322 Y111.337 E6.69772 ; perimeter ;WIDTH:0.676011 G1 X103.293 Y111.251 E6.69952 ; perimeter ;WIDTH:0.629626 G1 X103.282 Y111.093 E6.70243 ; perimeter ;WIDTH:0.588436 G1 X103.271 Y110.935 E6.70514 ; perimeter ;WIDTH:0.547246 G1 X103.327 Y110.24 E6.71616 ; perimeter ;WIDTH:0.520872 G1 X103.437 Y109.703 E6.72437 ; perimeter ;WIDTH:0.502432 G1 X103.638 Y109.175 E6.73251 ; perimeter ;WIDTH:0.471914 G1 X103.905 Y108.751 E6.73925 ; perimeter ;WIDTH:0.43226 G1 X104.067 Y108.577 E6.74215 ; perimeter G1 X103.974 Y108.484 F9000 ; move to first perimeter point G1 X103.134 Y111.013 ; move to first perimeter point G1 X103.819 Y113.79 ; move to first perimeter point G1 X105.897 Y114.69 ; move to first perimeter point G1 X107.983 Y113.787 ; move to first perimeter point G1 X108.601 Y111.713 ; move to first perimeter point G1 X108.593 Y111.571 ; move to first perimeter point G1 X108.443 Y111.58 ; move to first perimeter point ;WIDTH:0.552284 G1 F2250 G1 X108.447 Y111.7 E6.74407 ; perimeter ;WIDTH:0.517228 G1 X108.451 Y111.819 E6.74584 ; perimeter ;WIDTH:0.482172 G1 X108.454 Y111.938 E6.74748 ; perimeter ;WIDTH:0.458504 G1 X108.381 Y112.505 E6.75493 ; perimeter G1 X108.296 Y112.768 E6.75853 ; perimeter ;WIDTH:0.424891 G1 X108.211 Y113.03 E6.76183 ; perimeter ;WIDTH:0.391278 G1 X107.996 Y113.491 E6.76739 ; perimeter ;WIDTH:0.385752 G1 X107.896 Y113.668 E6.76958 ; perimeter G1 X108.013 Y113.736 F9000 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X104.17 Y111.281 ; move to first perimeter point G1 X103.754 Y111.281 ; move to first perimeter point G1 X103.754 Y111.082 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.438365 G1 F2250 G1 X103.779 Y111.139 E6.77035 ; perimeter ;WIDTH:0.463863 G1 X103.835 Y111.165 E6.77116 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.192 E6.77204 ; perimeter G1 X107.9 Y111.192 E6.82814 ; perimeter G1 X108.416 Y111.169 E6.83537 ; perimeter ;WIDTH:0.44468 G1 X108.931 Y111.147 E6.84186 ; perimeter ;WIDTH:0.399999 G1 X108.74 Y112.758 E6.86002 ; perimeter G1 X108.171 Y113.901 E6.87431 ; perimeter ;WIDTH:0.438032 G1 X108.03 Y113.98 E6.87631 ; perimeter ;WIDTH:0.476065 G1 X107.888 Y114.059 E6.87852 ; perimeter ;WIDTH:0.514097 G1 X107.747 Y114.138 E6.88091 ; perimeter G1 X107.26 Y114.492 E6.8898 ; perimeter ;WIDTH:0.510783 G1 X106.878 Y114.604 E6.89564 ; perimeter ;WIDTH:0.467891 G1 X106.382 Y114.699 E6.90237 ; perimeter ;WIDTH:0.470099 G1 X105.827 Y114.767 E6.90986 ; perimeter ;WIDTH:0.486022 G1 X105.18 Y114.702 E6.91889 ; perimeter ;WIDTH:0.516686 G1 X104.578 Y114.513 E6.92826 ; perimeter ;WIDTH:0.537825 G1 X103.924 Y114.116 E6.94013 ; perimeter ;WIDTH:0.491883 G1 X103.773 Y114.011 E6.94272 ; perimeter ;WIDTH:0.445941 G1 X103.622 Y113.906 E6.94504 ; perimeter ;WIDTH:0.399999 G1 X103.275 Y113.405 E6.95186 ; perimeter G1 X103.025 Y112.798 E6.95921 ; perimeter G1 X102.872 Y112.081 E6.96742 ; perimeter G1 X102.82 Y111.252 E6.97672 ; perimeter G1 X102.872 Y110.381 E6.98649 ; perimeter G1 X103.025 Y109.633 E6.99504 ; perimeter G1 X103.276 Y109.009 E7.00257 ; perimeter G1 X103.597 Y108.54 E7.00893 ; perimeter G1 X103.833 Y108.315 E7.01258 ; perimeter ;WIDTH:0.445318 G1 X103.999 Y108.225 E7.01496 ; perimeter ;WIDTH:0.490637 G1 X104.164 Y108.135 E7.0176 ; perimeter ;WIDTH:0.535955 G1 X104.801 Y107.827 E7.02854 ; perimeter ;WIDTH:0.504491 G1 X105.346 Y107.691 E7.03667 ; perimeter ;WIDTH:0.483771 G1 X105.893 Y107.645 E7.04426 ; perimeter ;WIDTH:0.477736 G1 X106.394 Y107.681 E7.05111 ; perimeter ;WIDTH:0.503712 G1 X106.922 Y107.753 E7.05881 ; perimeter G1 X107.265 Y107.869 E7.06404 ; perimeter ;WIDTH:0.535372 G1 X107.758 Y108.095 E7.07241 ; perimeter ;WIDTH:0.559025 G1 X108.253 Y108.529 E7.08306 ; perimeter ;WIDTH:0.559465 G1 X108.52 Y108.965 E7.09134 ; perimeter G1 X108.007 Y109.111 E7.09998 ; perimeter G1 X107.832 Y108.821 E7.10547 ; perimeter ;WIDTH:0.547078 G1 X107.434 Y108.466 E7.1139 ; perimeter ;WIDTH:0.535372 G1 X107.026 Y108.257 E7.12098 ; perimeter ;WIDTH:0.492394 G1 X106.381 Y108.107 E7.13031 ; perimeter ;WIDTH:0.477099 G1 X105.961 Y108.078 E7.13604 ; perimeter ;WIDTH:0.480471 G1 X105.454 Y108.12 E7.14302 ; perimeter ;WIDTH:0.501176 G1 X104.989 Y108.249 E7.14995 ; perimeter ;WIDTH:0.539254 G1 X104.549 Y108.488 E7.15774 ; perimeter G1 X104.451 Y108.624 E7.16035 ; perimeter ;WIDTH:0.492836 G1 X104.352 Y108.76 E7.16272 ; perimeter ;WIDTH:0.446418 G1 X104.254 Y108.895 E7.16483 ; perimeter ;WIDTH:0.399999 G1 X104 Y109.332 E7.17049 ; perimeter G1 X103.829 Y109.829 E7.17637 ; perimeter G1 X103.735 Y110.34 E7.18219 ; perimeter G1 X103.701 Y110.959 E7.18913 ; perimeter ;WIDTH:0.438365 G1 X103.73 Y111.027 E7.19005 ; perimeter G1 X104.096 Y111.188 F9000 ; move inwards before travel G1 E.69005 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.096 Y111.281 F9000 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X107.888 Y113.882 ; move to first perimeter point G1 X107.671 Y114.066 ; move to first perimeter point G1 X111.301 Y117.064 ; move to first perimeter point G1 X111.301 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506442 G1 F2250 G1 X111.301 Y108.146 E6.62851 ; perimeter G1 X111.711 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X111.711 Y108.146 E6.6331 ; perimeter G1 X111.711 Y117.4 E6.7367 ; perimeter G1 X110.89 Y117.4 E6.74589 ; perimeter G1 X110.89 Y107.736 E6.85408 ; perimeter G1 X111.651 Y107.736 E6.8626 ; perimeter G1 X111.71 Y108.132 F9000 ; move inwards before travel G1 E.3626 F1500 ; retract G92 E0 ; reset extrusion distance G1 X111.42 Y108.168 F9000 ; move to first perimeter point G1 X114.386 Y117.064 ; move to first perimeter point G1 X114.386 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.50644 G1 F2250 G1 X114.386 Y108.146 E6.6285 ; perimeter G1 X114.797 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X114.797 Y108.146 E6.63309 ; perimeter G1 X114.797 Y117.4 E6.73669 ; perimeter G1 X113.976 Y117.4 E6.74588 ; perimeter G1 X113.976 Y107.736 E6.85407 ; perimeter G1 X114.737 Y107.736 E6.86259 ; perimeter G1 X114.796 Y108.132 F9000 ; move inwards before travel G1 E.36259 F1500 ; retract G92 E0 ; reset extrusion distance G1 X114.506 Y108.168 F9000 ; move to first perimeter point G1 X117.843 Y108.468 ; move to first perimeter point G1 X118.292 Y108.418 ; move to first perimeter point G1 X118.359 Y108.525 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.53475 G1 F2250 G1 X118.379 Y108.493 E6.50058 ; perimeter G1 X118.786 Y108.251 E6.50788 ; perimeter ;WIDTH:0.496195 G1 X119.247 Y108.112 E6.51472 ; perimeter ;WIDTH:0.474056 G1 X119.751 Y108.067 E6.52156 ; perimeter ;WIDTH:0.473836 G1 X120.276 Y108.111 E6.52868 ; perimeter ;WIDTH:0.492361 G1 X120.76 Y108.244 E6.53575 ; perimeter ;WIDTH:0.529434 G1 X121.2 Y108.489 E6.54343 ; perimeter G1 X121.289 Y108.617 E6.54581 ; perimeter ;WIDTH:0.488852 G1 X121.378 Y108.746 E6.548 ; perimeter ;WIDTH:0.44827 G1 X121.468 Y108.874 E6.54999 ; perimeter ;WIDTH:0.407687 G1 X121.699 Y109.32 E6.55573 ; perimeter ;WIDTH:0.399999 G1 X121.852 Y109.831 E6.5617 ; perimeter G1 X121.949 Y110.456 E6.56878 ; perimeter G1 X121.985 Y111.204 E6.57716 ; perimeter G1 X121.956 Y111.928 E6.58527 ; perimeter G1 X121.87 Y112.552 E6.59232 ; perimeter G1 X121.723 Y113.079 E6.59844 ; perimeter G1 X121.486 Y113.549 E6.60433 ; perimeter ;WIDTH:0.445292 G1 X121.396 Y113.681 E6.60635 ; perimeter ;WIDTH:0.490585 G1 X121.306 Y113.813 E6.60859 ; perimeter ;WIDTH:0.535877 G1 X121.216 Y113.945 E6.61106 ; perimeter G1 X120.805 Y114.171 E6.61831 ; perimeter ;WIDTH:0.495606 G1 X120.335 Y114.3 E6.62523 ; perimeter ;WIDTH:0.473786 G1 X119.834 Y114.342 E6.63202 ; perimeter ;WIDTH:0.470433 G1 X119.298 Y114.287 E6.63924 ; perimeter ;WIDTH:0.497376 G1 X118.766 Y114.144 E6.64709 ; perimeter ;WIDTH:0.516089 G1 X118.355 Y113.887 E6.65428 ; perimeter G1 X118.268 Y113.758 E6.65659 ; perimeter ;WIDTH:0.477393 G1 X118.18 Y113.629 E6.65872 ; perimeter ;WIDTH:0.438696 G1 X118.093 Y113.5 E6.66065 ; perimeter ;WIDTH:0.399999 G1 X117.869 Y113.064 E6.66614 ; perimeter G1 X117.718 Y112.562 E6.67201 ; perimeter G1 X117.623 Y111.937 E6.67909 ; perimeter G1 X117.591 Y111.219 E6.68714 ; perimeter G1 X117.62 Y110.521 E6.69496 ; perimeter G1 X117.711 Y109.91 E6.70188 ; perimeter G1 X117.864 Y109.383 E6.70802 ; perimeter G1 X118.088 Y108.932 E6.71366 ; perimeter G1 X118.158 Y108.845 E6.71491 ; perimeter ;WIDTH:0.444916 G1 X118.231 Y108.727 E6.71666 ; perimeter ;WIDTH:0.489833 G1 X118.305 Y108.61 E6.7186 ; perimeter ;WIDTH:0.53475 G1 X118.327 Y108.575 E6.71924 ; perimeter G1 X118.649 Y108.338 F9000 ; move inwards before travel G1 X118.447 Y108.006 ; move to first perimeter point G1 X121.018 Y107.952 ; move to first perimeter point G1 X121.805 Y108.531 ; move to first perimeter point G1 X121.841 Y108.567 ; move to first perimeter point G1 X121.745 Y108.662 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.432575 G1 F2250 G1 X121.897 Y108.901 E6.7227 ; perimeter ;WIDTH:0.474704 G1 X122.05 Y109.14 E6.72654 ; perimeter ;WIDTH:0.502218 G1 X122.153 Y109.426 E6.73092 ; perimeter ;WIDTH:0.529732 G1 X122.257 Y109.712 E6.73556 ; perimeter ;WIDTH:0.558436 G1 X122.381 Y110.393 E6.74675 ; perimeter ;WIDTH:0.565436 G1 X122.424 Y111.185 E6.75974 ; perimeter G1 X122.391 Y111.945 E6.7722 ; perimeter ;WIDTH:0.555306 G1 X122.289 Y112.611 E6.78302 ; perimeter ;WIDTH:0.532508 G1 X122.113 Y113.189 E6.79229 ; perimeter ;WIDTH:0.495618 G1 X121.981 Y113.434 E6.79624 ; perimeter ;WIDTH:0.467626 G1 X121.849 Y113.679 E6.79995 ; perimeter ;WIDTH:0.439634 G1 X121.705 Y113.842 E6.80266 ; perimeter G1 X121.801 Y113.936 F9000 ; move to first perimeter point G1 X119.805 Y114.691 ; move to first perimeter point G1 X117.686 Y113.794 ; move to first perimeter point G1 X117.654 Y113.735 ; move to first perimeter point G1 X117.769 Y113.674 ; move to first perimeter point ;WIDTH:0.428146 G1 F2250 G1 X117.513 Y113.171 E6.80948 ; perimeter ;WIDTH:0.47733 G1 X117.415 Y112.928 E6.81305 ; perimeter ;WIDTH:0.526514 G1 X117.316 Y112.686 E6.81701 ; perimeter G1 X117.219 Y111.997 E6.82756 ; perimeter ;WIDTH:0.530951 G1 X117.187 Y111.618 E6.83338 ; perimeter ;WIDTH:0.559864 G1 X117.154 Y111.238 E6.83956 ; perimeter G1 X117.186 Y110.503 E6.85148 ; perimeter ;WIDTH:0.554708 G1 X117.294 Y109.847 E6.86215 ; perimeter ;WIDTH:0.52903 G1 X117.48 Y109.269 E6.8714 ; perimeter ;WIDTH:0.486724 G1 X117.617 Y109.021 E6.87534 ; perimeter ;WIDTH:0.456459 G1 X117.754 Y108.773 E6.87901 ; perimeter ;WIDTH:0.426194 G1 X117.888 Y108.617 E6.88148 ; perimeter G1 X117.486 Y113.923 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X116.909 Y112.813 E6.89548 ; perimeter G1 X116.712 Y111.159 E6.91413 ; perimeter G1 X116.765 Y110.336 E6.92336 ; perimeter G1 X116.92 Y109.6 E6.93178 ; perimeter G1 X117.19 Y108.956 E6.9396 ; perimeter G1 X117.515 Y108.48 E6.94605 ; perimeter ;WIDTH:0.441053 G1 X117.668 Y108.37 E6.9484 ; perimeter ;WIDTH:0.482107 G1 X117.821 Y108.259 E6.951 ; perimeter ;WIDTH:0.52316 G1 X117.973 Y108.149 E6.95382 ; perimeter G1 X118.421 Y107.9 E6.96154 ; perimeter ;WIDTH:0.518741 G1 X118.652 Y107.818 E6.9652 ; perimeter ;WIDTH:0.496195 G1 X119.209 Y107.683 E6.97334 ; perimeter ;WIDTH:0.474056 G1 X119.797 Y107.64 E6.98131 ; perimeter ;WIDTH:0.48493 G1 X120.495 Y107.705 E6.99102 ; perimeter ;WIDTH:0.502288 G1 X120.997 Y107.847 E6.99853 ; perimeter ;WIDTH:0.529434 G1 X121.625 Y108.181 E7.00938 ; perimeter ;WIDTH:0.488852 G1 X121.79 Y108.282 E7.01208 ; perimeter ;WIDTH:0.44827 G1 X121.954 Y108.383 E7.01453 ; perimeter ;WIDTH:0.407687 G1 X122.112 Y108.54 E7.01708 ; perimeter ;WIDTH:0.399999 G1 X122.461 Y109.091 E7.02438 ; perimeter G1 X122.692 Y109.735 E7.03204 ; perimeter G1 X122.822 Y110.459 E7.04027 ; perimeter G1 X122.865 Y111.237 E7.04899 ; perimeter G1 X122.812 Y112.125 E7.05895 ; perimeter G1 X122.662 Y112.883 E7.0676 ; perimeter G1 X122.41 Y113.513 E7.0752 ; perimeter G1 X122.084 Y113.984 E7.08161 ; perimeter ;WIDTH:0.437478 G1 X121.937 Y114.087 E7.08383 ; perimeter ;WIDTH:0.474957 G1 X121.789 Y114.19 E7.08627 ; perimeter ;WIDTH:0.512436 G1 X121.642 Y114.292 E7.0889 ; perimeter ;WIDTH:0.522117 G1 X121.188 Y114.52 E7.09653 ; perimeter G1 X120.929 Y114.606 E7.10063 ; perimeter ;WIDTH:0.495606 G1 X120.37 Y114.729 E7.10875 ; perimeter ;WIDTH:0.473786 G1 X119.746 Y114.763 E7.11719 ; perimeter ;WIDTH:0.468761 G1 X119.161 Y114.675 E7.12509 ; perimeter ;WIDTH:0.484182 G1 X118.81 Y114.601 E7.13005 ; perimeter ;WIDTH:0.517387 G1 X118.459 Y114.526 E7.13539 ; perimeter G1 X118.044 Y114.24 E7.14289 ; perimeter ;WIDTH:0.516089 G1 X117.858 Y114.134 E7.14607 ; perimeter ;WIDTH:0.477393 G1 X117.672 Y114.029 E7.14898 ; perimeter ;WIDTH:0.438696 G1 X117.538 Y113.953 E7.15089 ; perimeter G1 X117.328 Y113.612 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:4.4 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 21; ;LAYER:21 G1 E.65089 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z4.4 F9000 ; simple layer change G1 X117.531 Y113.507 ; travel to first layer point G1 X114.52 Y113.431 ; travel to first layer point G1 X114.252 Y113.414 ; travel to first layer point G1 X111.434 Y113.232 ; travel to first layer point G1 X111.167 Y113.215 ; travel to first layer point G1 X108.353 Y113.034 ; travel to first layer point G1 X106.999 Y114.493 ; travel to first layer point G1 X104.676 Y114.449 ; travel to first layer point G1 X103.285 Y112.707 ; travel to first layer point G1 X100.363 Y112.518 ; travel to first layer point G1 X93.675 Y112.551 ; travel to first layer point G1 X93.657 Y112.1 ; travel to first layer point G1 X93.792 Y112.095 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.59053 G1 F2250 G1 X93.787 Y111.986 E6.50187 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y108.184 E6.56601 ; perimeter G1 X93.787 Y116.443 F9000 ; move to first perimeter point G1 F2250 G1 X93.787 Y113.028 E6.62362 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.399111 G1 F2250 G1 X94.175 Y112.549 E6.62581 ; perimeter ;WIDTH:0.420375 G1 X94.028 Y112.641 E6.62786 ; perimeter ;WIDTH:0.460542 G1 X93.968 Y112.737 E6.62934 ; perimeter ;WIDTH:0.500709 G1 X93.908 Y112.834 E6.63098 ; perimeter ;WIDTH:0.540876 G1 X93.847 Y112.931 E6.63277 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y113.028 E6.63469 ; perimeter G1 X93.767 Y112.898 E6.63691 ; perimeter ;WIDTH:0.540876 G1 X93.747 Y112.767 E6.63898 ; perimeter ;WIDTH:0.500709 G1 X93.727 Y112.637 E6.64087 ; perimeter ;WIDTH:0.460542 G1 X93.707 Y112.507 E6.64259 ; perimeter ;WIDTH:0.462914 G1 X93.728 Y112.404 E6.64397 ; perimeter ;WIDTH:0.505453 G1 X93.749 Y112.301 E6.64549 ; perimeter ;WIDTH:0.547992 G1 X93.77 Y112.198 E6.64715 ; perimeter ;WIDTH:0.59053 G1 X93.792 Y112.095 E6.64896 ; perimeter G1 X93.851 Y112.164 E6.65052 ; perimeter ;WIDTH:0.547992 G1 X93.91 Y112.234 E6.65197 ; perimeter ;WIDTH:0.505453 G1 X93.969 Y112.303 E6.65329 ; perimeter ;WIDTH:0.462914 G1 X94.028 Y112.373 E6.6545 ; perimeter ;WIDTH:0.420375 G1 X94.175 Y112.465 E6.65655 ; perimeter ;WIDTH:0.399111 G1 X94.309 Y112.494 E6.65808 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.374822 G1 F2250 G1 X99.623 Y112.507 E6.71277 ; perimeter G1 X100.249 Y116.443 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y113.028 E6.77038 ; perimeter G1 X100.245 Y112.095 F9000 ; move to first perimeter point ;WIDTH:0.590528 G1 F2250 G1 X100.266 Y112.198 E6.77218 ; perimeter ;WIDTH:0.54799 G1 X100.287 Y112.301 E6.77384 ; perimeter ;WIDTH:0.505452 G1 X100.308 Y112.404 E6.77536 ; perimeter ;WIDTH:0.462914 G1 X100.33 Y112.507 E6.77675 ; perimeter ;WIDTH:0.460542 G1 X100.31 Y112.637 E6.77847 ; perimeter ;WIDTH:0.500708 G1 X100.29 Y112.767 E6.78036 ; perimeter ;WIDTH:0.540874 G1 X100.269 Y112.898 E6.78243 ; perimeter ;WIDTH:0.58104 G1 X100.249 Y113.028 E6.78465 ; perimeter G1 X100.189 Y112.931 E6.78657 ; perimeter ;WIDTH:0.540874 G1 X100.129 Y112.834 E6.78835 ; perimeter ;WIDTH:0.500708 G1 X100.068 Y112.737 E6.78999 ; perimeter ;WIDTH:0.460542 G1 X100.008 Y112.641 E6.79147 ; perimeter ;WIDTH:0.420375 G1 X99.862 Y112.547 E6.79352 ; perimeter ;WIDTH:0.402898 G1 X99.623 Y112.507 E6.79625 ; perimeter G1 X99.862 Y112.467 E6.79898 ; perimeter ;WIDTH:0.420375 G1 X100.008 Y112.373 E6.80103 ; perimeter ;WIDTH:0.462914 G1 X100.067 Y112.303 E6.80224 ; perimeter ;WIDTH:0.505452 G1 X100.126 Y112.234 E6.80356 ; perimeter ;WIDTH:0.54799 G1 X100.185 Y112.164 E6.80501 ; perimeter ;WIDTH:0.590528 G1 X100.206 Y112.14 E6.80556 ; perimeter G1 X100.249 Y108.184 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y111.986 E6.8697 ; perimeter ;WIDTH:0.590528 G1 X100.245 Y112.095 E6.87157 ; perimeter G1 X99.752 Y112.907 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F1500 G1 X99.749 Y112.901 E6.87165 ; perimeter G1 X99.623 Y112.849 E6.87318 ; perimeter G1 X94.413 Y112.849 E6.9315 ; perimeter G1 X94.334 Y112.868 E6.93241 ; perimeter G1 X94.235 Y113.028 E6.93452 ; perimeter G1 X94.235 Y116.891 E6.97777 ; perimeter G1 X93.339 Y116.891 E6.9878 ; perimeter G1 X93.339 Y107.736 E7.09029 ; perimeter G1 X94.235 Y107.736 E7.10032 ; perimeter G1 X94.235 Y111.986 E7.1479 ; perimeter G1 X94.287 Y112.112 E7.14943 ; perimeter G1 X94.413 Y112.164 E7.15096 ; perimeter G1 X99.623 Y112.164 E7.20928 ; perimeter G1 X99.749 Y112.112 E7.21081 ; perimeter G1 X99.802 Y111.986 E7.21234 ; perimeter G1 X99.802 Y107.736 E7.25992 ; perimeter G1 X100.697 Y107.736 E7.26994 ; perimeter G1 X100.697 Y108.184 E7.27496 ; perimeter G1 X100.697 Y116.891 E7.37243 ; perimeter G1 X99.802 Y116.891 E7.38245 ; perimeter G1 X99.802 Y113.028 E7.4257 ; perimeter G1 X99.775 Y112.963 E7.42649 ; perimeter G1 X99.389 Y112.856 F9000 ; move inwards before travel G1 E.92649 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.389 Y112.641 F9000 ; move to first perimeter point G1 X100.364 Y112.61 ; move to first perimeter point G1 X103.155 Y111.906 ; move to first perimeter point G1 X103.764 Y111.549 ; move to first perimeter point G1 X103.764 Y111.752 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.438366 G1 F2250 G1 X103.787 Y111.694 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.839 Y111.666 E6.50155 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.638 E6.50239 ; perimeter G1 X107.9 Y111.638 E6.55849 ; perimeter G1 X107.979 Y111.709 E6.55998 ; perimeter ;WIDTH:0.44468 G1 X108.059 Y111.779 E6.56132 ; perimeter ;WIDTH:0.399999 G1 X108.077 Y111.886 E6.56253 ; perimeter G1 X107.998 Y112.452 E6.56893 ; perimeter G1 X107.87 Y112.939 E6.57457 ; perimeter G1 X107.612 Y113.463 E6.58111 ; perimeter ;WIDTH:0.438032 G1 X107.56 Y113.565 E6.58253 ; perimeter ;WIDTH:0.476065 G1 X107.507 Y113.666 E6.58408 ; perimeter ;WIDTH:0.514097 G1 X107.455 Y113.768 E6.58577 ; perimeter G1 X107.016 Y114.094 E6.59385 ; perimeter ;WIDTH:0.510783 G1 X106.752 Y114.198 E6.59801 ; perimeter ;WIDTH:0.465509 G1 X106.332 Y114.297 E6.60373 ; perimeter ;WIDTH:0.470099 G1 X105.863 Y114.341 E6.61004 ; perimeter ;WIDTH:0.486022 G1 X105.303 Y114.277 E6.61787 ; perimeter ;WIDTH:0.516686 G1 X104.807 Y114.098 E6.6257 ; perimeter ;WIDTH:0.547115 G1 X104.45 Y113.863 E6.63246 ; perimeter G1 X104.391 Y113.766 E6.63425 ; perimeter ;WIDTH:0.498077 G1 X104.331 Y113.67 E6.63587 ; perimeter ;WIDTH:0.449038 G1 X104.272 Y113.574 E6.6373 ; perimeter ;WIDTH:0.399999 G1 X104.063 Y113.273 E6.6414 ; perimeter G1 X103.882 Y112.86 E6.64645 ; perimeter G1 X103.767 Y112.396 E6.6518 ; perimeter G1 X103.714 Y111.88 E6.65761 ; perimeter ;WIDTH:0.438366 G1 X103.742 Y111.808 E6.65857 ; perimeter G1 X104.105 Y111.641 F9000 ; move inwards before travel G1 X104.105 Y111.281 ; move to first perimeter point G1 X108.592 Y111.449 ; move to first perimeter point G1 X107.888 Y113.882 ; move to first perimeter point G1 X105.661 Y114.673 ; move to first perimeter point G1 X104.207 Y114.169 ; move to first perimeter point G1 X103.896 Y113.871 ; move to first perimeter point G1 X103.99 Y113.773 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.415434 G1 F2250 G1 X103.73 Y113.422 E6.66367 ; perimeter ;WIDTH:0.458638 G1 X103.507 Y112.955 E6.67041 ; perimeter ;WIDTH:0.497754 G1 X103.363 Y112.437 E6.67808 ; perimeter ;WIDTH:0.538968 G1 X103.29 Y111.923 E6.68615 ; perimeter ;WIDTH:0.584825 G1 X103.305 Y111.798 E6.68829 ; perimeter ;WIDTH:0.630681 G1 X103.32 Y111.673 E6.69061 ; perimeter ;WIDTH:0.676538 G1 X103.335 Y111.548 E6.69311 ; perimeter ;WIDTH:0.722394 G1 X103.35 Y111.422 E6.69581 ; perimeter G1 X103.322 Y111.337 E6.69772 ; perimeter ;WIDTH:0.676009 G1 X103.293 Y111.251 E6.69952 ; perimeter ;WIDTH:0.629624 G1 X103.282 Y111.093 E6.70243 ; perimeter ;WIDTH:0.588435 G1 X103.271 Y110.935 E6.70514 ; perimeter ;WIDTH:0.547246 G1 X103.327 Y110.24 E6.71616 ; perimeter ;WIDTH:0.520874 G1 X103.437 Y109.703 E6.72437 ; perimeter ;WIDTH:0.502428 G1 X103.638 Y109.175 E6.73251 ; perimeter ;WIDTH:0.471914 G1 X103.905 Y108.751 E6.73925 ; perimeter ;WIDTH:0.432258 G1 X104.067 Y108.577 E6.74215 ; perimeter G1 X103.975 Y108.484 F9000 ; move to first perimeter point G1 X103.144 Y110.805 ; move to first perimeter point G1 X103.735 Y113.671 ; move to first perimeter point G1 X105.661 Y114.673 ; move to first perimeter point G1 X107.888 Y113.882 ; move to first perimeter point G1 X108.601 Y111.72 ; move to first perimeter point G1 X108.596 Y111.575 ; move to first perimeter point G1 X108.443 Y111.58 ; move to first perimeter point ;WIDTH:0.552284 G1 F2250 G1 X108.447 Y111.7 E6.74407 ; perimeter ;WIDTH:0.517229 G1 X108.451 Y111.819 E6.74584 ; perimeter ;WIDTH:0.482174 G1 X108.454 Y111.938 E6.74748 ; perimeter ;WIDTH:0.458506 G1 X108.381 Y112.505 E6.75493 ; perimeter G1 X108.296 Y112.768 E6.75853 ; perimeter ;WIDTH:0.424892 G1 X108.211 Y113.03 E6.76183 ; perimeter ;WIDTH:0.391278 G1 X107.996 Y113.491 E6.76739 ; perimeter ;WIDTH:0.385752 G1 X107.896 Y113.668 E6.76958 ; perimeter G1 X108.013 Y113.736 F9000 ; move to first perimeter point G1 X108.593 Y111.404 ; move to first perimeter point G1 X104.17 Y111.281 ; move to first perimeter point G1 X103.754 Y111.281 ; move to first perimeter point G1 X103.754 Y111.082 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.438366 G1 F2250 G1 X103.779 Y111.139 E6.77035 ; perimeter ;WIDTH:0.463863 G1 X103.835 Y111.165 E6.77116 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.192 E6.77204 ; perimeter G1 X107.9 Y111.192 E6.82814 ; perimeter G1 X108.416 Y111.169 E6.83537 ; perimeter ;WIDTH:0.44468 G1 X108.931 Y111.147 E6.84186 ; perimeter ;WIDTH:0.399999 G1 X108.74 Y112.758 E6.86002 ; perimeter G1 X108.171 Y113.901 E6.87431 ; perimeter ;WIDTH:0.438032 G1 X108.03 Y113.98 E6.87631 ; perimeter ;WIDTH:0.476065 G1 X107.888 Y114.059 E6.87852 ; perimeter ;WIDTH:0.514097 G1 X107.747 Y114.138 E6.88091 ; perimeter G1 X107.26 Y114.492 E6.8898 ; perimeter ;WIDTH:0.510783 G1 X106.878 Y114.604 E6.89564 ; perimeter ;WIDTH:0.467891 G1 X106.382 Y114.699 E6.90237 ; perimeter ;WIDTH:0.470099 G1 X105.827 Y114.767 E6.90986 ; perimeter ;WIDTH:0.486022 G1 X105.18 Y114.702 E6.91889 ; perimeter ;WIDTH:0.516686 G1 X104.578 Y114.513 E6.92826 ; perimeter ;WIDTH:0.537816 G1 X103.924 Y114.116 E6.94013 ; perimeter ;WIDTH:0.491877 G1 X103.773 Y114.011 E6.94272 ; perimeter ;WIDTH:0.445938 G1 X103.622 Y113.906 E6.94504 ; perimeter ;WIDTH:0.399999 G1 X103.275 Y113.405 E6.95186 ; perimeter G1 X103.025 Y112.798 E6.95921 ; perimeter G1 X102.872 Y112.081 E6.96742 ; perimeter G1 X102.82 Y111.252 E6.97672 ; perimeter G1 X102.872 Y110.381 E6.98649 ; perimeter G1 X103.025 Y109.633 E6.99504 ; perimeter G1 X103.26 Y109.049 E7.00209 ; perimeter G1 X103.377 Y108.862 E7.00456 ; perimeter G1 X103.698 Y108.435 E7.01054 ; perimeter ;WIDTH:0.43595 G1 X103.84 Y108.337 E7.01267 ; perimeter ;WIDTH:0.471901 G1 X103.981 Y108.238 E7.01499 ; perimeter ;WIDTH:0.507852 G1 X104.122 Y108.139 E7.0175 ; perimeter ;WIDTH:0.527141 G1 X104.59 Y107.902 E7.02546 ; perimeter G1 X104.861 Y107.809 E7.02981 ; perimeter ;WIDTH:0.501176 G1 X105.417 Y107.684 E7.038 ; perimeter ;WIDTH:0.480472 G1 X106.004 Y107.646 E7.04607 ; perimeter ;WIDTH:0.502784 G1 X106.922 Y107.753 E7.05939 ; perimeter G1 X107.265 Y107.869 E7.06461 ; perimeter ;WIDTH:0.535372 G1 X107.758 Y108.095 E7.07298 ; perimeter ;WIDTH:0.559026 G1 X108.253 Y108.529 E7.08363 ; perimeter ;WIDTH:0.559465 G1 X108.52 Y108.965 E7.09191 ; perimeter G1 X108.007 Y109.111 E7.10055 ; perimeter G1 X107.832 Y108.821 E7.10604 ; perimeter ;WIDTH:0.547078 G1 X107.434 Y108.466 E7.11447 ; perimeter ;WIDTH:0.535372 G1 X107.028 Y108.258 E7.12151 ; perimeter ;WIDTH:0.492145 G1 X106.462 Y108.12 E7.12971 ; perimeter ;WIDTH:0.4769 G1 X105.966 Y108.078 E7.13648 ; perimeter ;WIDTH:0.480472 G1 X105.454 Y108.12 E7.14353 ; perimeter ;WIDTH:0.501176 G1 X104.989 Y108.249 E7.15046 ; perimeter ;WIDTH:0.539254 G1 X104.549 Y108.488 E7.15825 ; perimeter G1 X104.451 Y108.624 E7.16086 ; perimeter ;WIDTH:0.492836 G1 X104.352 Y108.76 E7.16323 ; perimeter ;WIDTH:0.446418 G1 X104.254 Y108.895 E7.16534 ; perimeter ;WIDTH:0.399999 G1 X104 Y109.332 E7.171 ; perimeter G1 X103.829 Y109.829 E7.17688 ; perimeter G1 X103.735 Y110.34 E7.1827 ; perimeter G1 X103.701 Y110.959 E7.18964 ; perimeter ;WIDTH:0.438366 G1 X103.73 Y111.027 E7.19056 ; perimeter G1 X104.096 Y111.188 F9000 ; move inwards before travel G1 E.69056 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.096 Y111.281 F9000 ; move to first perimeter point G1 X108.592 Y111.449 ; move to first perimeter point G1 X107.888 Y113.882 ; move to first perimeter point G1 X107.669 Y114.065 ; move to first perimeter point G1 X111.301 Y117.064 ; move to first perimeter point G1 X111.301 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506442 G1 F2250 G1 X111.301 Y108.146 E6.62851 ; perimeter G1 X111.711 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X111.711 Y108.146 E6.6331 ; perimeter G1 X111.711 Y117.4 E6.7367 ; perimeter G1 X110.89 Y117.4 E6.74589 ; perimeter G1 X110.89 Y107.736 E6.85408 ; perimeter G1 X111.651 Y107.736 E6.8626 ; perimeter G1 X111.71 Y108.132 F9000 ; move inwards before travel G1 E.3626 F1500 ; retract G92 E0 ; reset extrusion distance G1 X111.42 Y108.168 F9000 ; move to first perimeter point G1 X114.386 Y117.064 ; move to first perimeter point G1 X114.386 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.50644 G1 F2250 G1 X114.386 Y108.146 E6.6285 ; perimeter G1 X114.797 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X114.797 Y108.146 E6.63309 ; perimeter G1 X114.797 Y117.4 E6.73669 ; perimeter G1 X113.976 Y117.4 E6.74588 ; perimeter G1 X113.976 Y107.736 E6.85407 ; perimeter G1 X114.737 Y107.736 E6.86259 ; perimeter G1 X114.796 Y108.132 F9000 ; move inwards before travel G1 E.36259 F1500 ; retract G92 E0 ; reset extrusion distance G1 X114.506 Y108.168 F9000 ; move to first perimeter point G1 X117.843 Y108.468 ; move to first perimeter point G1 X118.292 Y108.419 ; move to first perimeter point G1 X118.359 Y108.525 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.53475 G1 F2250 G1 X118.379 Y108.493 E6.50058 ; perimeter G1 X118.786 Y108.251 E6.50788 ; perimeter ;WIDTH:0.496195 G1 X119.247 Y108.112 E6.51472 ; perimeter ;WIDTH:0.474056 G1 X119.751 Y108.067 E6.52156 ; perimeter ;WIDTH:0.473836 G1 X120.276 Y108.111 E6.52868 ; perimeter ;WIDTH:0.492361 G1 X120.76 Y108.244 E6.53575 ; perimeter ;WIDTH:0.529434 G1 X121.2 Y108.489 E6.54343 ; perimeter G1 X121.289 Y108.617 E6.54581 ; perimeter ;WIDTH:0.488852 G1 X121.378 Y108.746 E6.548 ; perimeter ;WIDTH:0.448269 G1 X121.468 Y108.874 E6.54999 ; perimeter ;WIDTH:0.407686 G1 X121.699 Y109.32 E6.55573 ; perimeter ;WIDTH:0.399999 G1 X121.852 Y109.831 E6.5617 ; perimeter G1 X121.949 Y110.456 E6.56878 ; perimeter G1 X121.985 Y111.204 E6.57716 ; perimeter G1 X121.956 Y111.928 E6.58527 ; perimeter G1 X121.87 Y112.552 E6.59232 ; perimeter G1 X121.723 Y113.079 E6.59844 ; perimeter G1 X121.486 Y113.549 E6.60433 ; perimeter ;WIDTH:0.445292 G1 X121.396 Y113.681 E6.60635 ; perimeter ;WIDTH:0.490585 G1 X121.306 Y113.813 E6.60859 ; perimeter ;WIDTH:0.535877 G1 X121.216 Y113.945 E6.61106 ; perimeter G1 X120.805 Y114.171 E6.61831 ; perimeter ;WIDTH:0.495606 G1 X120.335 Y114.3 E6.62523 ; perimeter ;WIDTH:0.473786 G1 X119.834 Y114.342 E6.63202 ; perimeter ;WIDTH:0.470433 G1 X119.298 Y114.287 E6.63924 ; perimeter ;WIDTH:0.497375 G1 X118.766 Y114.144 E6.64709 ; perimeter ;WIDTH:0.516089 G1 X118.355 Y113.887 E6.65428 ; perimeter G1 X118.268 Y113.758 E6.65659 ; perimeter ;WIDTH:0.477393 G1 X118.18 Y113.629 E6.65872 ; perimeter ;WIDTH:0.438696 G1 X118.093 Y113.5 E6.66065 ; perimeter ;WIDTH:0.399999 G1 X117.869 Y113.064 E6.66614 ; perimeter G1 X117.718 Y112.562 E6.67201 ; perimeter G1 X117.623 Y111.937 E6.67909 ; perimeter G1 X117.591 Y111.219 E6.68714 ; perimeter G1 X117.62 Y110.521 E6.69496 ; perimeter G1 X117.711 Y109.91 E6.70188 ; perimeter G1 X117.864 Y109.383 E6.70802 ; perimeter G1 X118.088 Y108.932 E6.71366 ; perimeter G1 X118.158 Y108.845 E6.71491 ; perimeter ;WIDTH:0.444916 G1 X118.231 Y108.727 E6.71666 ; perimeter ;WIDTH:0.489833 G1 X118.305 Y108.61 E6.7186 ; perimeter ;WIDTH:0.53475 G1 X118.327 Y108.575 E6.71924 ; perimeter G1 X118.649 Y108.338 F9000 ; move inwards before travel G1 X118.447 Y108.006 ; move to first perimeter point G1 X121.016 Y107.951 ; move to first perimeter point G1 X121.835 Y108.56 ; move to first perimeter point G1 X121.842 Y108.567 ; move to first perimeter point G1 X121.745 Y108.662 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.432575 G1 F2250 G1 X121.897 Y108.901 E6.7227 ; perimeter ;WIDTH:0.474704 G1 X122.05 Y109.14 E6.72654 ; perimeter ;WIDTH:0.502218 G1 X122.153 Y109.426 E6.73092 ; perimeter ;WIDTH:0.529732 G1 X122.257 Y109.712 E6.73556 ; perimeter ;WIDTH:0.558436 G1 X122.381 Y110.393 E6.74675 ; perimeter ;WIDTH:0.565436 G1 X122.424 Y111.185 E6.75974 ; perimeter G1 X122.391 Y111.945 E6.7722 ; perimeter ;WIDTH:0.555306 G1 X122.289 Y112.611 E6.78302 ; perimeter ;WIDTH:0.532508 G1 X122.113 Y113.189 E6.79229 ; perimeter ;WIDTH:0.495618 G1 X121.981 Y113.434 E6.79624 ; perimeter ;WIDTH:0.467626 G1 X121.849 Y113.679 E6.79995 ; perimeter ;WIDTH:0.439634 G1 X121.705 Y113.842 E6.80266 ; perimeter G1 X121.801 Y113.936 F9000 ; move to first perimeter point G1 X119.806 Y114.691 ; move to first perimeter point G1 X117.686 Y113.795 ; move to first perimeter point G1 X117.654 Y113.736 ; move to first perimeter point G1 X117.769 Y113.674 ; move to first perimeter point ;WIDTH:0.428146 G1 F2250 G1 X117.513 Y113.171 E6.80948 ; perimeter ;WIDTH:0.47733 G1 X117.415 Y112.928 E6.81305 ; perimeter ;WIDTH:0.526514 G1 X117.316 Y112.686 E6.81701 ; perimeter G1 X117.219 Y111.997 E6.82756 ; perimeter ;WIDTH:0.530951 G1 X117.187 Y111.618 E6.83338 ; perimeter ;WIDTH:0.559864 G1 X117.154 Y111.238 E6.83956 ; perimeter G1 X117.186 Y110.503 E6.85148 ; perimeter ;WIDTH:0.554708 G1 X117.294 Y109.847 E6.86215 ; perimeter ;WIDTH:0.52903 G1 X117.48 Y109.269 E6.8714 ; perimeter ;WIDTH:0.486724 G1 X117.617 Y109.021 E6.87534 ; perimeter ;WIDTH:0.456459 G1 X117.754 Y108.773 E6.87901 ; perimeter ;WIDTH:0.426194 G1 X117.888 Y108.617 E6.88148 ; perimeter G1 X117.486 Y113.923 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X116.909 Y112.813 E6.89548 ; perimeter G1 X116.712 Y111.159 E6.91413 ; perimeter G1 X116.765 Y110.336 E6.92336 ; perimeter G1 X116.92 Y109.6 E6.93178 ; perimeter G1 X117.19 Y108.956 E6.9396 ; perimeter G1 X117.515 Y108.48 E6.94605 ; perimeter ;WIDTH:0.441054 G1 X117.668 Y108.37 E6.9484 ; perimeter ;WIDTH:0.482108 G1 X117.821 Y108.259 E6.951 ; perimeter ;WIDTH:0.523162 G1 X117.973 Y108.149 E6.95382 ; perimeter G1 X118.421 Y107.9 E6.96154 ; perimeter ;WIDTH:0.518742 G1 X118.652 Y107.818 E6.9652 ; perimeter ;WIDTH:0.496195 G1 X119.209 Y107.683 E6.97334 ; perimeter ;WIDTH:0.474056 G1 X119.797 Y107.64 E6.98131 ; perimeter ;WIDTH:0.484931 G1 X120.495 Y107.705 E6.99102 ; perimeter ;WIDTH:0.502288 G1 X120.997 Y107.847 E6.99853 ; perimeter ;WIDTH:0.529434 G1 X121.625 Y108.181 E7.00938 ; perimeter ;WIDTH:0.488852 G1 X121.79 Y108.282 E7.01208 ; perimeter ;WIDTH:0.448269 G1 X121.954 Y108.383 E7.01453 ; perimeter ;WIDTH:0.407686 G1 X122.112 Y108.54 E7.01708 ; perimeter ;WIDTH:0.399999 G1 X122.461 Y109.091 E7.02438 ; perimeter G1 X122.692 Y109.735 E7.03204 ; perimeter G1 X122.822 Y110.459 E7.04027 ; perimeter G1 X122.865 Y111.237 E7.04899 ; perimeter G1 X122.812 Y112.125 E7.05895 ; perimeter G1 X122.662 Y112.883 E7.0676 ; perimeter G1 X122.41 Y113.513 E7.0752 ; perimeter G1 X122.084 Y113.984 E7.08161 ; perimeter ;WIDTH:0.437479 G1 X121.937 Y114.087 E7.08383 ; perimeter ;WIDTH:0.474958 G1 X121.789 Y114.19 E7.08627 ; perimeter ;WIDTH:0.512437 G1 X121.642 Y114.292 E7.0889 ; perimeter ;WIDTH:0.522117 G1 X121.188 Y114.52 E7.09653 ; perimeter G1 X120.929 Y114.606 E7.10063 ; perimeter ;WIDTH:0.495606 G1 X120.37 Y114.729 E7.10875 ; perimeter ;WIDTH:0.473786 G1 X119.746 Y114.763 E7.11719 ; perimeter ;WIDTH:0.468761 G1 X119.161 Y114.675 E7.12509 ; perimeter ;WIDTH:0.484181 G1 X118.81 Y114.601 E7.13005 ; perimeter ;WIDTH:0.517386 G1 X118.459 Y114.526 E7.13539 ; perimeter G1 X118.044 Y114.24 E7.14289 ; perimeter ;WIDTH:0.516089 G1 X117.858 Y114.134 E7.14607 ; perimeter ;WIDTH:0.477393 G1 X117.672 Y114.029 E7.14898 ; perimeter ;WIDTH:0.438696 G1 X117.538 Y113.953 E7.15089 ; perimeter G1 X117.328 Y113.612 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:4.6 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 22; ;LAYER:22 G1 E.65089 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z4.6 F9000 ; simple layer change G1 X117.531 Y113.507 ; travel to first layer point G1 X114.52 Y113.431 ; travel to first layer point G1 X114.252 Y113.414 ; travel to first layer point G1 X111.434 Y113.232 ; travel to first layer point G1 X111.167 Y113.215 ; travel to first layer point G1 X108.356 Y113.034 ; travel to first layer point G1 X106.999 Y114.493 ; travel to first layer point G1 X104.676 Y114.449 ; travel to first layer point G1 X103.285 Y112.707 ; travel to first layer point G1 X100.363 Y112.518 ; travel to first layer point G1 X93.675 Y112.551 ; travel to first layer point G1 X93.657 Y112.1 ; travel to first layer point G1 X93.792 Y112.095 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.59053 G1 F2250 G1 X93.787 Y111.986 E6.50187 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y108.184 E6.56601 ; perimeter G1 X93.787 Y116.443 F9000 ; move to first perimeter point G1 F2250 G1 X93.787 Y113.028 E6.62362 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.399111 G1 F2250 G1 X94.175 Y112.549 E6.62581 ; perimeter ;WIDTH:0.420375 G1 X94.028 Y112.641 E6.62786 ; perimeter ;WIDTH:0.460542 G1 X93.968 Y112.737 E6.62934 ; perimeter ;WIDTH:0.500709 G1 X93.908 Y112.834 E6.63098 ; perimeter ;WIDTH:0.540876 G1 X93.847 Y112.931 E6.63277 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y113.028 E6.63469 ; perimeter G1 X93.767 Y112.898 E6.63691 ; perimeter ;WIDTH:0.540876 G1 X93.747 Y112.767 E6.63898 ; perimeter ;WIDTH:0.500709 G1 X93.727 Y112.637 E6.64087 ; perimeter ;WIDTH:0.460542 G1 X93.707 Y112.507 E6.64259 ; perimeter ;WIDTH:0.462914 G1 X93.728 Y112.404 E6.64397 ; perimeter ;WIDTH:0.505453 G1 X93.749 Y112.301 E6.64549 ; perimeter ;WIDTH:0.547992 G1 X93.77 Y112.198 E6.64715 ; perimeter ;WIDTH:0.59053 G1 X93.792 Y112.095 E6.64896 ; perimeter G1 X93.851 Y112.164 E6.65052 ; perimeter ;WIDTH:0.547992 G1 X93.91 Y112.234 E6.65197 ; perimeter ;WIDTH:0.505453 G1 X93.969 Y112.303 E6.65329 ; perimeter ;WIDTH:0.462914 G1 X94.028 Y112.373 E6.6545 ; perimeter ;WIDTH:0.420375 G1 X94.175 Y112.465 E6.65655 ; perimeter ;WIDTH:0.399111 G1 X94.309 Y112.494 E6.65808 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.374822 G1 F2250 G1 X99.623 Y112.507 E6.71277 ; perimeter G1 X100.249 Y116.443 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y113.028 E6.77038 ; perimeter G1 X100.245 Y112.095 F9000 ; move to first perimeter point ;WIDTH:0.590528 G1 F2250 G1 X100.266 Y112.198 E6.77218 ; perimeter ;WIDTH:0.54799 G1 X100.287 Y112.301 E6.77384 ; perimeter ;WIDTH:0.505452 G1 X100.308 Y112.404 E6.77536 ; perimeter ;WIDTH:0.462914 G1 X100.33 Y112.507 E6.77675 ; perimeter ;WIDTH:0.460542 G1 X100.31 Y112.637 E6.77847 ; perimeter ;WIDTH:0.500708 G1 X100.29 Y112.767 E6.78036 ; perimeter ;WIDTH:0.540874 G1 X100.269 Y112.898 E6.78243 ; perimeter ;WIDTH:0.58104 G1 X100.249 Y113.028 E6.78465 ; perimeter G1 X100.189 Y112.931 E6.78657 ; perimeter ;WIDTH:0.540874 G1 X100.129 Y112.834 E6.78835 ; perimeter ;WIDTH:0.500708 G1 X100.068 Y112.737 E6.78999 ; perimeter ;WIDTH:0.460542 G1 X100.008 Y112.641 E6.79147 ; perimeter ;WIDTH:0.420375 G1 X99.862 Y112.547 E6.79352 ; perimeter ;WIDTH:0.402898 G1 X99.623 Y112.507 E6.79625 ; perimeter G1 X99.862 Y112.467 E6.79898 ; perimeter ;WIDTH:0.420375 G1 X100.008 Y112.373 E6.80103 ; perimeter ;WIDTH:0.462914 G1 X100.067 Y112.303 E6.80224 ; perimeter ;WIDTH:0.505452 G1 X100.126 Y112.234 E6.80356 ; perimeter ;WIDTH:0.54799 G1 X100.185 Y112.164 E6.80501 ; perimeter ;WIDTH:0.590528 G1 X100.206 Y112.14 E6.80556 ; perimeter G1 X100.249 Y108.184 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y111.986 E6.8697 ; perimeter ;WIDTH:0.590528 G1 X100.245 Y112.095 E6.87157 ; perimeter G1 X99.752 Y112.907 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F1500 G1 X99.749 Y112.901 E6.87165 ; perimeter G1 X99.623 Y112.849 E6.87318 ; perimeter G1 X94.413 Y112.849 E6.9315 ; perimeter G1 X94.334 Y112.868 E6.93241 ; perimeter G1 X94.235 Y113.028 E6.93452 ; perimeter G1 X94.235 Y116.891 E6.97777 ; perimeter G1 X93.339 Y116.891 E6.9878 ; perimeter G1 X93.339 Y107.736 E7.09029 ; perimeter G1 X94.235 Y107.736 E7.10032 ; perimeter G1 X94.235 Y111.986 E7.1479 ; perimeter G1 X94.287 Y112.112 E7.14943 ; perimeter G1 X94.413 Y112.164 E7.15096 ; perimeter G1 X99.623 Y112.164 E7.20928 ; perimeter G1 X99.749 Y112.112 E7.21081 ; perimeter G1 X99.802 Y111.986 E7.21234 ; perimeter G1 X99.802 Y107.736 E7.25992 ; perimeter G1 X100.697 Y107.736 E7.26994 ; perimeter G1 X100.697 Y108.184 E7.27496 ; perimeter G1 X100.697 Y116.891 E7.37243 ; perimeter G1 X99.802 Y116.891 E7.38245 ; perimeter G1 X99.802 Y113.028 E7.4257 ; perimeter G1 X99.775 Y112.963 E7.42649 ; perimeter G1 X99.389 Y112.856 F9000 ; move inwards before travel G1 E.92649 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.389 Y112.641 F9000 ; move to first perimeter point G1 X100.364 Y112.61 ; move to first perimeter point G1 X103.156 Y111.905 ; move to first perimeter point G1 X103.764 Y111.549 ; move to first perimeter point G1 X103.764 Y111.752 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.438365 G1 F2250 G1 X103.787 Y111.694 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.839 Y111.666 E6.50155 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.638 E6.50239 ; perimeter G1 X107.9 Y111.638 E6.55849 ; perimeter G1 X107.979 Y111.709 E6.55998 ; perimeter ;WIDTH:0.44468 G1 X108.059 Y111.779 E6.56132 ; perimeter ;WIDTH:0.399999 G1 X108.077 Y111.886 E6.56253 ; perimeter G1 X107.998 Y112.452 E6.56893 ; perimeter G1 X107.87 Y112.939 E6.57457 ; perimeter G1 X107.612 Y113.463 E6.58111 ; perimeter ;WIDTH:0.438032 G1 X107.56 Y113.565 E6.58253 ; perimeter ;WIDTH:0.476065 G1 X107.507 Y113.666 E6.58408 ; perimeter ;WIDTH:0.514097 G1 X107.455 Y113.768 E6.58577 ; perimeter G1 X107.016 Y114.094 E6.59385 ; perimeter ;WIDTH:0.510783 G1 X106.752 Y114.198 E6.59801 ; perimeter ;WIDTH:0.46551 G1 X106.332 Y114.297 E6.60373 ; perimeter ;WIDTH:0.470099 G1 X105.863 Y114.341 E6.61004 ; perimeter ;WIDTH:0.486022 G1 X105.303 Y114.277 E6.61787 ; perimeter ;WIDTH:0.516686 G1 X104.807 Y114.098 E6.6257 ; perimeter ;WIDTH:0.547115 G1 X104.45 Y113.863 E6.63246 ; perimeter G1 X104.391 Y113.766 E6.63425 ; perimeter ;WIDTH:0.498077 G1 X104.331 Y113.67 E6.63587 ; perimeter ;WIDTH:0.449038 G1 X104.272 Y113.574 E6.6373 ; perimeter ;WIDTH:0.399999 G1 X104.063 Y113.273 E6.6414 ; perimeter G1 X103.882 Y112.86 E6.64645 ; perimeter G1 X103.767 Y112.396 E6.6518 ; perimeter G1 X103.714 Y111.88 E6.65761 ; perimeter ;WIDTH:0.438365 G1 X103.742 Y111.808 E6.65857 ; perimeter G1 X104.105 Y111.641 F9000 ; move inwards before travel G1 X104.105 Y111.281 ; move to first perimeter point G1 X108.585 Y111.402 ; move to first perimeter point G1 X107.888 Y113.882 ; move to first perimeter point G1 X105.661 Y114.673 ; move to first perimeter point G1 X104.207 Y114.169 ; move to first perimeter point G1 X103.897 Y113.868 ; move to first perimeter point G1 X103.99 Y113.773 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.415434 G1 F2250 G1 X103.73 Y113.422 E6.66367 ; perimeter ;WIDTH:0.458638 G1 X103.507 Y112.955 E6.67041 ; perimeter ;WIDTH:0.497754 G1 X103.363 Y112.437 E6.67808 ; perimeter ;WIDTH:0.538968 G1 X103.29 Y111.923 E6.68615 ; perimeter ;WIDTH:0.584825 G1 X103.305 Y111.798 E6.68829 ; perimeter ;WIDTH:0.630682 G1 X103.32 Y111.673 E6.69061 ; perimeter ;WIDTH:0.676539 G1 X103.335 Y111.548 E6.69311 ; perimeter ;WIDTH:0.722396 G1 X103.35 Y111.422 E6.69581 ; perimeter G1 X103.322 Y111.337 E6.69772 ; perimeter ;WIDTH:0.676011 G1 X103.293 Y111.251 E6.69952 ; perimeter ;WIDTH:0.629626 G1 X103.282 Y111.093 E6.70243 ; perimeter ;WIDTH:0.588436 G1 X103.271 Y110.935 E6.70514 ; perimeter ;WIDTH:0.547246 G1 X103.327 Y110.24 E6.71616 ; perimeter ;WIDTH:0.520874 G1 X103.437 Y109.703 E6.72437 ; perimeter ;WIDTH:0.50243 G1 X103.638 Y109.175 E6.73251 ; perimeter ;WIDTH:0.471912 G1 X103.905 Y108.751 E6.73925 ; perimeter ;WIDTH:0.43226 G1 X104.067 Y108.577 E6.74215 ; perimeter G1 X103.975 Y108.484 F9000 ; move to first perimeter point G1 X103.141 Y110.865 ; move to first perimeter point G1 X103.76 Y113.707 ; move to first perimeter point G1 X105.661 Y114.673 ; move to first perimeter point G1 X107.888 Y113.882 ; move to first perimeter point G1 X108.6 Y111.604 ; move to first perimeter point G1 X108.598 Y111.569 ; move to first perimeter point G1 X108.443 Y111.58 ; move to first perimeter point ;WIDTH:0.552284 G1 F2250 G1 X108.447 Y111.7 E6.74407 ; perimeter ;WIDTH:0.517228 G1 X108.451 Y111.819 E6.74584 ; perimeter ;WIDTH:0.482172 G1 X108.454 Y111.938 E6.74748 ; perimeter ;WIDTH:0.458504 G1 X108.381 Y112.505 E6.75493 ; perimeter G1 X108.296 Y112.768 E6.75853 ; perimeter ;WIDTH:0.424891 G1 X108.211 Y113.03 E6.76183 ; perimeter ;WIDTH:0.391278 G1 X107.996 Y113.491 E6.76739 ; perimeter ;WIDTH:0.385752 G1 X107.896 Y113.668 E6.76958 ; perimeter G1 X108.013 Y113.736 F9000 ; move to first perimeter point G1 X108.585 Y111.402 ; move to first perimeter point G1 X104.17 Y111.281 ; move to first perimeter point G1 X103.754 Y111.281 ; move to first perimeter point G1 X103.754 Y111.082 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.438365 G1 F2250 G1 X103.779 Y111.139 E6.77035 ; perimeter ;WIDTH:0.463863 G1 X103.835 Y111.165 E6.77116 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.192 E6.77204 ; perimeter G1 X107.9 Y111.192 E6.82814 ; perimeter G1 X108.416 Y111.169 E6.83537 ; perimeter ;WIDTH:0.44468 G1 X108.931 Y111.147 E6.84186 ; perimeter ;WIDTH:0.399999 G1 X108.74 Y112.758 E6.86002 ; perimeter G1 X108.171 Y113.901 E6.87431 ; perimeter ;WIDTH:0.438032 G1 X108.03 Y113.98 E6.87631 ; perimeter ;WIDTH:0.476065 G1 X107.888 Y114.059 E6.87852 ; perimeter ;WIDTH:0.514097 G1 X107.747 Y114.138 E6.88091 ; perimeter G1 X107.26 Y114.492 E6.8898 ; perimeter ;WIDTH:0.510783 G1 X106.878 Y114.604 E6.89564 ; perimeter ;WIDTH:0.467891 G1 X106.382 Y114.699 E6.90237 ; perimeter ;WIDTH:0.470099 G1 X105.827 Y114.767 E6.90986 ; perimeter ;WIDTH:0.486022 G1 X105.18 Y114.702 E6.91889 ; perimeter ;WIDTH:0.516686 G1 X104.578 Y114.513 E6.92826 ; perimeter ;WIDTH:0.537816 G1 X103.924 Y114.116 E6.94013 ; perimeter ;WIDTH:0.491877 G1 X103.773 Y114.011 E6.94272 ; perimeter ;WIDTH:0.445938 G1 X103.622 Y113.906 E6.94504 ; perimeter ;WIDTH:0.399999 G1 X103.275 Y113.405 E6.95186 ; perimeter G1 X103.025 Y112.798 E6.95921 ; perimeter G1 X102.872 Y112.081 E6.96742 ; perimeter G1 X102.82 Y111.252 E6.97672 ; perimeter G1 X102.872 Y110.381 E6.98649 ; perimeter G1 X103.025 Y109.633 E6.99504 ; perimeter G1 X103.26 Y109.049 E7.00209 ; perimeter G1 X103.377 Y108.862 E7.00456 ; perimeter G1 X103.698 Y108.435 E7.01054 ; perimeter ;WIDTH:0.43595 G1 X103.84 Y108.337 E7.01267 ; perimeter ;WIDTH:0.471901 G1 X103.981 Y108.238 E7.01499 ; perimeter ;WIDTH:0.507852 G1 X104.122 Y108.139 E7.0175 ; perimeter ;WIDTH:0.52714 G1 X104.59 Y107.902 E7.02546 ; perimeter G1 X104.861 Y107.809 E7.02981 ; perimeter ;WIDTH:0.501175 G1 X105.417 Y107.684 E7.038 ; perimeter ;WIDTH:0.480471 G1 X106.001 Y107.645 E7.04603 ; perimeter ;WIDTH:0.503076 G1 X106.922 Y107.753 E7.05941 ; perimeter G1 X107.265 Y107.869 E7.06463 ; perimeter ;WIDTH:0.535372 G1 X107.758 Y108.095 E7.073 ; perimeter ;WIDTH:0.559025 G1 X108.253 Y108.529 E7.08365 ; perimeter ;WIDTH:0.559503 G1 X108.52 Y108.965 E7.09193 ; perimeter G1 X108.006 Y109.112 E7.10059 ; perimeter G1 X107.832 Y108.821 E7.10608 ; perimeter ;WIDTH:0.547078 G1 X107.434 Y108.466 E7.11451 ; perimeter ;WIDTH:0.535372 G1 X107.027 Y108.258 E7.12157 ; perimeter ;WIDTH:0.49222 G1 X106.439 Y108.117 E7.13009 ; perimeter ;WIDTH:0.476941 G1 X105.964 Y108.078 E7.13658 ; perimeter ;WIDTH:0.480471 G1 X105.454 Y108.12 E7.1436 ; perimeter ;WIDTH:0.501175 G1 X104.989 Y108.249 E7.15053 ; perimeter ;WIDTH:0.539254 G1 X104.549 Y108.488 E7.15832 ; perimeter G1 X104.451 Y108.624 E7.16093 ; perimeter ;WIDTH:0.492836 G1 X104.352 Y108.76 E7.1633 ; perimeter ;WIDTH:0.446418 G1 X104.254 Y108.895 E7.16541 ; perimeter ;WIDTH:0.399999 G1 X104 Y109.332 E7.17107 ; perimeter G1 X103.829 Y109.829 E7.17695 ; perimeter G1 X103.735 Y110.34 E7.18277 ; perimeter G1 X103.701 Y110.959 E7.18971 ; perimeter ;WIDTH:0.438365 G1 X103.73 Y111.027 E7.19063 ; perimeter G1 X104.096 Y111.188 F9000 ; move inwards before travel G1 E.69063 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.096 Y111.281 F9000 ; move to first perimeter point G1 X108.585 Y111.402 ; move to first perimeter point G1 X107.888 Y113.882 ; move to first perimeter point G1 X107.672 Y114.068 ; move to first perimeter point G1 X111.301 Y117.064 ; move to first perimeter point G1 X111.301 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506442 G1 F2250 G1 X111.301 Y108.146 E6.62851 ; perimeter G1 X111.711 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X111.711 Y108.146 E6.6331 ; perimeter G1 X111.711 Y117.4 E6.7367 ; perimeter G1 X110.89 Y117.4 E6.74589 ; perimeter G1 X110.89 Y107.736 E6.85408 ; perimeter G1 X111.651 Y107.736 E6.8626 ; perimeter G1 X111.71 Y108.132 F9000 ; move inwards before travel G1 E.3626 F1500 ; retract G92 E0 ; reset extrusion distance G1 X111.42 Y108.168 F9000 ; move to first perimeter point G1 X114.386 Y117.064 ; move to first perimeter point G1 X114.386 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.50644 G1 F2250 G1 X114.386 Y108.146 E6.6285 ; perimeter G1 X114.797 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X114.797 Y108.146 E6.63309 ; perimeter G1 X114.797 Y117.4 E6.73669 ; perimeter G1 X113.976 Y117.4 E6.74588 ; perimeter G1 X113.976 Y107.736 E6.85407 ; perimeter G1 X114.737 Y107.736 E6.86259 ; perimeter G1 X114.796 Y108.132 F9000 ; move inwards before travel G1 E.36259 F1500 ; retract G92 E0 ; reset extrusion distance G1 X114.506 Y108.168 F9000 ; move to first perimeter point G1 X117.844 Y108.468 ; move to first perimeter point G1 X118.291 Y108.419 ; move to first perimeter point G1 X118.359 Y108.525 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.53475 G1 F2250 G1 X118.379 Y108.493 E6.50058 ; perimeter G1 X118.786 Y108.251 E6.50788 ; perimeter ;WIDTH:0.496196 G1 X119.247 Y108.112 E6.51472 ; perimeter ;WIDTH:0.474056 G1 X119.751 Y108.067 E6.52156 ; perimeter ;WIDTH:0.473837 G1 X120.276 Y108.111 E6.52868 ; perimeter ;WIDTH:0.490134 G1 X120.76 Y108.245 E6.53572 ; perimeter ;WIDTH:0.529435 G1 X121.2 Y108.489 E6.54339 ; perimeter G1 X121.289 Y108.617 E6.54577 ; perimeter ;WIDTH:0.488852 G1 X121.378 Y108.746 E6.54796 ; perimeter ;WIDTH:0.448269 G1 X121.468 Y108.874 E6.54995 ; perimeter ;WIDTH:0.407686 G1 X121.699 Y109.32 E6.55569 ; perimeter ;WIDTH:0.399999 G1 X121.852 Y109.831 E6.56166 ; perimeter G1 X121.949 Y110.456 E6.56874 ; perimeter G1 X121.985 Y111.204 E6.57712 ; perimeter G1 X121.956 Y111.928 E6.58523 ; perimeter G1 X121.87 Y112.552 E6.59228 ; perimeter G1 X121.723 Y113.079 E6.5984 ; perimeter G1 X121.486 Y113.549 E6.60429 ; perimeter ;WIDTH:0.445292 G1 X121.396 Y113.681 E6.60631 ; perimeter ;WIDTH:0.490585 G1 X121.306 Y113.813 E6.60855 ; perimeter ;WIDTH:0.535877 G1 X121.216 Y113.945 E6.61102 ; perimeter G1 X120.805 Y114.171 E6.61827 ; perimeter ;WIDTH:0.495606 G1 X120.335 Y114.3 E6.62519 ; perimeter ;WIDTH:0.473786 G1 X119.834 Y114.342 E6.63198 ; perimeter ;WIDTH:0.470433 G1 X119.298 Y114.287 E6.6392 ; perimeter ;WIDTH:0.497375 G1 X118.766 Y114.144 E6.64705 ; perimeter ;WIDTH:0.516089 G1 X118.355 Y113.887 E6.65424 ; perimeter G1 X118.268 Y113.758 E6.65655 ; perimeter ;WIDTH:0.477393 G1 X118.18 Y113.629 E6.65868 ; perimeter ;WIDTH:0.438696 G1 X118.093 Y113.5 E6.66061 ; perimeter ;WIDTH:0.399999 G1 X117.869 Y113.064 E6.6661 ; perimeter G1 X117.718 Y112.562 E6.67197 ; perimeter G1 X117.623 Y111.937 E6.67905 ; perimeter G1 X117.591 Y111.219 E6.6871 ; perimeter G1 X117.62 Y110.521 E6.69492 ; perimeter G1 X117.711 Y109.91 E6.70184 ; perimeter G1 X117.864 Y109.383 E6.70798 ; perimeter G1 X118.088 Y108.932 E6.71362 ; perimeter G1 X118.158 Y108.845 E6.71487 ; perimeter ;WIDTH:0.444916 G1 X118.231 Y108.727 E6.71662 ; perimeter ;WIDTH:0.489833 G1 X118.305 Y108.61 E6.71856 ; perimeter ;WIDTH:0.53475 G1 X118.327 Y108.575 E6.7192 ; perimeter G1 X118.649 Y108.338 F9000 ; move inwards before travel G1 X118.447 Y108.005 ; move to first perimeter point G1 X121.017 Y107.951 ; move to first perimeter point G1 X121.496 Y108.228 ; move to first perimeter point G1 X121.84 Y108.565 ; move to first perimeter point G1 X121.745 Y108.662 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.432576 G1 F2250 G1 X121.897 Y108.901 E6.72266 ; perimeter ;WIDTH:0.474704 G1 X122.05 Y109.14 E6.7265 ; perimeter ;WIDTH:0.502218 G1 X122.153 Y109.426 E6.73088 ; perimeter ;WIDTH:0.529732 G1 X122.257 Y109.712 E6.73552 ; perimeter ;WIDTH:0.558436 G1 X122.381 Y110.393 E6.74671 ; perimeter ;WIDTH:0.565436 G1 X122.424 Y111.185 E6.7597 ; perimeter G1 X122.391 Y111.945 E6.77216 ; perimeter ;WIDTH:0.555306 G1 X122.289 Y112.611 E6.78298 ; perimeter ;WIDTH:0.532508 G1 X122.113 Y113.189 E6.79225 ; perimeter ;WIDTH:0.49562 G1 X121.981 Y113.434 E6.7962 ; perimeter ;WIDTH:0.467627 G1 X121.849 Y113.679 E6.79991 ; perimeter ;WIDTH:0.439634 G1 X121.705 Y113.842 E6.80262 ; perimeter G1 X121.801 Y113.936 F9000 ; move to first perimeter point G1 X119.807 Y114.691 ; move to first perimeter point G1 X117.686 Y113.796 ; move to first perimeter point G1 X117.654 Y113.737 ; move to first perimeter point G1 X117.769 Y113.674 ; move to first perimeter point ;WIDTH:0.428144 G1 F2250 G1 X117.513 Y113.171 E6.80944 ; perimeter ;WIDTH:0.477329 G1 X117.415 Y112.928 E6.81301 ; perimeter ;WIDTH:0.526514 G1 X117.316 Y112.686 E6.81697 ; perimeter G1 X117.219 Y111.997 E6.82752 ; perimeter ;WIDTH:0.530951 G1 X117.187 Y111.618 E6.83334 ; perimeter ;WIDTH:0.559864 G1 X117.154 Y111.238 E6.83952 ; perimeter G1 X117.186 Y110.503 E6.85144 ; perimeter ;WIDTH:0.554708 G1 X117.294 Y109.847 E6.86211 ; perimeter ;WIDTH:0.52903 G1 X117.48 Y109.269 E6.87136 ; perimeter ;WIDTH:0.486724 G1 X117.617 Y109.021 E6.8753 ; perimeter ;WIDTH:0.456459 G1 X117.754 Y108.773 E6.87897 ; perimeter ;WIDTH:0.426194 G1 X117.888 Y108.617 E6.88144 ; perimeter G1 X117.486 Y113.923 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X116.909 Y112.813 E6.89544 ; perimeter G1 X116.712 Y111.159 E6.91409 ; perimeter G1 X116.765 Y110.336 E6.92332 ; perimeter G1 X116.92 Y109.6 E6.93174 ; perimeter G1 X117.19 Y108.956 E6.93956 ; perimeter G1 X117.515 Y108.48 E6.94601 ; perimeter ;WIDTH:0.441054 G1 X117.668 Y108.37 E6.94836 ; perimeter ;WIDTH:0.482108 G1 X117.821 Y108.259 E6.95096 ; perimeter ;WIDTH:0.523162 G1 X117.973 Y108.149 E6.95378 ; perimeter G1 X118.421 Y107.9 E6.9615 ; perimeter ;WIDTH:0.518742 G1 X118.652 Y107.818 E6.96516 ; perimeter ;WIDTH:0.496196 G1 X119.209 Y107.683 E6.9733 ; perimeter ;WIDTH:0.474056 G1 X119.797 Y107.64 E6.98127 ; perimeter ;WIDTH:0.477571 G1 X120.437 Y107.699 E6.99003 ; perimeter ;WIDTH:0.501105 G1 X120.992 Y107.848 E6.99828 ; perimeter ;WIDTH:0.529435 G1 X121.46 Y108.08 E7.00625 ; perimeter G1 X121.625 Y108.181 E7.0092 ; perimeter ;WIDTH:0.488852 G1 X121.79 Y108.282 E7.0119 ; perimeter ;WIDTH:0.448269 G1 X121.954 Y108.383 E7.01435 ; perimeter ;WIDTH:0.407686 G1 X122.112 Y108.54 E7.0169 ; perimeter ;WIDTH:0.399999 G1 X122.461 Y109.091 E7.0242 ; perimeter G1 X122.692 Y109.735 E7.03186 ; perimeter G1 X122.822 Y110.459 E7.04009 ; perimeter G1 X122.865 Y111.237 E7.04881 ; perimeter G1 X122.812 Y112.125 E7.05877 ; perimeter G1 X122.662 Y112.883 E7.06742 ; perimeter G1 X122.41 Y113.513 E7.07502 ; perimeter G1 X122.084 Y113.984 E7.08143 ; perimeter ;WIDTH:0.437479 G1 X121.937 Y114.087 E7.08365 ; perimeter ;WIDTH:0.474958 G1 X121.789 Y114.19 E7.08609 ; perimeter ;WIDTH:0.512437 G1 X121.642 Y114.292 E7.08872 ; perimeter ;WIDTH:0.522117 G1 X121.188 Y114.52 E7.09635 ; perimeter G1 X120.929 Y114.606 E7.10045 ; perimeter ;WIDTH:0.495606 G1 X120.37 Y114.729 E7.10857 ; perimeter ;WIDTH:0.473786 G1 X119.746 Y114.763 E7.11701 ; perimeter ;WIDTH:0.468761 G1 X119.161 Y114.675 E7.12491 ; perimeter ;WIDTH:0.484182 G1 X118.81 Y114.601 E7.12987 ; perimeter ;WIDTH:0.517386 G1 X118.459 Y114.526 E7.13521 ; perimeter G1 X118.044 Y114.24 E7.14271 ; perimeter ;WIDTH:0.516089 G1 X117.858 Y114.134 E7.14589 ; perimeter ;WIDTH:0.477393 G1 X117.672 Y114.029 E7.1488 ; perimeter ;WIDTH:0.438696 G1 X117.538 Y113.953 E7.15071 ; perimeter G1 X117.328 Y113.612 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:4.8 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 23; ;LAYER:23 G1 E.65071 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z4.8 F9000 ; simple layer change G1 X117.531 Y113.507 ; travel to first layer point G1 X114.52 Y113.431 ; travel to first layer point G1 X114.252 Y113.414 ; travel to first layer point G1 X111.434 Y113.232 ; travel to first layer point G1 X111.167 Y113.215 ; travel to first layer point G1 X108.354 Y113.034 ; travel to first layer point G1 X106.999 Y114.493 ; travel to first layer point G1 X104.676 Y114.449 ; travel to first layer point G1 X103.285 Y112.707 ; travel to first layer point G1 X100.363 Y112.518 ; travel to first layer point G1 X93.675 Y112.551 ; travel to first layer point G1 X93.657 Y112.1 ; travel to first layer point G1 X93.792 Y112.095 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.59053 G1 F2250 G1 X93.787 Y111.986 E6.50187 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y108.184 E6.56601 ; perimeter G1 X93.787 Y116.443 F9000 ; move to first perimeter point G1 F2250 G1 X93.787 Y113.028 E6.62362 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.399111 G1 F2250 G1 X94.175 Y112.549 E6.62581 ; perimeter ;WIDTH:0.420375 G1 X94.028 Y112.641 E6.62786 ; perimeter ;WIDTH:0.460542 G1 X93.968 Y112.737 E6.62934 ; perimeter ;WIDTH:0.500709 G1 X93.908 Y112.834 E6.63098 ; perimeter ;WIDTH:0.540876 G1 X93.847 Y112.931 E6.63277 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y113.028 E6.63469 ; perimeter G1 X93.767 Y112.898 E6.63691 ; perimeter ;WIDTH:0.540876 G1 X93.747 Y112.767 E6.63898 ; perimeter ;WIDTH:0.500709 G1 X93.727 Y112.637 E6.64087 ; perimeter ;WIDTH:0.460542 G1 X93.707 Y112.507 E6.64259 ; perimeter ;WIDTH:0.462914 G1 X93.728 Y112.404 E6.64397 ; perimeter ;WIDTH:0.505453 G1 X93.749 Y112.301 E6.64549 ; perimeter ;WIDTH:0.547992 G1 X93.77 Y112.198 E6.64715 ; perimeter ;WIDTH:0.59053 G1 X93.792 Y112.095 E6.64896 ; perimeter G1 X93.851 Y112.164 E6.65052 ; perimeter ;WIDTH:0.547992 G1 X93.91 Y112.234 E6.65197 ; perimeter ;WIDTH:0.505453 G1 X93.969 Y112.303 E6.65329 ; perimeter ;WIDTH:0.462914 G1 X94.028 Y112.373 E6.6545 ; perimeter ;WIDTH:0.420375 G1 X94.175 Y112.465 E6.65655 ; perimeter ;WIDTH:0.399111 G1 X94.309 Y112.494 E6.65808 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.374822 G1 F2250 G1 X99.623 Y112.507 E6.71277 ; perimeter G1 X100.249 Y116.443 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y113.028 E6.77038 ; perimeter G1 X100.245 Y112.095 F9000 ; move to first perimeter point ;WIDTH:0.590528 G1 F2250 G1 X100.266 Y112.198 E6.77218 ; perimeter ;WIDTH:0.54799 G1 X100.287 Y112.301 E6.77384 ; perimeter ;WIDTH:0.505452 G1 X100.308 Y112.404 E6.77536 ; perimeter ;WIDTH:0.462914 G1 X100.33 Y112.507 E6.77675 ; perimeter ;WIDTH:0.460542 G1 X100.31 Y112.637 E6.77847 ; perimeter ;WIDTH:0.500708 G1 X100.29 Y112.767 E6.78036 ; perimeter ;WIDTH:0.540874 G1 X100.269 Y112.898 E6.78243 ; perimeter ;WIDTH:0.58104 G1 X100.249 Y113.028 E6.78465 ; perimeter G1 X100.189 Y112.931 E6.78657 ; perimeter ;WIDTH:0.540874 G1 X100.129 Y112.834 E6.78835 ; perimeter ;WIDTH:0.500708 G1 X100.068 Y112.737 E6.78999 ; perimeter ;WIDTH:0.460542 G1 X100.008 Y112.641 E6.79147 ; perimeter ;WIDTH:0.420375 G1 X99.862 Y112.547 E6.79352 ; perimeter ;WIDTH:0.402898 G1 X99.623 Y112.507 E6.79625 ; perimeter G1 X99.862 Y112.467 E6.79898 ; perimeter ;WIDTH:0.420375 G1 X100.008 Y112.373 E6.80103 ; perimeter ;WIDTH:0.462914 G1 X100.067 Y112.303 E6.80224 ; perimeter ;WIDTH:0.505452 G1 X100.126 Y112.234 E6.80356 ; perimeter ;WIDTH:0.54799 G1 X100.185 Y112.164 E6.80501 ; perimeter ;WIDTH:0.590528 G1 X100.206 Y112.14 E6.80556 ; perimeter G1 X100.249 Y108.184 F9000 ; move to first perimeter point ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y111.986 E6.8697 ; perimeter ;WIDTH:0.590528 G1 X100.245 Y112.095 E6.87157 ; perimeter G1 X99.752 Y112.907 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F1500 G1 X99.749 Y112.901 E6.87165 ; perimeter G1 X99.623 Y112.849 E6.87318 ; perimeter G1 X94.413 Y112.849 E6.9315 ; perimeter G1 X94.334 Y112.868 E6.93241 ; perimeter G1 X94.235 Y113.028 E6.93452 ; perimeter G1 X94.235 Y116.891 E6.97777 ; perimeter G1 X93.339 Y116.891 E6.9878 ; perimeter G1 X93.339 Y107.736 E7.09029 ; perimeter G1 X94.235 Y107.736 E7.10032 ; perimeter G1 X94.235 Y111.986 E7.1479 ; perimeter G1 X94.287 Y112.112 E7.14943 ; perimeter G1 X94.413 Y112.164 E7.15096 ; perimeter G1 X99.623 Y112.164 E7.20928 ; perimeter G1 X99.749 Y112.112 E7.21081 ; perimeter G1 X99.802 Y111.986 E7.21234 ; perimeter G1 X99.802 Y107.736 E7.25992 ; perimeter G1 X100.697 Y107.736 E7.26994 ; perimeter G1 X100.697 Y108.184 E7.27496 ; perimeter G1 X100.697 Y116.891 E7.37243 ; perimeter G1 X99.802 Y116.891 E7.38245 ; perimeter G1 X99.802 Y113.028 E7.4257 ; perimeter G1 X99.775 Y112.963 E7.42649 ; perimeter G1 X99.389 Y112.856 F9000 ; move inwards before travel G1 E.92649 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.389 Y112.641 F9000 ; move to first perimeter point G1 X100.364 Y112.61 ; move to first perimeter point G1 X103.158 Y111.905 ; move to first perimeter point G1 X103.764 Y111.549 ; move to first perimeter point G1 X103.764 Y111.752 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.438366 G1 F2250 G1 X103.787 Y111.694 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.839 Y111.666 E6.50155 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.638 E6.50239 ; perimeter G1 X107.9 Y111.638 E6.55849 ; perimeter G1 X107.979 Y111.709 E6.55998 ; perimeter ;WIDTH:0.44468 G1 X108.059 Y111.779 E6.56132 ; perimeter ;WIDTH:0.399999 G1 X108.077 Y111.886 E6.56253 ; perimeter G1 X107.998 Y112.452 E6.56893 ; perimeter G1 X107.87 Y112.939 E6.57457 ; perimeter G1 X107.612 Y113.463 E6.58111 ; perimeter ;WIDTH:0.438032 G1 X107.56 Y113.565 E6.58253 ; perimeter ;WIDTH:0.476065 G1 X107.507 Y113.666 E6.58408 ; perimeter ;WIDTH:0.514097 G1 X107.455 Y113.768 E6.58577 ; perimeter G1 X107.016 Y114.094 E6.59385 ; perimeter ;WIDTH:0.510783 G1 X106.752 Y114.198 E6.59801 ; perimeter ;WIDTH:0.46551 G1 X106.332 Y114.297 E6.60373 ; perimeter ;WIDTH:0.470099 G1 X105.863 Y114.341 E6.61004 ; perimeter ;WIDTH:0.486022 G1 X105.303 Y114.277 E6.61787 ; perimeter ;WIDTH:0.516688 G1 X104.807 Y114.098 E6.6257 ; perimeter ;WIDTH:0.547116 G1 X104.45 Y113.863 E6.63246 ; perimeter G1 X104.391 Y113.766 E6.63425 ; perimeter ;WIDTH:0.498077 G1 X104.331 Y113.67 E6.63587 ; perimeter ;WIDTH:0.449038 G1 X104.272 Y113.574 E6.6373 ; perimeter ;WIDTH:0.399999 G1 X104.063 Y113.273 E6.6414 ; perimeter G1 X103.882 Y112.86 E6.64645 ; perimeter G1 X103.767 Y112.396 E6.6518 ; perimeter G1 X103.714 Y111.88 E6.65761 ; perimeter ;WIDTH:0.438366 G1 X103.742 Y111.808 E6.65857 ; perimeter G1 X104.105 Y111.641 F9000 ; move inwards before travel G1 X104.105 Y111.281 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X107.888 Y113.882 ; move to first perimeter point G1 X105.661 Y114.673 ; move to first perimeter point G1 X103.984 Y113.965 ; move to first perimeter point G1 X103.891 Y113.866 ; move to first perimeter point G1 X103.99 Y113.773 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.415434 G1 F2250 G1 X103.73 Y113.422 E6.66367 ; perimeter ;WIDTH:0.458638 G1 X103.507 Y112.955 E6.67041 ; perimeter ;WIDTH:0.497754 G1 X103.363 Y112.437 E6.67808 ; perimeter ;WIDTH:0.538968 G1 X103.29 Y111.923 E6.68615 ; perimeter ;WIDTH:0.584825 G1 X103.305 Y111.798 E6.68829 ; perimeter ;WIDTH:0.630681 G1 X103.32 Y111.673 E6.69061 ; perimeter ;WIDTH:0.676538 G1 X103.335 Y111.548 E6.69311 ; perimeter ;WIDTH:0.722394 G1 X103.35 Y111.422 E6.69581 ; perimeter G1 X103.322 Y111.337 E6.69772 ; perimeter ;WIDTH:0.676009 G1 X103.293 Y111.251 E6.69952 ; perimeter ;WIDTH:0.629624 G1 X103.282 Y111.093 E6.70243 ; perimeter ;WIDTH:0.588434 G1 X103.271 Y110.935 E6.70514 ; perimeter ;WIDTH:0.547244 G1 X103.327 Y110.24 E6.71616 ; perimeter ;WIDTH:0.520874 G1 X103.437 Y109.703 E6.72437 ; perimeter ;WIDTH:0.502432 G1 X103.638 Y109.175 E6.73251 ; perimeter ;WIDTH:0.471914 G1 X103.905 Y108.751 E6.73925 ; perimeter ;WIDTH:0.43226 G1 X104.067 Y108.577 E6.74215 ; perimeter G1 X103.974 Y108.48 F9000 ; move to first perimeter point G1 X103.137 Y110.925 ; move to first perimeter point G1 X103.816 Y113.787 ; move to first perimeter point G1 X105.897 Y114.69 ; move to first perimeter point G1 X107.983 Y113.787 ; move to first perimeter point G1 X108.601 Y111.713 ; move to first perimeter point G1 X108.593 Y111.571 ; move to first perimeter point G1 X108.443 Y111.58 ; move to first perimeter point ;WIDTH:0.552284 G1 F2250 G1 X108.447 Y111.7 E6.74407 ; perimeter ;WIDTH:0.517229 G1 X108.451 Y111.819 E6.74584 ; perimeter ;WIDTH:0.482174 G1 X108.454 Y111.938 E6.74748 ; perimeter ;WIDTH:0.458506 G1 X108.381 Y112.505 E6.75493 ; perimeter G1 X108.296 Y112.768 E6.75853 ; perimeter ;WIDTH:0.424892 G1 X108.211 Y113.03 E6.76183 ; perimeter ;WIDTH:0.391278 G1 X107.996 Y113.491 E6.76739 ; perimeter ;WIDTH:0.385752 G1 X107.896 Y113.668 E6.76958 ; perimeter G1 X108.013 Y113.736 F9000 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X104.17 Y111.281 ; move to first perimeter point G1 X103.754 Y111.281 ; move to first perimeter point G1 X103.754 Y111.082 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.438366 G1 F2250 G1 X103.779 Y111.139 E6.77035 ; perimeter ;WIDTH:0.463863 G1 X103.835 Y111.165 E6.77116 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.192 E6.77204 ; perimeter G1 X107.9 Y111.192 E6.82814 ; perimeter G1 X108.416 Y111.169 E6.83537 ; perimeter ;WIDTH:0.44468 G1 X108.931 Y111.147 E6.84186 ; perimeter ;WIDTH:0.399999 G1 X108.74 Y112.758 E6.86002 ; perimeter G1 X108.171 Y113.901 E6.87431 ; perimeter ;WIDTH:0.438032 G1 X108.03 Y113.98 E6.87631 ; perimeter ;WIDTH:0.476065 G1 X107.888 Y114.059 E6.87852 ; perimeter ;WIDTH:0.514097 G1 X107.747 Y114.138 E6.88091 ; perimeter G1 X107.26 Y114.492 E6.8898 ; perimeter ;WIDTH:0.510783 G1 X106.878 Y114.604 E6.89564 ; perimeter ;WIDTH:0.467891 G1 X106.382 Y114.699 E6.90237 ; perimeter ;WIDTH:0.470099 G1 X105.827 Y114.767 E6.90986 ; perimeter ;WIDTH:0.486022 G1 X105.18 Y114.702 E6.91889 ; perimeter ;WIDTH:0.516688 G1 X104.578 Y114.513 E6.92826 ; perimeter ;WIDTH:0.537825 G1 X103.924 Y114.116 E6.94013 ; perimeter ;WIDTH:0.491883 G1 X103.773 Y114.011 E6.94272 ; perimeter ;WIDTH:0.445941 G1 X103.622 Y113.906 E6.94504 ; perimeter ;WIDTH:0.399999 G1 X103.275 Y113.405 E6.95186 ; perimeter G1 X103.025 Y112.798 E6.95921 ; perimeter G1 X102.872 Y112.081 E6.96742 ; perimeter G1 X102.82 Y111.252 E6.97672 ; perimeter G1 X102.872 Y110.381 E6.98649 ; perimeter G1 X103.025 Y109.633 E6.99504 ; perimeter G1 X103.276 Y109.009 E7.00257 ; perimeter G1 X103.597 Y108.54 E7.00893 ; perimeter G1 X103.833 Y108.315 E7.01258 ; perimeter ;WIDTH:0.445318 G1 X103.999 Y108.225 E7.01496 ; perimeter ;WIDTH:0.490637 G1 X104.164 Y108.135 E7.0176 ; perimeter ;WIDTH:0.535955 G1 X104.801 Y107.827 E7.02854 ; perimeter ;WIDTH:0.504491 G1 X105.346 Y107.691 E7.03667 ; perimeter ;WIDTH:0.483773 G1 X105.898 Y107.644 E7.04433 ; perimeter ;WIDTH:0.477721 G1 X106.411 Y107.683 E7.05134 ; perimeter ;WIDTH:0.503347 G1 X106.922 Y107.753 E7.05879 ; perimeter G1 X107.265 Y107.869 E7.06402 ; perimeter ;WIDTH:0.535372 G1 X107.758 Y108.095 E7.07239 ; perimeter ;WIDTH:0.559025 G1 X108.253 Y108.529 E7.08304 ; perimeter ;WIDTH:0.559465 G1 X108.52 Y108.965 E7.09132 ; perimeter G1 X108.007 Y109.111 E7.09996 ; perimeter G1 X107.832 Y108.821 E7.10545 ; perimeter ;WIDTH:0.547078 G1 X107.434 Y108.466 E7.11388 ; perimeter ;WIDTH:0.535372 G1 X107.026 Y108.258 E7.12095 ; perimeter ;WIDTH:0.492291 G1 X106.416 Y108.113 E7.12978 ; perimeter ;WIDTH:0.476991 G1 X105.963 Y108.078 E7.13596 ; perimeter ;WIDTH:0.480471 G1 X105.454 Y108.12 E7.14297 ; perimeter ;WIDTH:0.501173 G1 X104.989 Y108.249 E7.1499 ; perimeter ;WIDTH:0.539253 G1 X104.549 Y108.488 E7.15769 ; perimeter G1 X104.451 Y108.624 E7.1603 ; perimeter ;WIDTH:0.492835 G1 X104.352 Y108.76 E7.16267 ; perimeter ;WIDTH:0.446417 G1 X104.254 Y108.895 E7.16478 ; perimeter ;WIDTH:0.399999 G1 X104 Y109.332 E7.17044 ; perimeter G1 X103.829 Y109.829 E7.17632 ; perimeter G1 X103.735 Y110.34 E7.18214 ; perimeter G1 X103.701 Y110.959 E7.18908 ; perimeter ;WIDTH:0.438366 G1 X103.73 Y111.027 E7.19 ; perimeter G1 X104.096 Y111.188 F9000 ; move inwards before travel G1 E.69 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.096 Y111.281 F9000 ; move to first perimeter point G1 X108.583 Y111.402 ; move to first perimeter point G1 X107.888 Y113.882 ; move to first perimeter point G1 X107.672 Y114.067 ; move to first perimeter point G1 X111.301 Y117.064 ; move to first perimeter point G1 X111.301 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506442 G1 F2250 G1 X111.301 Y108.146 E6.62851 ; perimeter G1 X111.711 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X111.711 Y108.146 E6.6331 ; perimeter G1 X111.711 Y117.4 E6.7367 ; perimeter G1 X110.89 Y117.4 E6.74589 ; perimeter G1 X110.89 Y107.736 E6.85408 ; perimeter G1 X111.651 Y107.736 E6.8626 ; perimeter G1 X111.71 Y108.132 F9000 ; move inwards before travel G1 E.3626 F1500 ; retract G92 E0 ; reset extrusion distance G1 X111.42 Y108.168 F9000 ; move to first perimeter point G1 X114.252 Y108.282 ; move to first perimeter point G1 X114.52 Y108.298 ; move to first perimeter point G1 X117.819 Y108.493 ; move to first perimeter point G1 X118.291 Y108.419 ; move to first perimeter point G1 X118.359 Y108.525 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.534749 G1 F2250 G1 X118.379 Y108.493 E6.50058 ; perimeter G1 X118.791 Y108.249 E6.50796 ; perimeter ;WIDTH:0.495942 G1 X119.294 Y108.108 E6.51538 ; perimeter ;WIDTH:0.473692 G1 X119.762 Y108.067 E6.52172 ; perimeter ;WIDTH:0.473837 G1 X120.276 Y108.111 E6.52869 ; perimeter ;WIDTH:0.490979 G1 X120.76 Y108.245 E6.53574 ; perimeter ;WIDTH:0.529435 G1 X121.2 Y108.489 E6.54341 ; perimeter G1 X121.289 Y108.617 E6.54579 ; perimeter ;WIDTH:0.488852 G1 X121.378 Y108.746 E6.54798 ; perimeter ;WIDTH:0.448269 G1 X121.468 Y108.874 E6.54997 ; perimeter ;WIDTH:0.407686 G1 X121.699 Y109.32 E6.55571 ; perimeter ;WIDTH:0.399999 G1 X121.852 Y109.831 E6.56168 ; perimeter G1 X121.949 Y110.456 E6.56876 ; perimeter G1 X121.985 Y111.204 E6.57714 ; perimeter G1 X121.956 Y111.928 E6.58525 ; perimeter G1 X121.87 Y112.552 E6.5923 ; perimeter G1 X121.723 Y113.079 E6.59842 ; perimeter G1 X121.486 Y113.549 E6.60431 ; perimeter ;WIDTH:0.445292 G1 X121.396 Y113.681 E6.60633 ; perimeter ;WIDTH:0.490585 G1 X121.306 Y113.813 E6.60857 ; perimeter ;WIDTH:0.535877 G1 X121.216 Y113.945 E6.61104 ; perimeter G1 X120.805 Y114.171 E6.61829 ; perimeter ;WIDTH:0.495606 G1 X120.335 Y114.3 E6.62521 ; perimeter ;WIDTH:0.473786 G1 X119.834 Y114.342 E6.632 ; perimeter ;WIDTH:0.470433 G1 X119.298 Y114.287 E6.63922 ; perimeter ;WIDTH:0.497375 G1 X118.766 Y114.144 E6.64707 ; perimeter ;WIDTH:0.516089 G1 X118.355 Y113.887 E6.65426 ; perimeter G1 X118.268 Y113.758 E6.65657 ; perimeter ;WIDTH:0.477393 G1 X118.18 Y113.629 E6.6587 ; perimeter ;WIDTH:0.438696 G1 X118.093 Y113.5 E6.66063 ; perimeter ;WIDTH:0.399999 G1 X117.869 Y113.064 E6.66612 ; perimeter G1 X117.718 Y112.562 E6.67199 ; perimeter G1 X117.623 Y111.937 E6.67907 ; perimeter G1 X117.591 Y111.219 E6.68712 ; perimeter G1 X117.62 Y110.521 E6.69494 ; perimeter G1 X117.711 Y109.91 E6.70186 ; perimeter G1 X117.864 Y109.383 E6.708 ; perimeter G1 X118.088 Y108.932 E6.71364 ; perimeter G1 X118.158 Y108.845 E6.71489 ; perimeter ;WIDTH:0.444916 G1 X118.231 Y108.727 E6.71664 ; perimeter ;WIDTH:0.489833 G1 X118.305 Y108.61 E6.71858 ; perimeter ;WIDTH:0.534749 G1 X118.327 Y108.575 E6.71922 ; perimeter G1 X118.649 Y108.339 F9000 ; move inwards before travel G1 X118.446 Y108.006 ; move to first perimeter point G1 X121.023 Y107.955 ; move to first perimeter point G1 X121.704 Y108.43 ; move to first perimeter point G1 X121.84 Y108.566 ; move to first perimeter point G1 X121.745 Y108.662 ; move to first perimeter point ;TYPE:Perimeter ;WIDTH:0.432576 G1 F2250 G1 X121.897 Y108.901 E6.72268 ; perimeter ;WIDTH:0.474704 G1 X122.05 Y109.14 E6.72652 ; perimeter ;WIDTH:0.502217 G1 X122.153 Y109.426 E6.7309 ; perimeter ;WIDTH:0.52973 G1 X122.257 Y109.712 E6.73554 ; perimeter ;WIDTH:0.558436 G1 X122.381 Y110.393 E6.74673 ; perimeter ;WIDTH:0.565436 G1 X122.424 Y111.185 E6.75972 ; perimeter G1 X122.391 Y111.945 E6.77218 ; perimeter ;WIDTH:0.555306 G1 X122.289 Y112.611 E6.783 ; perimeter ;WIDTH:0.532508 G1 X122.113 Y113.189 E6.79227 ; perimeter ;WIDTH:0.495618 G1 X121.981 Y113.434 E6.79622 ; perimeter ;WIDTH:0.467626 G1 X121.849 Y113.679 E6.79993 ; perimeter ;WIDTH:0.439634 G1 X121.705 Y113.842 E6.80264 ; perimeter G1 X121.802 Y113.937 F9000 ; move to first perimeter point G1 X119.809 Y114.691 ; move to first perimeter point G1 X117.686 Y113.798 ; move to first perimeter point G1 X117.654 Y113.741 ; move to first perimeter point G1 X117.651 Y113.735 ; move to first perimeter point G1 X117.769 Y113.674 ; move to first perimeter point ;WIDTH:0.428146 G1 F2250 G1 X117.513 Y113.171 E6.80946 ; perimeter ;WIDTH:0.47733 G1 X117.415 Y112.928 E6.81303 ; perimeter ;WIDTH:0.526514 G1 X117.316 Y112.686 E6.81699 ; perimeter G1 X117.219 Y111.997 E6.82754 ; perimeter ;WIDTH:0.530951 G1 X117.187 Y111.618 E6.83336 ; perimeter ;WIDTH:0.559864 G1 X117.154 Y111.238 E6.83954 ; perimeter G1 X117.186 Y110.503 E6.85146 ; perimeter ;WIDTH:0.554708 G1 X117.294 Y109.847 E6.86213 ; perimeter ;WIDTH:0.52903 G1 X117.48 Y109.269 E6.87138 ; perimeter ;WIDTH:0.486724 G1 X117.617 Y109.021 E6.87532 ; perimeter ;WIDTH:0.456459 G1 X117.754 Y108.773 E6.87899 ; perimeter ;WIDTH:0.426194 G1 X117.888 Y108.617 E6.88146 ; perimeter G1 X117.486 Y113.923 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X116.909 Y112.813 E6.89546 ; perimeter G1 X116.712 Y111.159 E6.91411 ; perimeter G1 X116.765 Y110.336 E6.92334 ; perimeter G1 X116.92 Y109.6 E6.93176 ; perimeter G1 X117.19 Y108.956 E6.93958 ; perimeter G1 X117.515 Y108.48 E6.94603 ; perimeter ;WIDTH:0.441054 G1 X117.668 Y108.37 E6.94838 ; perimeter ;WIDTH:0.482109 G1 X117.821 Y108.259 E6.95098 ; perimeter ;WIDTH:0.523163 G1 X117.973 Y108.149 E6.9538 ; perimeter G1 X118.421 Y107.9 E6.96152 ; perimeter ;WIDTH:0.518742 G1 X118.662 Y107.815 E6.96533 ; perimeter ;WIDTH:0.495942 G1 X119.256 Y107.679 E6.97398 ; perimeter ;WIDTH:0.473692 G1 X119.797 Y107.64 E6.98131 ; perimeter ;WIDTH:0.480229 G1 X120.45 Y107.698 E6.9903 ; perimeter ;WIDTH:0.501561 G1 X120.994 Y107.848 E6.99841 ; perimeter ;WIDTH:0.529435 G1 X121.625 Y108.181 E7.00929 ; perimeter ;WIDTH:0.488852 G1 X121.79 Y108.282 E7.01199 ; perimeter ;WIDTH:0.448269 G1 X121.954 Y108.383 E7.01444 ; perimeter ;WIDTH:0.407686 G1 X122.112 Y108.54 E7.01699 ; perimeter ;WIDTH:0.399999 G1 X122.461 Y109.091 E7.02429 ; perimeter G1 X122.692 Y109.735 E7.03195 ; perimeter G1 X122.822 Y110.459 E7.04018 ; perimeter G1 X122.865 Y111.237 E7.0489 ; perimeter G1 X122.812 Y112.125 E7.05886 ; perimeter G1 X122.662 Y112.883 E7.06751 ; perimeter G1 X122.41 Y113.513 E7.07511 ; perimeter G1 X122.084 Y113.984 E7.08152 ; perimeter ;WIDTH:0.437479 G1 X121.937 Y114.087 E7.08374 ; perimeter ;WIDTH:0.474958 G1 X121.789 Y114.19 E7.08618 ; perimeter ;WIDTH:0.512437 G1 X121.642 Y114.292 E7.08881 ; perimeter ;WIDTH:0.52212 G1 X121.188 Y114.52 E7.09644 ; perimeter G1 X120.929 Y114.606 E7.10054 ; perimeter ;WIDTH:0.495606 G1 X120.37 Y114.729 E7.10866 ; perimeter ;WIDTH:0.473786 G1 X119.746 Y114.763 E7.1171 ; perimeter ;WIDTH:0.468761 G1 X119.161 Y114.675 E7.125 ; perimeter ;WIDTH:0.484181 G1 X118.81 Y114.601 E7.12996 ; perimeter ;WIDTH:0.517386 G1 X118.459 Y114.526 E7.1353 ; perimeter G1 X118.044 Y114.24 E7.1428 ; perimeter ;WIDTH:0.516089 G1 X117.858 Y114.134 E7.14598 ; perimeter ;WIDTH:0.477393 G1 X117.672 Y114.029 E7.14889 ; perimeter ;WIDTH:0.438696 G1 X117.538 Y113.953 E7.1508 ; perimeter G1 X117.328 Y113.612 F9000 ; move inwards before travel G1 E.6508 F1500 ; retract G92 E0 ; reset extrusion distance G1 X117.531 Y113.507 F9000 ; move to first perimeter point G1 X114.386 Y117.064 ; move to first perimeter point G1 X114.386 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.50644 G1 F2250 G1 X114.386 Y108.146 E6.6285 ; perimeter G1 X114.797 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X114.797 Y108.146 E6.63309 ; perimeter G1 X114.797 Y117.4 E6.73669 ; perimeter G1 X113.976 Y117.4 E6.74588 ; perimeter G1 X113.976 Y107.736 E6.85407 ; perimeter G1 X114.737 Y107.736 E6.86259 ; perimeter G1 X114.796 Y108.132 F9000 ; move inwards before travel ;LAYER_CHANGE ;Z:5 ;HEIGHT:0.2 ;BEFORE_LAYER_CHANGE ;M117 Layer 24; ;LAYER:24 G1 E.36259 F1500 ; retract G92 E0 ; reset extrusion distance G1 Z5 F9000 ; simple layer change G1 X114.506 Y108.168 ; travel to first layer point G1 X114.258 Y108.233 ; travel to first layer point G1 X111.434 Y108.766 ; travel to first layer point G1 X111.167 Y108.816 ; travel to first layer point G1 X103.458 Y110.271 ; travel to first layer point G1 X103.179 Y110.323 ; travel to first layer point G1 X100.383 Y110.851 ; travel to first layer point G1 X100.01 Y112.373 ; travel to first layer point G1 X94.026 Y112.373 ; travel to first layer point G1 X93.656 Y112.076 ; travel to first layer point G1 X93.657 Y112.1 ; travel to first layer point G1 X93.792 Y112.095 ; travel to first layer point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.59053 G1 F2250 G1 X93.787 Y111.986 E6.50187 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y108.184 E6.56601 ; perimeter G1 E.06601 F1500 ; retract G92 E0 ; reset extrusion distance G1 X93.787 Y116.443 F9000 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract G1 F2250 G1 X93.787 Y113.028 E6.55761 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.399111 G1 F2250 G1 X94.175 Y112.549 E6.5598 ; perimeter ;WIDTH:0.420375 G1 X94.028 Y112.641 E6.56185 ; perimeter ;WIDTH:0.460542 G1 X93.968 Y112.737 E6.56333 ; perimeter ;WIDTH:0.500709 G1 X93.908 Y112.834 E6.56497 ; perimeter ;WIDTH:0.540876 G1 X93.847 Y112.931 E6.56676 ; perimeter ;WIDTH:0.581042 G1 X93.787 Y113.028 E6.56868 ; perimeter G1 X93.767 Y112.898 E6.5709 ; perimeter ;WIDTH:0.540876 G1 X93.747 Y112.767 E6.57297 ; perimeter ;WIDTH:0.500709 G1 X93.727 Y112.637 E6.57486 ; perimeter ;WIDTH:0.460542 G1 X93.707 Y112.507 E6.57658 ; perimeter ;WIDTH:0.462914 G1 X93.728 Y112.404 E6.57796 ; perimeter ;WIDTH:0.505453 G1 X93.749 Y112.301 E6.57948 ; perimeter ;WIDTH:0.547992 G1 X93.77 Y112.198 E6.58114 ; perimeter ;WIDTH:0.59053 G1 X93.792 Y112.095 E6.58295 ; perimeter G1 X93.851 Y112.164 E6.58451 ; perimeter ;WIDTH:0.547992 G1 X93.91 Y112.234 E6.58596 ; perimeter ;WIDTH:0.505453 G1 X93.969 Y112.303 E6.58728 ; perimeter ;WIDTH:0.462914 G1 X94.028 Y112.373 E6.58849 ; perimeter ;WIDTH:0.420375 G1 X94.175 Y112.465 E6.59054 ; perimeter ;WIDTH:0.399111 G1 X94.309 Y112.494 E6.59207 ; perimeter G1 X94.367 Y112.507 F9000 ; move to first perimeter point ;WIDTH:0.374822 G1 F2250 G1 X99.623 Y112.507 E6.64676 ; perimeter G1 E.14676 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.623 Y112.641 F9000 ; move to first perimeter point G1 X100.01 Y112.641 ; move to first perimeter point G1 X100.116 Y113.317 ; move to first perimeter point G1 X100.124 Y116.555 ; move to first perimeter point G1 X100.249 Y116.555 ; move to first perimeter point G1 X100.249 Y116.443 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y113.028 E6.55761 ; perimeter G1 X100.245 Y112.095 F9000 ; move to first perimeter point ;WIDTH:0.590528 G1 F2250 G1 X100.266 Y112.198 E6.55941 ; perimeter ;WIDTH:0.54799 G1 X100.287 Y112.301 E6.56107 ; perimeter ;WIDTH:0.505452 G1 X100.308 Y112.404 E6.56259 ; perimeter ;WIDTH:0.462914 G1 X100.33 Y112.507 E6.56398 ; perimeter ;WIDTH:0.460542 G1 X100.31 Y112.637 E6.5657 ; perimeter ;WIDTH:0.500708 G1 X100.29 Y112.767 E6.56759 ; perimeter ;WIDTH:0.540874 G1 X100.269 Y112.898 E6.56966 ; perimeter ;WIDTH:0.58104 G1 X100.249 Y113.028 E6.57188 ; perimeter G1 X100.189 Y112.931 E6.5738 ; perimeter ;WIDTH:0.540874 G1 X100.129 Y112.834 E6.57558 ; perimeter ;WIDTH:0.500708 G1 X100.068 Y112.737 E6.57722 ; perimeter ;WIDTH:0.460542 G1 X100.008 Y112.641 E6.5787 ; perimeter ;WIDTH:0.420375 G1 X99.862 Y112.547 E6.58075 ; perimeter ;WIDTH:0.402898 G1 X99.623 Y112.507 E6.58348 ; perimeter G1 X99.862 Y112.467 E6.58621 ; perimeter ;WIDTH:0.420375 G1 X100.008 Y112.373 E6.58826 ; perimeter ;WIDTH:0.462914 G1 X100.067 Y112.303 E6.58947 ; perimeter ;WIDTH:0.505452 G1 X100.126 Y112.234 E6.59079 ; perimeter ;WIDTH:0.54799 G1 X100.185 Y112.164 E6.59224 ; perimeter ;WIDTH:0.590528 G1 X100.206 Y112.14 E6.59279 ; perimeter G1 E.09279 F1500 ; retract G92 E0 ; reset extrusion distance G1 X100.249 Y108.184 F9000 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.58104 G1 F2250 G1 X100.249 Y111.986 E6.56414 ; perimeter ;WIDTH:0.590528 G1 X100.245 Y112.095 E6.56601 ; perimeter G1 X99.752 Y112.907 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F1500 G1 X99.749 Y112.901 E6.56609 ; perimeter G1 X99.623 Y112.849 E6.56762 ; perimeter G1 X94.413 Y112.849 E6.62594 ; perimeter G1 X94.334 Y112.868 E6.62685 ; perimeter G1 X94.235 Y113.028 E6.62896 ; perimeter G1 X94.235 Y116.891 E6.67221 ; perimeter G1 X93.339 Y116.891 E6.68224 ; perimeter G1 X93.339 Y107.736 E6.78473 ; perimeter G1 X94.235 Y107.736 E6.79476 ; perimeter G1 X94.235 Y111.986 E6.84234 ; perimeter G1 X94.287 Y112.112 E6.84387 ; perimeter G1 X94.413 Y112.164 E6.8454 ; perimeter G1 X99.623 Y112.164 E6.90372 ; perimeter G1 X99.749 Y112.112 E6.90525 ; perimeter G1 X99.802 Y111.986 E6.90678 ; perimeter G1 X99.802 Y107.736 E6.95436 ; perimeter G1 X100.697 Y107.736 E6.96438 ; perimeter G1 X100.697 Y108.184 E6.9694 ; perimeter G1 X100.697 Y116.891 E7.06687 ; perimeter G1 X99.802 Y116.891 E7.07689 ; perimeter G1 X99.802 Y113.028 E7.12014 ; perimeter G1 X99.775 Y112.963 E7.12093 ; perimeter G1 X99.389 Y112.856 F9000 ; move inwards before travel G1 E.62093 F1500 ; retract G92 E0 ; reset extrusion distance G1 X99.389 Y112.641 F9000 ; move to first perimeter point G1 X100.364 Y112.61 ; move to first perimeter point G1 X103.158 Y111.905 ; move to first perimeter point G1 X103.764 Y111.549 ; move to first perimeter point G1 X103.764 Y111.752 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.438366 G1 F2250 G1 X103.787 Y111.694 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.839 Y111.666 E6.50155 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.638 E6.50239 ; perimeter G1 X107.9 Y111.638 E6.55849 ; perimeter G1 X107.979 Y111.709 E6.55998 ; perimeter ;WIDTH:0.44468 G1 X108.059 Y111.779 E6.56132 ; perimeter ;WIDTH:0.399999 G1 X108.077 Y111.886 E6.56253 ; perimeter G1 X107.998 Y112.452 E6.56893 ; perimeter G1 X107.87 Y112.939 E6.57457 ; perimeter G1 X107.612 Y113.463 E6.58111 ; perimeter ;WIDTH:0.438032 G1 X107.56 Y113.565 E6.58253 ; perimeter ;WIDTH:0.476065 G1 X107.507 Y113.666 E6.58408 ; perimeter ;WIDTH:0.514097 G1 X107.455 Y113.768 E6.58577 ; perimeter G1 X107.016 Y114.094 E6.59385 ; perimeter ;WIDTH:0.510783 G1 X106.752 Y114.198 E6.59801 ; perimeter ;WIDTH:0.46551 G1 X106.332 Y114.297 E6.60373 ; perimeter ;WIDTH:0.4701 G1 X105.863 Y114.341 E6.61004 ; perimeter ;WIDTH:0.486022 G1 X105.303 Y114.277 E6.61787 ; perimeter ;WIDTH:0.516688 G1 X104.807 Y114.098 E6.6257 ; perimeter ;WIDTH:0.547117 G1 X104.45 Y113.863 E6.63246 ; perimeter G1 X104.391 Y113.766 E6.63425 ; perimeter ;WIDTH:0.498078 G1 X104.331 Y113.67 E6.63587 ; perimeter ;WIDTH:0.449039 G1 X104.272 Y113.574 E6.6373 ; perimeter ;WIDTH:0.399999 G1 X104.063 Y113.273 E6.6414 ; perimeter G1 X103.882 Y112.86 E6.64645 ; perimeter G1 X103.767 Y112.396 E6.6518 ; perimeter G1 X103.714 Y111.88 E6.65761 ; perimeter ;WIDTH:0.438366 G1 X103.742 Y111.808 E6.65857 ; perimeter G1 X104.105 Y111.641 F9000 ; move inwards before travel G1 E.15857 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.105 Y111.281 F9000 ; move to first perimeter point G1 X108.586 Y111.402 ; move to first perimeter point G1 X107.888 Y113.882 ; move to first perimeter point G1 X105.661 Y114.673 ; move to first perimeter point G1 X103.953 Y113.936 ; move to first perimeter point G1 X103.889 Y113.866 ; move to first perimeter point G1 X103.99 Y113.773 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.415434 G1 F2250 G1 X103.73 Y113.422 E6.5051 ; perimeter ;WIDTH:0.458638 G1 X103.507 Y112.955 E6.51184 ; perimeter ;WIDTH:0.497754 G1 X103.363 Y112.437 E6.51951 ; perimeter ;WIDTH:0.538968 G1 X103.29 Y111.923 E6.52758 ; perimeter ;WIDTH:0.584825 G1 X103.305 Y111.798 E6.52972 ; perimeter ;WIDTH:0.630681 G1 X103.32 Y111.673 E6.53204 ; perimeter ;WIDTH:0.676538 G1 X103.335 Y111.548 E6.53454 ; perimeter ;WIDTH:0.722394 G1 X103.35 Y111.422 E6.53724 ; perimeter G1 X103.322 Y111.337 E6.53915 ; perimeter ;WIDTH:0.676009 G1 X103.293 Y111.251 E6.54095 ; perimeter ;WIDTH:0.629624 G1 X103.282 Y111.093 E6.54386 ; perimeter ;WIDTH:0.588435 G1 X103.271 Y110.935 E6.54657 ; perimeter ;WIDTH:0.547246 G1 X103.327 Y110.24 E6.55759 ; perimeter ;WIDTH:0.520872 G1 X103.437 Y109.703 E6.5658 ; perimeter ;WIDTH:0.502432 G1 X103.638 Y109.175 E6.57394 ; perimeter ;WIDTH:0.471916 G1 X103.905 Y108.751 E6.58068 ; perimeter ;WIDTH:0.432262 G1 X104.067 Y108.577 E6.58358 ; perimeter G1 E.08358 F1500 ; retract G92 E0 ; reset extrusion distance G1 X103.974 Y108.48 F9000 ; move to first perimeter point G1 X103.135 Y110.984 ; move to first perimeter point G1 X103.815 Y113.785 ; move to first perimeter point G1 X105.899 Y114.691 ; move to first perimeter point G1 X107.983 Y113.787 ; move to first perimeter point G1 X108.601 Y111.751 ; move to first perimeter point G1 X108.593 Y111.574 ; move to first perimeter point G1 X108.443 Y111.58 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.552284 G1 F2250 G1 X108.447 Y111.7 E6.50192 ; perimeter ;WIDTH:0.517229 G1 X108.451 Y111.819 E6.50369 ; perimeter ;WIDTH:0.482174 G1 X108.454 Y111.938 E6.50533 ; perimeter ;WIDTH:0.458506 G1 X108.381 Y112.505 E6.51278 ; perimeter G1 X108.296 Y112.768 E6.51638 ; perimeter ;WIDTH:0.424891 G1 X108.211 Y113.03 E6.51968 ; perimeter ;WIDTH:0.391276 G1 X107.996 Y113.491 E6.52524 ; perimeter ;WIDTH:0.385752 G1 X107.896 Y113.668 E6.52743 ; perimeter G1 E.02743 F1500 ; retract G92 E0 ; reset extrusion distance G1 X108.013 Y113.736 F9000 ; move to first perimeter point G1 X108.586 Y111.402 ; move to first perimeter point G1 X104.17 Y111.281 ; move to first perimeter point G1 X103.754 Y111.281 ; move to first perimeter point G1 X103.754 Y111.082 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:External perimeter ;WIDTH:0.438366 G1 F2250 G1 X103.779 Y111.139 E6.50077 ; perimeter ;WIDTH:0.463863 G1 X103.835 Y111.165 E6.50158 ; perimeter ;WIDTH:0.48936 G1 X103.892 Y111.192 E6.50246 ; perimeter G1 X107.9 Y111.192 E6.55856 ; perimeter G1 X108.416 Y111.169 E6.56579 ; perimeter ;WIDTH:0.44468 G1 X108.931 Y111.147 E6.57228 ; perimeter ;WIDTH:0.399999 G1 X108.74 Y112.758 E6.59044 ; perimeter G1 X108.171 Y113.901 E6.60473 ; perimeter ;WIDTH:0.438032 G1 X108.03 Y113.98 E6.60673 ; perimeter ;WIDTH:0.476065 G1 X107.888 Y114.059 E6.60894 ; perimeter ;WIDTH:0.514097 G1 X107.747 Y114.138 E6.61133 ; perimeter G1 X107.26 Y114.492 E6.62022 ; perimeter ;WIDTH:0.510783 G1 X106.878 Y114.604 E6.62606 ; perimeter ;WIDTH:0.467891 G1 X106.382 Y114.699 E6.63279 ; perimeter ;WIDTH:0.4701 G1 X105.827 Y114.767 E6.64028 ; perimeter ;WIDTH:0.486022 G1 X105.18 Y114.702 E6.64931 ; perimeter ;WIDTH:0.516688 G1 X104.578 Y114.513 E6.65868 ; perimeter ;WIDTH:0.537825 G1 X103.924 Y114.116 E6.67055 ; perimeter ;WIDTH:0.491883 G1 X103.773 Y114.011 E6.67314 ; perimeter ;WIDTH:0.445941 G1 X103.622 Y113.906 E6.67546 ; perimeter ;WIDTH:0.399999 G1 X103.275 Y113.405 E6.68228 ; perimeter G1 X103.025 Y112.798 E6.68963 ; perimeter G1 X102.872 Y112.081 E6.69784 ; perimeter G1 X102.82 Y111.252 E6.70714 ; perimeter G1 X102.872 Y110.381 E6.71691 ; perimeter G1 X103.025 Y109.633 E6.72546 ; perimeter G1 X103.276 Y109.009 E6.73299 ; perimeter G1 X103.597 Y108.54 E6.73935 ; perimeter G1 X103.833 Y108.315 E6.743 ; perimeter ;WIDTH:0.445317 G1 X103.999 Y108.225 E6.74538 ; perimeter ;WIDTH:0.490635 G1 X104.164 Y108.135 E6.74802 ; perimeter ;WIDTH:0.535953 G1 X104.801 Y107.827 E6.75896 ; perimeter ;WIDTH:0.504491 G1 X105.346 Y107.691 E6.76709 ; perimeter ;WIDTH:0.483772 G1 X105.893 Y107.645 E6.77468 ; perimeter ;WIDTH:0.477737 G1 X106.394 Y107.681 E6.78153 ; perimeter ;WIDTH:0.502293 G1 X106.903 Y107.75 E6.78893 ; perimeter G1 X107.262 Y107.871 E6.79439 ; perimeter ;WIDTH:0.535398 G1 X107.759 Y108.096 E6.80281 ; perimeter ;WIDTH:0.559025 G1 X108.253 Y108.529 E6.81344 ; perimeter ;WIDTH:0.559465 G1 X108.52 Y108.965 E6.82172 ; perimeter G1 X108.007 Y109.111 E6.83036 ; perimeter G1 X107.832 Y108.821 E6.83585 ; perimeter ;WIDTH:0.547079 G1 X107.435 Y108.467 E6.84426 ; perimeter ;WIDTH:0.535398 G1 X107.025 Y108.258 E6.85137 ; perimeter ;WIDTH:0.490424 G1 X106.381 Y108.107 E6.86065 ; perimeter ;WIDTH:0.477099 G1 X105.961 Y108.078 E6.86638 ; perimeter ;WIDTH:0.480472 G1 X105.454 Y108.12 E6.87336 ; perimeter ;WIDTH:0.501174 G1 X104.989 Y108.249 E6.88029 ; perimeter ;WIDTH:0.539253 G1 X104.549 Y108.488 E6.88808 ; perimeter G1 X104.451 Y108.624 E6.89069 ; perimeter ;WIDTH:0.492835 G1 X104.352 Y108.76 E6.89306 ; perimeter ;WIDTH:0.446417 G1 X104.254 Y108.895 E6.89517 ; perimeter ;WIDTH:0.399999 G1 X104 Y109.332 E6.90083 ; perimeter G1 X103.829 Y109.829 E6.90671 ; perimeter G1 X103.735 Y110.34 E6.91253 ; perimeter G1 X103.701 Y110.959 E6.91947 ; perimeter ;WIDTH:0.438366 G1 X103.73 Y111.027 E6.92039 ; perimeter G1 X104.096 Y111.188 F9000 ; move inwards before travel G1 E.42039 F1500 ; retract G92 E0 ; reset extrusion distance G1 X104.096 Y111.281 F9000 ; move to first perimeter point G1 X108.586 Y111.402 ; move to first perimeter point G1 X107.888 Y113.882 ; move to first perimeter point G1 X107.671 Y114.067 ; move to first perimeter point G1 X111.301 Y117.064 ; move to first perimeter point G1 X111.301 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.506442 G1 F2250 G1 X111.301 Y108.146 E6.62851 ; perimeter G1 X111.711 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X111.711 Y108.146 E6.6331 ; perimeter G1 X111.711 Y117.4 E6.7367 ; perimeter G1 X110.89 Y117.4 E6.74589 ; perimeter G1 X110.89 Y107.736 E6.85408 ; perimeter G1 X111.651 Y107.736 E6.8626 ; perimeter G1 X111.71 Y108.132 F9000 ; move inwards before travel G1 E.3626 F1500 ; retract G92 E0 ; reset extrusion distance G1 X111.42 Y108.168 F9000 ; move to first perimeter point G1 X114.386 Y117.064 ; move to first perimeter point G1 X114.386 Y116.989 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.50644 G1 F2250 G1 X114.386 Y108.146 E6.6285 ; perimeter G1 X114.797 Y107.736 F9000 ; move to first perimeter point ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X114.797 Y108.146 E6.63309 ; perimeter G1 X114.797 Y117.4 E6.73669 ; perimeter G1 X113.976 Y117.4 E6.74588 ; perimeter G1 X113.976 Y107.736 E6.85407 ; perimeter G1 X114.737 Y107.736 E6.86259 ; perimeter G1 X114.796 Y108.132 F9000 ; move inwards before travel G1 E.36259 F1500 ; retract G92 E0 ; reset extrusion distance G1 X114.506 Y108.168 F9000 ; move to first perimeter point G1 X117.842 Y108.468 ; move to first perimeter point G1 X118.289 Y108.42 ; move to first perimeter point G1 X118.359 Y108.525 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.53475 G1 F2250 G1 X118.379 Y108.493 E6.50058 ; perimeter G1 X118.788 Y108.25 E6.50792 ; perimeter ;WIDTH:0.496092 G1 X119.263 Y108.111 E6.51495 ; perimeter ;WIDTH:0.473934 G1 X119.762 Y108.067 E6.52172 ; perimeter G1 X120.276 Y108.111 E6.52869 ; perimeter ;WIDTH:0.491884 G1 X120.76 Y108.244 E6.53576 ; perimeter ;WIDTH:0.529435 G1 X121.2 Y108.489 E6.54344 ; perimeter G1 X121.289 Y108.617 E6.54582 ; perimeter ;WIDTH:0.488852 G1 X121.378 Y108.746 E6.54801 ; perimeter ;WIDTH:0.448269 G1 X121.468 Y108.874 E6.55 ; perimeter ;WIDTH:0.407686 G1 X121.699 Y109.32 E6.55574 ; perimeter ;WIDTH:0.399999 G1 X121.852 Y109.831 E6.56171 ; perimeter G1 X121.949 Y110.456 E6.56879 ; perimeter G1 X121.985 Y111.204 E6.57717 ; perimeter G1 X121.956 Y111.928 E6.58528 ; perimeter G1 X121.87 Y112.552 E6.59233 ; perimeter G1 X121.723 Y113.079 E6.59845 ; perimeter G1 X121.486 Y113.549 E6.60434 ; perimeter ;WIDTH:0.445292 G1 X121.396 Y113.681 E6.60636 ; perimeter ;WIDTH:0.490585 G1 X121.306 Y113.813 E6.6086 ; perimeter ;WIDTH:0.535878 G1 X121.216 Y113.945 E6.61107 ; perimeter G1 X120.805 Y114.171 E6.61832 ; perimeter ;WIDTH:0.495604 G1 X120.335 Y114.3 E6.62524 ; perimeter ;WIDTH:0.473786 G1 X119.834 Y114.342 E6.63203 ; perimeter ;WIDTH:0.470433 G1 X119.298 Y114.287 E6.63925 ; perimeter ;WIDTH:0.497375 G1 X118.766 Y114.144 E6.6471 ; perimeter ;WIDTH:0.516089 G1 X118.355 Y113.887 E6.65429 ; perimeter G1 X118.268 Y113.758 E6.6566 ; perimeter ;WIDTH:0.477393 G1 X118.18 Y113.629 E6.65873 ; perimeter ;WIDTH:0.438696 G1 X118.093 Y113.5 E6.66066 ; perimeter ;WIDTH:0.399999 G1 X117.869 Y113.064 E6.66615 ; perimeter G1 X117.718 Y112.562 E6.67202 ; perimeter G1 X117.623 Y111.937 E6.6791 ; perimeter G1 X117.591 Y111.219 E6.68715 ; perimeter G1 X117.62 Y110.521 E6.69497 ; perimeter G1 X117.711 Y109.91 E6.70189 ; perimeter G1 X117.864 Y109.383 E6.70803 ; perimeter G1 X118.088 Y108.932 E6.71367 ; perimeter G1 X118.158 Y108.845 E6.71492 ; perimeter ;WIDTH:0.444916 G1 X118.231 Y108.727 E6.71667 ; perimeter ;WIDTH:0.489833 G1 X118.305 Y108.61 E6.71861 ; perimeter ;WIDTH:0.53475 G1 X118.327 Y108.575 E6.71925 ; perimeter G1 X118.649 Y108.338 F9000 ; move inwards before travel G1 E.21925 F1500 ; retract G92 E0 ; reset extrusion distance G1 X118.446 Y108.006 F9000 ; move to first perimeter point G1 X121.029 Y107.958 ; move to first perimeter point G1 X121.733 Y108.46 ; move to first perimeter point G1 X121.84 Y108.567 ; move to first perimeter point G1 X121.745 Y108.662 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:Perimeter ;WIDTH:0.432577 G1 F2250 G1 X121.897 Y108.901 E6.50346 ; perimeter ;WIDTH:0.474706 G1 X122.05 Y109.14 E6.5073 ; perimeter ;WIDTH:0.502218 G1 X122.153 Y109.426 E6.51168 ; perimeter ;WIDTH:0.52973 G1 X122.257 Y109.712 E6.51632 ; perimeter ;WIDTH:0.558436 G1 X122.381 Y110.393 E6.52751 ; perimeter ;WIDTH:0.565436 G1 X122.424 Y111.185 E6.5405 ; perimeter G1 X122.391 Y111.945 E6.55296 ; perimeter ;WIDTH:0.555306 G1 X122.289 Y112.611 E6.56378 ; perimeter ;WIDTH:0.532506 G1 X122.113 Y113.189 E6.57305 ; perimeter ;WIDTH:0.495618 G1 X121.981 Y113.434 E6.577 ; perimeter ;WIDTH:0.467626 G1 X121.849 Y113.679 E6.58071 ; perimeter ;WIDTH:0.439634 G1 X121.705 Y113.842 E6.58342 ; perimeter G1 E.08342 F1500 ; retract G92 E0 ; reset extrusion distance G1 X121.802 Y113.937 F9000 ; move to first perimeter point G1 X119.81 Y114.691 ; move to first perimeter point G1 X117.684 Y113.794 ; move to first perimeter point G1 X117.653 Y113.736 ; move to first perimeter point G1 X117.769 Y113.674 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;WIDTH:0.428144 G1 F2250 G1 X117.513 Y113.171 E6.50682 ; perimeter ;WIDTH:0.477329 G1 X117.415 Y112.928 E6.51039 ; perimeter ;WIDTH:0.526514 G1 X117.316 Y112.686 E6.51435 ; perimeter G1 X117.219 Y111.997 E6.5249 ; perimeter ;WIDTH:0.530951 G1 X117.187 Y111.618 E6.53072 ; perimeter ;WIDTH:0.559864 G1 X117.154 Y111.238 E6.5369 ; perimeter G1 X117.186 Y110.503 E6.54882 ; perimeter ;WIDTH:0.55471 G1 X117.294 Y109.847 E6.55949 ; perimeter ;WIDTH:0.52903 G1 X117.48 Y109.269 E6.56874 ; perimeter ;WIDTH:0.486726 G1 X117.617 Y109.021 E6.57268 ; perimeter ;WIDTH:0.45646 G1 X117.754 Y108.773 E6.57635 ; perimeter ;WIDTH:0.426194 G1 X117.888 Y108.617 E6.57882 ; perimeter G1 E.07882 F1500 ; retract G92 E0 ; reset extrusion distance G1 X117.789 Y108.524 F9000 ; move to first perimeter point G1 X117.017 Y111.204 ; move to first perimeter point G1 X117.571 Y113.583 ; move to first perimeter point G1 X117.683 Y113.794 ; move to first perimeter point G1 X117.486 Y113.923 ; move to first perimeter point G1 E6.5 F1500 ;  ; unretract ;TYPE:External perimeter ;WIDTH:0.399999 G1 F2250 G1 X116.909 Y112.813 E6.514 ; perimeter G1 X116.712 Y111.159 E6.53265 ; perimeter G1 X116.765 Y110.336 E6.54188 ; perimeter G1 X116.92 Y109.6 E6.5503 ; perimeter G1 X117.19 Y108.956 E6.55812 ; perimeter G1 X117.515 Y108.48 E6.56457 ; perimeter ;WIDTH:0.441054 G1 X117.668 Y108.37 E6.56692 ; perimeter ;WIDTH:0.482109 G1 X117.821 Y108.259 E6.56952 ; perimeter ;WIDTH:0.523163 G1 X117.973 Y108.149 E6.57234 ; perimeter G1 X118.421 Y107.9 E6.58006 ; perimeter ;WIDTH:0.518741 G1 X118.656 Y107.817 E6.58378 ; perimeter ;WIDTH:0.496092 G1 X119.224 Y107.681 E6.59208 ; perimeter ;WIDTH:0.473934 G1 X119.797 Y107.64 E6.59984 ; perimeter ;WIDTH:0.483367 G1 X120.48 Y107.703 E6.60931 ; perimeter ;WIDTH:0.502039 G1 X120.996 Y107.847 E6.61702 ; perimeter ;WIDTH:0.529435 G1 X121.625 Y108.181 E6.62788 ; perimeter ;WIDTH:0.488852 G1 X121.79 Y108.282 E6.63058 ; perimeter ;WIDTH:0.448269 G1 X121.954 Y108.383 E6.63303 ; perimeter ;WIDTH:0.407686 G1 X122.112 Y108.54 E6.63558 ; perimeter ;WIDTH:0.399999 G1 X122.461 Y109.091 E6.64288 ; perimeter G1 X122.692 Y109.735 E6.65054 ; perimeter G1 X122.822 Y110.459 E6.65877 ; perimeter G1 X122.865 Y111.237 E6.66749 ; perimeter G1 X122.812 Y112.125 E6.67745 ; perimeter G1 X122.662 Y112.883 E6.6861 ; perimeter G1 X122.41 Y113.513 E6.6937 ; perimeter G1 X122.084 Y113.984 E6.70011 ; perimeter ;WIDTH:0.437478 G1 X121.937 Y114.087 E6.70233 ; perimeter ;WIDTH:0.474956 G1 X121.789 Y114.19 E6.70477 ; perimeter ;WIDTH:0.512434 G1 X121.642 Y114.292 E6.7074 ; perimeter ;WIDTH:0.522118 G1 X121.188 Y114.52 E6.71503 ; perimeter G1 X120.929 Y114.606 E6.71913 ; perimeter ;WIDTH:0.495604 G1 X120.37 Y114.729 E6.72725 ; perimeter ;WIDTH:0.473786 G1 X119.746 Y114.763 E6.73569 ; perimeter ;WIDTH:0.468761 G1 X119.161 Y114.675 E6.74359 ; perimeter ;WIDTH:0.484181 G1 X118.81 Y114.601 E6.74855 ; perimeter ;WIDTH:0.517386 G1 X118.459 Y114.526 E6.75389 ; perimeter G1 X118.044 Y114.24 E6.76139 ; perimeter ;WIDTH:0.516089 G1 X117.858 Y114.134 E6.76457 ; perimeter ;WIDTH:0.477393 G1 X117.672 Y114.029 E6.76748 ; perimeter ;WIDTH:0.438696 G1 X117.538 Y113.953 E6.76939 ; perimeter G1 X117.328 Y113.612 F9000 ; move inwards before travel G1 E.26939 F1500 ; retract G92 E0 ; reset extrusion distance M107 ; disable fan ;TYPE:Custom ; Filament-specific end gcode  ;END gcode for filament ; # # # # # # START Footer G91 \t\t\t; relative coordinates ;G1 E-1 F1200\t\t; retract the filament G1 Z+15  X-10 Y-10 E-7  F6000\t\t; move Z a bit ; G1 X-10 Y-10 F6000\t; move XY a bit G1 E-5.5 F300\t\t; retract the filament G28 X0 Y0\t\t; move X/Y to min endstops, so the head is out of the way M104 S0\t\t\t; extruder heater off M140 S0\t\t\t; heated bed heater off (if you have it) M84 \t\t\t; disable motors ; # # # # # # END Footer ; objects_info = {\"objects\":[]} ; filament used [mm] = 212.13 ; filament used [cm3] = 1.35 ; filament used [g] = 1.68 ; total filament used [g] = 1.68 ; total filament cost = 0.00 ; total filament used for wipe tower [g] = 0.00 ; estimated printing time (normal mode) = 11m 22s ; estimated first layer printing time (normal mode) = 4m 6s  ; prusaslicer_config = begin ; arc_fitting = disabled ; autoemit_temperature_commands = 1 ; automatic_extrusion_widths = 0 ; automatic_infill_combination = 0 ; automatic_infill_combination_max_layer_height = 100% ; avoid_crossing_curled_overhangs = 0 ; avoid_crossing_perimeters = 1 ; avoid_crossing_perimeters_max_detour = 0 ; bed_custom_model =  ; bed_custom_texture =  ; bed_shape = 0x0,224x0,224x225,0x225 ; bed_temperature = 60 ; bed_temperature_extruder = 0 ; before_layer_gcode = ;BEFORE_LAYER_CHANGE\\n;M117 Layer [layer_num];\\n;LAYER:[layer_num] ; between_objects_gcode =  ; binary_gcode = 0 ; bottom_fill_pattern = rectilinear ; bottom_solid_layers = 4 ; bottom_solid_min_thickness = 0 ; bridge_acceleration = 0 ; bridge_angle = 0 ; bridge_fan_speed = 100 ; bridge_flow_ratio = 1 ; bridge_speed = 35 ; brim_separation = 0 ; brim_type = outer_only ; brim_width = 5 ; chamber_minimal_temperature = 0 ; chamber_temperature = 0 ; color_change_gcode = M600 ; colorprint_heights =  ; compatible_printers_condition_cummulative = \"(printer_model==\\\"ULTIMAKER2\\\" or printer_model==\\\"ULTIMAKERSline\\\") and nozzle_diameter[0]==0.4\";printer_notes=~/.*PRINTER_VENDOR_ULTIMAKER.*/ ; complete_objects = 0 ; cooling = 1 ; cooling_tube_length = 5 ; cooling_tube_retraction = 91.5 ; default_acceleration = 0 ; default_filament_profile = \"Generic PLA @ULTIMAKER\" ; default_print_profile = 0.20mm NORMAL @ULTIMAKER ; deretract_speed = 0 ; disable_fan_first_layers = 3 ; dont_support_bridges = 0 ; draft_shield = disabled ; duplicate_distance = 6 ; elefant_foot_compensation = 0.08 ; enable_dynamic_fan_speeds = 0 ; enable_dynamic_overhang_speeds = 0 ; end_filament_gcode = \"; Filament-specific end gcode \\n;END gcode for filament\\n\" ; end_gcode = ; # # # # # # START Footer\\nG91 \t\t\t; relative coordinates\\n;G1 E-1 F1200\t\t; retract the filament\\nG1 Z+15  X-10 Y-10 E-7  F6000\t\t; move Z a bit\\n; G1 X-10 Y-10 F6000\t; move XY a bit\\nG1 E-5.5 F300\t\t; retract the filament\\nG28 X0 Y0\t\t; move X/Y to min endstops, so the head is out of the way\\nM104 S0\t\t\t; extruder heater off\\nM140 S0\t\t\t; heated bed heater off (if you have it)\\nM84 \t\t\t; disable motors\\n; # # # # # # END Footer\\n ; ensure_vertical_shell_thickness = partial ; external_perimeter_acceleration = 0 ; external_perimeter_extrusion_width = 0.4 ; external_perimeter_speed = 50% ; external_perimeters_first = 0 ; extra_loading_move = -2 ; extra_perimeters = 1 ; extra_perimeters_on_overhangs = 0 ; extruder_clearance_height = 50 ; extruder_clearance_radius = 60 ; extruder_colour = #F9A800 ; extruder_offset = 0x0 ; extrusion_axis = E ; extrusion_multiplier = 1 ; extrusion_width = 0.4 ; fan_always_on = 1 ; fan_below_layer_time = 100 ; filament_abrasive = 0 ; filament_colour = #C0C0C0 ; filament_cooling_final_speed = 3.4 ; filament_cooling_initial_speed = 2.2 ; filament_cooling_moves = 4 ; filament_cost = 0 ; filament_density = 1.24 ; filament_deretract_speed = nil ; filament_diameter = 2.85 ; filament_infill_max_crossing_speed = 0 ; filament_infill_max_speed = 0 ; filament_load_time = 0 ; filament_loading_speed = 28 ; filament_loading_speed_start = 3 ; filament_max_volumetric_speed = 0 ; filament_minimal_purge_on_wipe_tower = 15 ; filament_multitool_ramming = 0 ; filament_multitool_ramming_flow = 10 ; filament_multitool_ramming_volume = 10 ; filament_notes = \"\" ; filament_purge_multiplier = 100% ; filament_ramming_parameters = \"120 100 6.6 6.8 7.2 7.6 7.9 8.2 8.7 9.4 9.9 10.0| 0.05 6.6 0.45 6.8 0.95 7.8 1.45 8.3 1.95 9.7 2.45 10 2.95 7.6 3.45 7.6 3.95 7.6 4.45 7.6 4.95 7.6\" ; filament_retract_before_travel = nil ; filament_retract_before_wipe = nil ; filament_retract_layer_change = nil ; filament_retract_length = nil ; filament_retract_length_toolchange = nil ; filament_retract_lift = nil ; filament_retract_lift_above = nil ; filament_retract_lift_below = nil ; filament_retract_restart_extra = nil ; filament_retract_restart_extra_toolchange = nil ; filament_retract_speed = nil ; filament_seam_gap_distance = nil ; filament_settings_id = \"Generic PLA @ULTIMAKER\" ; filament_shrinkage_compensation_xy = 0% ; filament_shrinkage_compensation_z = 0% ; filament_soluble = 0 ; filament_spool_weight = 0 ; filament_stamping_distance = 0 ; filament_stamping_loading_speed = 20 ; filament_toolchange_delay = 0 ; filament_travel_lift_before_obstacle = nil ; filament_travel_max_lift = nil ; filament_travel_ramping_lift = nil ; filament_travel_slope = nil ; filament_type = PLA ; filament_unload_time = 0 ; filament_unloading_speed = 90 ; filament_unloading_speed_start = 100 ; filament_vendor = Generic ; filament_wipe = nil ; fill_angle = 45 ; fill_density = 10% ; fill_pattern = grid ; first_layer_acceleration = 0 ; first_layer_acceleration_over_raft = 0 ; first_layer_bed_temperature = 55 ; first_layer_extrusion_width = 0.4 ; first_layer_height = 0.2 ; first_layer_infill_speed = 0 ; first_layer_speed = 25% ; first_layer_speed_over_raft = 25% ; first_layer_temperature = 205 ; full_fan_speed_layer = 0 ; fuzzy_skin = none ; fuzzy_skin_point_dist = 0.8 ; fuzzy_skin_thickness = 0.3 ; gap_fill_enabled = 1 ; gap_fill_speed = 20 ; gcode_comments = 1 ; gcode_flavor = marlin ; gcode_label_objects = disabled ; gcode_resolution = 0.0125 ; gcode_substitutions =  ; high_current_on_filament_swap = 0 ; host_type = prusalink ; idle_temperature = nil ; infill_acceleration = 0 ; infill_anchor = 600% ; infill_anchor_max = 50 ; infill_every_layers = 1 ; infill_extruder = 1 ; infill_extrusion_width = 0.4 ; infill_first = 1 ; infill_overlap = 35% ; infill_speed = 70 ; interface_shells = 0 ; interlocking_beam = 0 ; interlocking_beam_layer_count = 2 ; interlocking_beam_width = 0.8 ; interlocking_boundary_avoidance = 2 ; interlocking_depth = 2 ; interlocking_orientation = 22.5 ; ironing = 0 ; ironing_flowrate = 15% ; ironing_spacing = 0.1 ; ironing_speed = 15 ; ironing_type = top ; layer_gcode =  ; layer_height = 0.2 ; machine_limits_usage = time_estimate_only ; machine_max_acceleration_e = 10000 ; machine_max_acceleration_extruding = 3000 ; machine_max_acceleration_retracting = 3000 ; machine_max_acceleration_travel = 1500,1250 ; machine_max_acceleration_x = 9000 ; machine_max_acceleration_y = 9000 ; machine_max_acceleration_z = 100 ; machine_max_feedrate_e = 120 ; machine_max_feedrate_x = 300 ; machine_max_feedrate_y = 300 ; machine_max_feedrate_z = 40 ; machine_max_jerk_e = 10 ; machine_max_jerk_x = 20 ; machine_max_jerk_y = 20 ; machine_max_jerk_z = 0.4 ; machine_min_extruding_rate = 0 ; machine_min_travel_rate = 0 ; max_fan_speed = 100 ; max_layer_height = 0.3 ; max_print_height = 212 ; max_print_speed = 100 ; max_volumetric_extrusion_rate_slope_negative = 0 ; max_volumetric_extrusion_rate_slope_positive = 0 ; max_volumetric_speed = 0 ; min_bead_width = 85% ; min_fan_speed = 100 ; min_feature_size = 25% ; min_layer_height = 0.06 ; min_print_speed = 5 ; min_skirt_length = 2 ; mmu_segmented_region_interlocking_depth = 0 ; mmu_segmented_region_max_width = 0 ; multimaterial_purging = 140 ; notes = Ultimaker, 0.4 mm Nozzle ; nozzle_diameter = 0.4 ; nozzle_high_flow = 0 ; only_one_perimeter_first_layer = 0 ; only_retract_when_crossing_perimeters = 1 ; ooze_prevention = 1 ; output_filename_format = {input_filename_base}_{layer_height}mm_{filament_type[0]}_{printer_model}_{print_time}.gcode ; over_bridge_speed = 0 ; overhang_fan_speed_0 = 0 ; overhang_fan_speed_1 = 0 ; overhang_fan_speed_2 = 0 ; overhang_fan_speed_3 = 0 ; overhang_speed_0 = 15 ; overhang_speed_1 = 15 ; overhang_speed_2 = 20 ; overhang_speed_3 = 25 ; overhangs = 1 ; parking_pos_retraction = 92 ; pause_print_gcode = M601 ; perimeter_acceleration = 0 ; perimeter_extruder = 1 ; perimeter_extrusion_width = 0.4 ; perimeter_generator = arachne ; perimeter_speed = 50 ; perimeters = 2 ; physical_printer_settings_id =  ; post_process =  ; prefer_clockwise_movements = 0 ; print_settings_id = 0.20mm NORMAL @ULTIMAKER ; printer_model = ULTIMAKER2 ; printer_notes = Dont remove the following keywords! These keywords are used in the \"compatible printer\" condition of the print and filament profiles to link the particular print and filament profiles to this printer profile.\\nPRINTER_VENDOR_ULTIMAKER\\nPRINTER_MODEL_ULTIMAKER2 ; printer_settings_id = Ultimaker 2 ; printer_technology = FFF ; printer_variant = 0.4 ; printer_vendor =  ; profile_vendor = Ultimaker ; profile_version = 2.1.0 ; raft_contact_distance = 0.1 ; raft_expansion = 1.5 ; raft_first_layer_density = 90% ; raft_first_layer_expansion = 3 ; raft_layers = 0 ; remaining_times = 0 ; resolution = 0 ; retract_before_travel = 1.2 ; retract_before_wipe = 0% ; retract_layer_change = 1 ; retract_length = 6.5 ; retract_length_toolchange = 16 ; retract_lift = 0 ; retract_lift_above = 0 ; retract_lift_below = 0 ; retract_restart_extra = 0 ; retract_restart_extra_toolchange = 0 ; retract_speed = 25 ; scarf_seam_entire_loop = 0 ; scarf_seam_length = 20 ; scarf_seam_max_segment_length = 1 ; scarf_seam_on_inner_perimeters = 0 ; scarf_seam_only_on_smooth = 1 ; scarf_seam_placement = nowhere ; scarf_seam_start_height = 0% ; seam_gap_distance = 15% ; seam_position = aligned ; silent_mode = 0 ; single_extruder_multi_material = 0 ; single_extruder_multi_material_priming = 1 ; skirt_distance = 3 ; skirt_height = 1 ; skirts = 1 ; slice_closing_radius = 0.049 ; slicing_mode = regular ; slowdown_below_layer_time = 6 ; small_perimeter_speed = 75% ; solid_infill_acceleration = 0 ; solid_infill_below_area = 10 ; solid_infill_every_layers = 0 ; solid_infill_extruder = 1 ; solid_infill_extrusion_width = 0.4 ; solid_infill_speed = 75% ; spiral_vase = 0 ; staggered_inner_seams = 0 ; standby_temperature_delta = -30 ; start_filament_gcode = \"; Filament gcode\\n\" ; start_gcode = ; Printer_Settings_ID: [printer_settings_id]\\n\\n; # # # # # # START Header\\nG21 \t\t; metric values\\nG90 \t\t; absolute positioning\\nM82 \t\t; set extruder to absolute mode\\nM107 \t\t; start with the fan off\\n\\nM140 S[first_layer_bed_temperature]\t; start bed heating\\n\\nG28 X0 Y0 Z0\t; move X/Y/Z to endstops\\nG1 X1 Y6 F15000\t; move X/Y to start position\\nG1 Z35 F9000\t; move Z to start position\\n\\n; Wait for bed and nozzle temperatures\\nM190 S{first_layer_bed_temperature[0] - 5}\t; wait for bed temperature - 5\\nM140 S[first_layer_bed_temperature]\t; continue bed heating\\nM109 S[first_layer_temperature]\t; wait for nozzle temperature\\n\\n; Purge and prime\\nM83 \t\t; set extruder to relative mode\\nG92 E0           ; reset extrusion distance\\nG0 X0 Y1 F10000\\nG1 F150 E20 ; compress the bowden tube\\nG1 E-8 F1200\\nG0 X30 Y1 F5000    \\nG0 F1200 Z{first_layer_height/2} ; Cut the connection to priming blob\\nG0 X100 F10000 ; disconnect with the prime blob\\nG0 X50         ; Avoid the metal clip holding the Ultimaker glass plate\\nG0 Z0.2 F720\\nG1 E8 F1200\\nG1 X80 E3 F1000  ; intro line 1\\nG1 X110 E4 F1000 ; intro line 2\\nG1 X140 F600        ; drag filament to decompress bowden tube\\nG1 X100 F3200       ; wipe backwards a bit\\nG1 X150 F3200       ; back to where there is no plastic: avoid dragging\\nG92 E0           ; reset extruder reference\\nM82 \t\t; set extruder to absolute mode\\n\\n; # # # # # # END Header ; support_material = 0 ; support_material_angle = 45 ; support_material_auto = 1 ; support_material_bottom_contact_distance = 0 ; support_material_bottom_interface_layers = -1 ; support_material_buildplate_only = 1 ; support_material_closing_radius = 2 ; support_material_contact_distance = 0.2 ; support_material_enforce_layers = 0 ; support_material_extruder = 1 ; support_material_extrusion_width = 0.38 ; support_material_interface_contact_loops = 0 ; support_material_interface_extruder = 1 ; support_material_interface_layers = 2 ; support_material_interface_pattern = auto ; support_material_interface_spacing = 0.2 ; support_material_interface_speed = 100% ; support_material_pattern = rectilinear-grid ; support_material_spacing = 4 ; support_material_speed = 60 ; support_material_style = grid ; support_material_synchronize_layers = 0 ; support_material_threshold = 0 ; support_material_with_sheath = 0 ; support_material_xy_spacing = 0.8 ; support_tree_angle = 40 ; support_tree_angle_slow = 25 ; support_tree_branch_diameter = 2 ; support_tree_branch_diameter_angle = 5 ; support_tree_branch_diameter_double_wall = 3 ; support_tree_branch_distance = 1 ; support_tree_tip_diameter = 0.8 ; support_tree_top_rate = 15% ; temperature = 210 ; template_custom_gcode =  ; thick_bridges = 1 ; thin_walls = 0 ; thumbnails = 100x100/PNG ; thumbnails_format = PNG ; toolchange_gcode =  ; top_fill_pattern = rectilinear ; top_infill_extrusion_width = 0.4 ; top_one_perimeter_type = none ; top_solid_infill_acceleration = 0 ; top_solid_infill_speed = 50% ; top_solid_layers = 5 ; top_solid_min_thickness = 0 ; travel_acceleration = 0 ; travel_lift_before_obstacle = 0 ; travel_max_lift = 0 ; travel_ramping_lift = 0 ; travel_slope = 0 ; travel_speed = 150 ; travel_speed_z = 0 ; use_firmware_retraction = 0 ; use_relative_e_distances = 0 ; use_volumetric_e = 0 ; variable_layer_height = 0 ; wall_distribution_count = 1 ; wall_transition_angle = 10 ; wall_transition_filter_deviation = 25% ; wall_transition_length = 100% ; wipe = 0 ; wipe_into_infill = 0 ; wipe_into_objects = 0 ; wipe_tower = 0 ; wipe_tower_acceleration = 0 ; wipe_tower_bridging = 10 ; wipe_tower_brim_width = 2 ; wipe_tower_cone_angle = 0 ; wipe_tower_extra_flow = 100% ; wipe_tower_extra_spacing = 100% ; wipe_tower_extruder = 0 ; wipe_tower_no_sparse_layers = 0 ; wipe_tower_width = 60 ; wiping_volumes_matrix = 0 ; wiping_volumes_use_custom_matrix = 0 ; xy_size_compensation = 0 ; z_offset = 0 ; prusaslicer_config = end",
        "payloadType": "str",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "de7db996f953c2e9"
            ]
        ]
    },
    {
        "id": "de7db996f953c2e9",
        "type": "file",
        "z": "ed507ef4772f051f",
        "name": "Save to /tmp/backfill.gcode",
        "filename": "/tmp/backfill.gcode",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 330,
        "y": 280,
        "wires": [
            [
                "1214e10345096aa7"
            ]
        ]
    },
    {
        "id": "1214e10345096aa7",
        "type": "function",
        "z": "ed507ef4772f051f",
        "name": "Build Analyzer Command",
        "func": "msg.payload = '/home/ubuntu/monitor_ml/gcode_analyzer.py --file /tmp/backfill.gcode --jobid ' + msg.job_id_to_backfill;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 340,
        "wires": [
            [
                "0eae4627cc3cdc44",
                "fa30ad497d36fa67"
            ]
        ]
    },
    {
        "id": "0eae4627cc3cdc44",
        "type": "exec",
        "z": "ed507ef4772f051f",
        "command": "/home/ubuntu/monitor_ml/venv/bin/python",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run G-code Analyzer",
        "x": 710,
        "y": 420,
        "wires": [
            [
                "8f163e9da27d8c62",
                "37e2e68fdc9307bf"
            ],
            [
                "58fdd135535b7ffe"
            ],
            [
                "2d6911d1dcc8c74c"
            ]
        ]
    },
    {
        "id": "8f163e9da27d8c62",
        "type": "json",
        "z": "ed507ef4772f051f",
        "name": "Parse Analyzer Output",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 950,
        "y": 420,
        "wires": [
            [
                "d65a9dced80b15b5"
            ]
        ]
    },
    {
        "id": "d65a9dced80b15b5",
        "type": "function",
        "z": "ed507ef4772f051f",
        "name": "Prepare DB Update",
        "func": "const analysisResult = msg.payload;\nconst jobId = msg.job_id_to_backfill;\n\nif (!analysisResult) {\n    node.warn(\"Analyzer did not return any data. Stopping.\");\n    return null;\n}\n\n// Prepare parameters for the SQL query.\nmsg.params = [\n    analysisResult.thumbnail_url,\n    analysisResult.per_part_analysis ? JSON.stringify(analysisResult.per_part_analysis) : null,\n    jobId\n];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 480,
        "wires": [
            [
                "9895f34fb367b570",
                "2994aef786917ed2"
            ]
        ]
    },
    {
        "id": "9895f34fb367b570",
        "type": "postgresql",
        "z": "ed507ef4772f051f",
        "name": "",
        "query": "UPDATE print_jobs\nSET\n  thumbnail_url = $1,\n  per_part_analysis = $2\nWHERE\n  simplyprint_job_id = $3;",
        "postgreSQLConfig": "4259e91acb63e17b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1020,
        "y": 560,
        "wires": [
            [
                "97cdb29e85fcfaab"
            ]
        ]
    },
    {
        "id": "97cdb29e85fcfaab",
        "type": "debug",
        "z": "ed507ef4772f051f",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 620,
        "wires": []
    },
    {
        "id": "2994aef786917ed2",
        "type": "debug",
        "z": "ed507ef4772f051f",
        "name": "debug 38",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 360,
        "wires": []
    },
    {
        "id": "58fdd135535b7ffe",
        "type": "debug",
        "z": "ed507ef4772f051f",
        "name": "debug 47",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 480,
        "wires": []
    },
    {
        "id": "2d6911d1dcc8c74c",
        "type": "debug",
        "z": "ed507ef4772f051f",
        "name": "debug 56",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 520,
        "wires": []
    },
    {
        "id": "37e2e68fdc9307bf",
        "type": "debug",
        "z": "ed507ef4772f051f",
        "name": "debug 57",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 340,
        "wires": []
    },
    {
        "id": "fa30ad497d36fa67",
        "type": "debug",
        "z": "ed507ef4772f051f",
        "name": "debug 58",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 300,
        "wires": []
    }
]